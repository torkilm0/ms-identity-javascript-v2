{"version":3,"file":"msal-browser.js","sources":["../../msal-common/dist/index.es.js","../src/utils/BrowserConstants.ts","../src/network/FetchClient.ts","../src/error/BrowserAuthError.ts","../src/network/XhrClient.ts","../src/utils/BrowserUtils.ts","../src/config/Configuration.ts","../src/error/BrowserConfigurationAuthError.ts","../src/cache/BrowserStorage.ts","../src/utils/MathUtils.ts","../src/crypto/GuidGenerator.ts","../src/utils/BrowserStringUtils.ts","../src/encode/Base64Encode.ts","../src/encode/Base64Decode.ts","../src/crypto/PkceGenerator.ts","../src/crypto/BrowserCrypto.ts","../src/crypto/CryptoOps.ts","../src/interaction_handler/InteractionHandler.ts","../src/interaction_handler/RedirectHandler.ts","../src/interaction_handler/PopupHandler.ts","../src/interaction_handler/SilentHandler.ts","../src/app/PublicClientApplication.ts"],"sourcesContent":["/*! @azure/msal-common v1.0.0-beta.4 2020-07-07 */\n'use strict';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * AuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar AuthErrorMessage = {\r\n    unexpectedError: {\r\n        code: \"unexpected_error\",\r\n        desc: \"Unexpected error in authentication.\"\r\n    }\r\n};\r\n/**\r\n * General error class thrown by the MSAL.js library.\r\n */\r\nvar AuthError = /** @class */ (function (_super) {\r\n    __extends(AuthError, _super);\r\n    function AuthError(errorCode, errorMessage) {\r\n        var _this = this;\r\n        var errorString = errorMessage ? errorCode + \": \" + errorMessage : errorCode;\r\n        _this = _super.call(this, errorString) || this;\r\n        Object.setPrototypeOf(_this, AuthError.prototype);\r\n        _this.errorCode = errorCode;\r\n        _this.errorMessage = errorMessage;\r\n        _this.name = \"AuthError\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error that is thrown when something unexpected happens in the library.\r\n     * @param errDesc\r\n     */\r\n    AuthError.createUnexpectedError = function (errDesc) {\r\n        return new AuthError(AuthErrorMessage.unexpectedError.code, AuthErrorMessage.unexpectedError.desc + \": \" + errDesc);\r\n    };\r\n    return AuthError;\r\n}(Error));\n\nvar name = \"@azure/msal-common\";\nvar author = {\n\tname: \"Microsoft\",\n\temail: \"nugetaad@microsoft.com\",\n\turl: \"https://www.microsoft.com\"\n};\nvar license = \"MIT\";\nvar repository = {\n\ttype: \"git\",\n\turl: \"https://github.com/AzureAD/microsoft-authentication-library-for-js.git\"\n};\nvar version = \"1.0.0-beta.4\";\nvar description = \"Microsoft Authentication Library for js\";\nvar keywords = [\n\t\"implicit\",\n\t\"authorization code\",\n\t\"PKCE\",\n\t\"js\",\n\t\"AAD\",\n\t\"msal\",\n\t\"oauth\"\n];\nvar main = \"./dist/index.js\";\nvar module = \"./dist/index.es.js\";\nvar types = \"./dist/src/index.d.ts\";\nvar browserslist = [\n\t\"last 1 version\",\n\t\"> 1%\",\n\t\"maintained node versions\",\n\t\"not dead\"\n];\nvar engines = {\n\tnode: \">=0.8.0\"\n};\nvar directories = {\n\ttest: \"test\"\n};\nvar files = [\n\t\"dist\"\n];\nvar scripts = {\n\tclean: \"shx rm -rf dist lib\",\n\t\"clean:coverage\": \"rimraf ../../.nyc_output/*\",\n\tdoc: \"npm run doc:generate && npm run doc:deploy\",\n\t\"doc:generate\": \"typedoc --mode modules --excludePrivate --excludeProtected --excludeNotExported --out ./ref ./src/ --gitRevision dev\",\n\t\"doc:deploy\": \"gh-pages -d ref -a -e ref/msal-common\",\n\tlint: \"eslint src --ext .ts\",\n\ttest: \"mocha\",\n\t\"test:coverage\": \"nyc --reporter=text mocha --exit\",\n\t\"test:coverage:only\": \"npm run clean:coverage && npm run test:coverage\",\n\t\"build:modules\": \"rollup -c\",\n\t\"build:modules:watch\": \"rollup -cw\",\n\tbuild: \"npm run clean && npm run lint && npm run build:modules\",\n\tprepack: \"npm run build\"\n};\nvar devDependencies = {\n\t\"@babel/core\": \"^7.7.2\",\n\t\"@babel/plugin-proposal-class-properties\": \"^7.7.0\",\n\t\"@babel/plugin-proposal-object-rest-spread\": \"^7.6.2\",\n\t\"@babel/polyfill\": \"^7.7.0\",\n\t\"@babel/preset-env\": \"^7.7.1\",\n\t\"@babel/preset-typescript\": \"^7.7.2\",\n\t\"@babel/register\": \"^7.7.0\",\n\t\"@istanbuljs/nyc-config-babel\": \"^2.1.1\",\n\t\"@rollup/plugin-json\": \"^4.0.0\",\n\t\"@types/chai\": \"^4.2.5\",\n\t\"@types/chai-as-promised\": \"^7.1.2\",\n\t\"@types/debug\": \"^4.1.5\",\n\t\"@types/mocha\": \"^5.2.7\",\n\t\"@types/sinon\": \"^7.5.0\",\n\t\"@typescript-eslint/eslint-plugin\": \"^2.4.0\",\n\t\"@typescript-eslint/eslint-plugin-tslint\": \"^2.4.0\",\n\t\"@typescript-eslint/parser\": \"^2.4.0\",\n\t\"babel-plugin-istanbul\": \"^5.2.0\",\n\tchai: \"^4.2.0\",\n\t\"chai-as-promised\": \"^7.1.1\",\n\teslint: \"^6.5.1\",\n\t\"gh-pages\": \"^3.1.0\",\n\thusky: \"^3.0.9\",\n\tmocha: \"^6.2.2\",\n\tnyc: \"^14.1.1\",\n\trimraf: \"^3.0.2\",\n\trollup: \"^1.24.0\",\n\t\"rollup-plugin-typescript2\": \"^0.24.3\",\n\t\"rollup-plugin-uglify\": \"^6.0.4\",\n\tshx: \"^0.3.2\",\n\tsinon: \"^7.5.0\",\n\ttslib: \"^1.10.0\",\n\ttslint: \"^5.20.0\",\n\ttypedoc: \"^0.17.8\",\n\ttypescript: \"^3.7.5\"\n};\nvar dependencies = {\n\tdebug: \"^4.1.1\"\n};\nvar pkg = {\n\tname: name,\n\tauthor: author,\n\tlicense: license,\n\trepository: repository,\n\tversion: version,\n\tdescription: description,\n\tkeywords: keywords,\n\tmain: main,\n\tmodule: module,\n\ttypes: types,\n\tbrowserslist: browserslist,\n\tengines: engines,\n\tdirectories: directories,\n\tfiles: files,\n\tscripts: scripts,\n\tdevDependencies: devDependencies,\n\tdependencies: dependencies\n};\n\n/**\r\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar ClientAuthErrorMessage = {\r\n    clientInfoDecodingError: {\r\n        code: \"client_info_decoding_error\",\r\n        desc: \"The client info could not be parsed/decoded correctly. Please review the trace to determine the root cause.\"\r\n    },\r\n    clientInfoEmptyError: {\r\n        code: \"client_info_empty_error\",\r\n        desc: \"The client info was empty. Please review the trace to determine the root cause.\"\r\n    },\r\n    idTokenParsingError: {\r\n        code: \"id_token_parsing_error\",\r\n        desc: \"ID token cannot be parsed. Please review stack trace to determine root cause.\"\r\n    },\r\n    nullOrEmptyIdToken: {\r\n        code: \"null_or_empty_id_token\",\r\n        desc: \"The idToken is null or empty. Please review the trace to determine the root cause.\"\r\n    },\r\n    endpointResolutionError: {\r\n        code: \"endpoints_resolution_error\",\r\n        desc: \"Error: could not resolve endpoints. Please check network and try again.\"\r\n    },\r\n    invalidAuthorityType: {\r\n        code: \"invalid_authority_type\",\r\n        desc: \"The given authority is not a valid type of authority supported by MSAL. Please review the trace to determine the root cause.\"\r\n    },\r\n    hashNotDeserialized: {\r\n        code: \"hash_not_deserialized\",\r\n        desc: \"The hash parameters could not be deserialized. Please review the trace to determine the root cause.\"\r\n    },\r\n    blankGuidGenerated: {\r\n        code: \"blank_guid_generated\",\r\n        desc: \"The guid generated was blank. Please review the trace to determine the root cause.\"\r\n    },\r\n    invalidStateError: {\r\n        code: \"invalid_state\",\r\n        desc: \"State was not the expected format. Please check the logs to determine whether the request was sent using ProtocolUtils.setRequestState().\"\r\n    },\r\n    stateMismatchError: {\r\n        code: \"state_mismatch\",\r\n        desc: \"State mismatch error. Please check your network. Continued requests may cause cache overflow.\"\r\n    },\r\n    nonceMismatchError: {\r\n        code: \"nonce_mismatch\",\r\n        desc: \"Nonce mismatch error. This may be caused by a race condition in concurrent requests.\"\r\n    },\r\n    accountMismatchError: {\r\n        code: \"account_mismatch\",\r\n        desc: \"The cached account and account which made the token request do not match.\"\r\n    },\r\n    invalidIdToken: {\r\n        code: \"invalid_id_token\",\r\n        desc: \"Invalid ID token format.\"\r\n    },\r\n    noTokensFoundError: {\r\n        code: \"no_tokens_found\",\r\n        desc: \"No tokens were found for the given scopes, and no authorization code was passed to acquireToken. You must retrieve an authorization code before making a call to acquireToken().\"\r\n    },\r\n    cacheParseError: {\r\n        code: \"cache_parse_error\",\r\n        desc: \"Could not parse cache key.\"\r\n    },\r\n    userLoginRequiredError: {\r\n        code: \"user_login_error\",\r\n        desc: \"User login is required.\"\r\n    },\r\n    multipleMatchingTokens: {\r\n        code: \"multiple_matching_tokens\",\r\n        desc: \"The cache contains multiple tokens satisfying the requirements. \" +\r\n            \"Call AcquireToken again providing more requirements such as authority or account.\"\r\n    },\r\n    multipleMatchingAccounts: {\r\n        code: \"multiple_matching_accounts\",\r\n        desc: \"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account\"\r\n    },\r\n    tokenRequestCannotBeMade: {\r\n        code: \"request_cannot_be_made\",\r\n        desc: \"Token request cannot be made without authorization code or refresh token.\"\r\n    },\r\n    appendEmptyScopeError: {\r\n        code: \"cannot_append_empty_scope\",\r\n        desc: \"Cannot append null or empty scope to ScopeSet. Please check the stack trace for more info.\"\r\n    },\r\n    removeEmptyScopeError: {\r\n        code: \"cannot_remove_empty_scope\",\r\n        desc: \"Cannot remove null or empty scope from ScopeSet. Please check the stack trace for more info.\"\r\n    },\r\n    appendScopeSetError: {\r\n        code: \"cannot_append_scopeset\",\r\n        desc: \"Cannot append ScopeSet due to error.\"\r\n    },\r\n    emptyInputScopeSetError: {\r\n        code: \"empty_input_scopeset\",\r\n        desc: \"Empty input ScopeSet cannot be processed.\"\r\n    },\r\n    DeviceCodePollingCancelled: {\r\n        code: \"device_code_polling_cancelled\",\r\n        desc: \"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.\"\r\n    },\r\n    DeviceCodeExpired: {\r\n        code: \"device_code_expired\",\r\n        desc: \"Device code is expired.\"\r\n    },\r\n    NoAccountInSilentRequest: {\r\n        code: \"no_account_in_silent_request\",\r\n        desc: \"Please pass an account object, silent flow is not supported without account information\"\r\n    },\r\n    invalidCacheRecord: {\r\n        code: \"invalid_cache_record\",\r\n        desc: \"Cache record object was null or undefined.\"\r\n    },\r\n    invalidCacheEnvironment: {\r\n        code: \"invalid_cache_environment\",\r\n        desc: \"Invalid environment when attempting to create cache entry\"\r\n    },\r\n    noAccountFound: {\r\n        code: \"no_account_found\",\r\n        desc: \"No account found in cache for given key.\"\r\n    },\r\n    CachePluginError: {\r\n        code: \"no cache plugin set on CacheManager\",\r\n        desc: \"ICachePlugin needs to be set before using readFromStorage or writeFromStorage\"\r\n    },\r\n    noCryptoObj: {\r\n        code: \"no_crypto_object\",\r\n        desc: \"No crypto object detected. This is required for the following operation: \"\r\n    },\r\n    invalidCacheType: {\r\n        code: \"invalid_cache_type\",\r\n        desc: \"Invalid cache type\"\r\n    },\r\n    unexpectedAccountType: {\r\n        code: \"unexpected_account_type\",\r\n        desc: \"Unexpected account type.\"\r\n    },\r\n    unexpectedCredentialType: {\r\n        code: \"unexpected_credential_type\",\r\n        desc: \"Unexpected credential type.\"\r\n    }\r\n};\r\n/**\r\n * Error thrown when there is an error in the client code running on the browser.\r\n */\r\nvar ClientAuthError = /** @class */ (function (_super) {\r\n    __extends(ClientAuthError, _super);\r\n    function ClientAuthError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ClientAuthError\";\r\n        Object.setPrototypeOf(_this, ClientAuthError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error thrown when client info object doesn't decode correctly.\r\n     * @param caughtError\r\n     */\r\n    ClientAuthError.createClientInfoDecodingError = function (caughtError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoDecodingError.code, ClientAuthErrorMessage.clientInfoDecodingError.desc + \" Failed with error: \" + caughtError);\r\n    };\r\n    /**\r\n     * Creates an error thrown if the client info is empty.\r\n     * @param rawClientInfo\r\n     */\r\n    ClientAuthError.createClientInfoEmptyError = function (rawClientInfo) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoEmptyError.code, ClientAuthErrorMessage.clientInfoEmptyError.desc + \" Given Object: \" + rawClientInfo);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the id token extraction errors out.\r\n     * @param err\r\n     */\r\n    ClientAuthError.createIdTokenParsingError = function (caughtExtractionError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.idTokenParsingError.code, ClientAuthErrorMessage.idTokenParsingError.desc + \" Failed with error: \" + caughtExtractionError);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the id token string is null or empty.\r\n     * @param invalidRawTokenString\r\n     */\r\n    ClientAuthError.createIdTokenNullOrEmptyError = function (invalidRawTokenString) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nullOrEmptyIdToken.code, ClientAuthErrorMessage.nullOrEmptyIdToken.desc + \" Raw ID Token Value: \" + invalidRawTokenString);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the endpoint discovery doesn't complete correctly.\r\n     */\r\n    ClientAuthError.createEndpointDiscoveryIncompleteError = function (errDetail) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.endpointResolutionError.code, ClientAuthErrorMessage.endpointResolutionError.desc + \" Detail: \" + errDetail);\r\n    };\r\n    /**\r\n     * Creates an error thrown if authority type is not valid.\r\n     * @param invalidAuthorityError\r\n     */\r\n    ClientAuthError.createInvalidAuthorityTypeError = function (givenUrl) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidAuthorityType.code, ClientAuthErrorMessage.invalidAuthorityType.desc + \" Given Url: \" + givenUrl);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the hash cannot be deserialized.\r\n     * @param invalidAuthorityError\r\n     */\r\n    ClientAuthError.createHashNotDeserializedError = function (hashParamObj) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.hashNotDeserialized.code, ClientAuthErrorMessage.hashNotDeserialized.desc + \" Given Object: \" + hashParamObj);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the state cannot be parsed.\r\n     * @param invalidState\r\n     */\r\n    ClientAuthError.createInvalidStateError = function (invalidState, errorString) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidStateError.code, ClientAuthErrorMessage.invalidStateError.desc + \" Invalid State: \" + invalidState + \", Root Err: \" + errorString);\r\n    };\r\n    /**\r\n     * Creates an error thrown when two states do not match.\r\n     */\r\n    ClientAuthError.createStateMismatchError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.stateMismatchError.code, ClientAuthErrorMessage.stateMismatchError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the nonce does not match.\r\n     */\r\n    ClientAuthError.createNonceMismatchError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nonceMismatchError.code, ClientAuthErrorMessage.nonceMismatchError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the cached account and response account do not match.\r\n     */\r\n    ClientAuthError.createAccountMismatchError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.accountMismatchError.code, ClientAuthErrorMessage.accountMismatchError.desc);\r\n    };\r\n    /**\r\n     * Throws error if idToken is not correctly formed\r\n     * @param idToken\r\n     */\r\n    ClientAuthError.createInvalidIdTokenError = function (idToken) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidIdToken.code, ClientAuthErrorMessage.invalidIdToken.desc + \" Given token: \" + JSON.stringify(idToken));\r\n    };\r\n    /**\r\n     * Creates an error thrown when the authorization code required for a token request is null or empty.\r\n     */\r\n    ClientAuthError.createNoTokensFoundError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.noTokensFoundError.code, ClientAuthErrorMessage.noTokensFoundError.desc);\r\n    };\r\n    /**\r\n     * Creates an error in cache parsing.\r\n     */\r\n    ClientAuthError.createCacheParseError = function (cacheKey) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.cacheParseError.code, ClientAuthErrorMessage.cacheParseError.desc + \" Cache key: \" + cacheKey);\r\n    };\r\n    /**\r\n     * Throws error when renewing token without login.\r\n     */\r\n    ClientAuthError.createUserLoginRequiredError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.userLoginRequiredError.code, ClientAuthErrorMessage.userLoginRequiredError.desc);\r\n    };\r\n    /**\r\n     * Throws error when multiple tokens are in cache for the given scope.\r\n     * @param scope\r\n     */\r\n    ClientAuthError.createMultipleMatchingTokensInCacheError = function (scope) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingTokens.code, \"Cache error for scope \" + scope + \": \" + ClientAuthErrorMessage.multipleMatchingTokens.desc + \".\");\r\n    };\r\n    /**\r\n     * Throws error when multiple tokens are in cache for the given scope.\r\n     * @param scope\r\n     */\r\n    ClientAuthError.createMultipleMatchingAccountsInCacheError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingAccounts.code, ClientAuthErrorMessage.multipleMatchingAccounts.desc);\r\n    };\r\n    /**\r\n     * Throws error when no auth code or refresh token is given to ServerTokenRequestParameters.\r\n     */\r\n    ClientAuthError.createTokenRequestCannotBeMadeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.tokenRequestCannotBeMade.code, ClientAuthErrorMessage.tokenRequestCannotBeMade.desc);\r\n    };\r\n    /**\r\n     * Throws error when attempting to append a null, undefined or empty scope to a set\r\n     * @param givenScope\r\n     */\r\n    ClientAuthError.createAppendEmptyScopeToSetError = function (givenScope) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.appendEmptyScopeError.code, ClientAuthErrorMessage.appendEmptyScopeError.desc + \" Given Scope: \" + givenScope);\r\n    };\r\n    /**\r\n     * Throws error when attempting to append a null, undefined or empty scope to a set\r\n     * @param givenScope\r\n     */\r\n    ClientAuthError.createRemoveEmptyScopeFromSetError = function (givenScope) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.removeEmptyScopeError.code, ClientAuthErrorMessage.removeEmptyScopeError.desc + \" Given Scope: \" + givenScope);\r\n    };\r\n    /**\r\n     * Throws error when attempting to append null or empty ScopeSet.\r\n     * @param appendError\r\n     */\r\n    ClientAuthError.createAppendScopeSetError = function (appendError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.appendScopeSetError.code, ClientAuthErrorMessage.appendScopeSetError.desc + \" Detail Error: \" + appendError);\r\n    };\r\n    /**\r\n     * Throws error if ScopeSet is null or undefined.\r\n     * @param givenScopeSet\r\n     */\r\n    ClientAuthError.createEmptyInputScopeSetError = function (givenScopeSet) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.emptyInputScopeSetError.code, ClientAuthErrorMessage.emptyInputScopeSetError.desc + \" Given ScopeSet: \" + givenScopeSet);\r\n    };\r\n    /**\r\n     * Throws error if user sets CancellationToken.cancel = true during polling of token endpoint during device code flow\r\n     */\r\n    ClientAuthError.createDeviceCodeCancelledError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.DeviceCodePollingCancelled.code, \"\" + ClientAuthErrorMessage.DeviceCodePollingCancelled.desc);\r\n    };\r\n    /**\r\n     * Throws error if device code is expired\r\n     */\r\n    ClientAuthError.createDeviceCodeExpiredError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.DeviceCodeExpired.code, \"\" + ClientAuthErrorMessage.DeviceCodeExpired.desc);\r\n    };\r\n    /**\r\n     * Throws error when silent requests are made without an account object\r\n     */\r\n    ClientAuthError.createNoAccountInSilentRequestError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.NoAccountInSilentRequest.code, \"\" + ClientAuthErrorMessage.NoAccountInSilentRequest.desc);\r\n    };\r\n    /**\r\n     * Throws error when cache record is null or undefined.\r\n     */\r\n    ClientAuthError.createNullOrUndefinedCacheRecord = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheRecord.code, ClientAuthErrorMessage.invalidCacheRecord.desc);\r\n    };\r\n    /**\r\n     * Throws error when provided environment is not part of the CloudDiscoveryMetadata object\r\n     */\r\n    ClientAuthError.createInvalidCacheEnvironmentError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheEnvironment.code, ClientAuthErrorMessage.invalidCacheEnvironment.desc);\r\n    };\r\n    /**\r\n     * Throws error when account is not found in cache.\r\n     */\r\n    ClientAuthError.createNoAccountFoundError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.noAccountFound.code, ClientAuthErrorMessage.noAccountFound.desc);\r\n    };\r\n    /**\r\n     * Throws error if ICachePlugin not set on CacheManager.\r\n     */\r\n    ClientAuthError.createCachePluginError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.CachePluginError.code, \"\" + ClientAuthErrorMessage.CachePluginError.desc);\r\n    };\r\n    /**\r\n     * Throws error if crypto object not found.\r\n     * @param operationName\r\n     */\r\n    ClientAuthError.createNoCryptoObjectError = function (operationName) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.noCryptoObj.code, \"\" + ClientAuthErrorMessage.noCryptoObj.desc + operationName);\r\n    };\r\n    /**\r\n    * Throws error if cache type is invalid.\r\n    */\r\n    ClientAuthError.createInvalidCacheTypeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheType.code, \"\" + ClientAuthErrorMessage.invalidCacheType.desc);\r\n    };\r\n    /**\r\n    * Throws error if unexpected account type.\r\n    */\r\n    ClientAuthError.createUnexpectedAccountTypeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.unexpectedAccountType.code, \"\" + ClientAuthErrorMessage.unexpectedAccountType.desc);\r\n    };\r\n    /**\r\n    * Throws error if unexpected credential type.\r\n    */\r\n    ClientAuthError.createUnexpectedCredentialTypeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.unexpectedCredentialType.code, \"\" + ClientAuthErrorMessage.unexpectedCredentialType.desc);\r\n    };\r\n    return ClientAuthError;\r\n}(AuthError));\n\n/**\r\n * @hidden\r\n */\r\nvar StringUtils = /** @class */ (function () {\r\n    function StringUtils() {\r\n    }\r\n    /**\r\n     * decode a JWT\r\n     *\r\n     * @param jwtToken\r\n     */\r\n    StringUtils.decodeJwt = function (jwtToken) {\r\n        if (StringUtils.isEmpty(jwtToken)) {\r\n            throw ClientAuthError.createIdTokenNullOrEmptyError(jwtToken);\r\n        }\r\n        var idTokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\r\n        var matches = idTokenPartsRegex.exec(jwtToken);\r\n        if (!matches || matches.length < 4) {\r\n            throw ClientAuthError.createIdTokenParsingError(\"Given token is malformed: \" + JSON.stringify(jwtToken));\r\n        }\r\n        var crackedToken = {\r\n            header: matches[1],\r\n            JWSPayload: matches[2],\r\n            JWSSig: matches[3]\r\n        };\r\n        return crackedToken;\r\n    };\r\n    /**\r\n     * Check if a string is empty.\r\n     *\r\n     * @param str\r\n     */\r\n    StringUtils.isEmpty = function (str) {\r\n        return (typeof str === \"undefined\" || !str || 0 === str.length);\r\n    };\r\n    StringUtils.startsWith = function (str, search) {\r\n        return str.indexOf(search) === 0;\r\n    };\r\n    StringUtils.endsWith = function (str, search) {\r\n        return (str.length >= search.length) && (str.lastIndexOf(search) === (str.length - search.length));\r\n    };\r\n    /**\r\n     * Parses string into an object.\r\n     *\r\n     * @param query\r\n     */\r\n    StringUtils.queryStringToObject = function (query) {\r\n        var match; // Regex for replacing addition symbol with a space\r\n        var pl = /\\+/g;\r\n        var search = /([^&=]+)=([^&]*)/g;\r\n        var decode = function (s) { return decodeURIComponent(decodeURIComponent(s.replace(pl, \" \"))); };\r\n        var obj = {};\r\n        match = search.exec(query);\r\n        while (match) {\r\n            obj[decode(match[1])] = decode(match[2]);\r\n            match = search.exec(query);\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * Trims entries and converts them to lower case.\r\n     *\r\n     * @param arr\r\n     */\r\n    StringUtils.trimAndConvertArrayEntriesToLowerCase = function (arr) {\r\n        return arr.map(function (entry) { return entry.trim().toLowerCase(); });\r\n    };\r\n    /**\r\n     * Removes empty strings from array\r\n     * @param arr\r\n     */\r\n    StringUtils.removeEmptyStringsFromArray = function (arr) {\r\n        return arr.filter(function (entry) {\r\n            return !StringUtils.isEmpty(entry);\r\n        });\r\n    };\r\n    return StringUtils;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Log message level.\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Error\"] = 0] = \"Error\";\r\n    LogLevel[LogLevel[\"Warning\"] = 1] = \"Warning\";\r\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\r\n    LogLevel[LogLevel[\"Verbose\"] = 3] = \"Verbose\";\r\n})(LogLevel || (LogLevel = {}));\r\n/**\r\n * Class which facilitates logging of messages to a specific place.\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger(loggerOptions) {\r\n        // Current log level, defaults to info.\r\n        this.level = LogLevel.Info;\r\n        if (loggerOptions) {\r\n            this.localCallback = loggerOptions.loggerCallback;\r\n            this.piiLoggingEnabled = loggerOptions.piiLoggingEnabled;\r\n            this.level = loggerOptions.logLevel;\r\n        }\r\n    }\r\n    /**\r\n     * Log message with required options.\r\n     */\r\n    Logger.prototype.logMessage = function (logMessage, options) {\r\n        if ((options.logLevel > this.level) || (!this.piiLoggingEnabled && options.containsPii)) {\r\n            return;\r\n        }\r\n        var timestamp = new Date().toUTCString();\r\n        var logHeader = StringUtils.isEmpty(this.correlationId) ? \"[\" + timestamp + \"] : \" : \"[\" + timestamp + \"] : [\" + this.correlationId + \"]\";\r\n        var log = logHeader + \" : \" + pkg.version + \" : \" + LogLevel[options.logLevel] + \" - \" + logMessage;\r\n        // debug(`msal:${LogLevel[options.logLevel]}${options.containsPii ? \"-Pii\": \"\"}${options.context ? `:${options.context}` : \"\"}`)(logMessage);\r\n        this.executeCallback(options.logLevel, log, options.containsPii);\r\n    };\r\n    /**\r\n     * Execute callback with message.\r\n     */\r\n    Logger.prototype.executeCallback = function (level, message, containsPii) {\r\n        if (this.localCallback) {\r\n            this.localCallback(level, message, containsPii);\r\n        }\r\n    };\r\n    /**\r\n     * Logs error messages.\r\n     */\r\n    Logger.prototype.error = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs error messages with PII.\r\n     */\r\n    Logger.prototype.errorPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs warning messages.\r\n     */\r\n    Logger.prototype.warning = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs warning messages with PII.\r\n     */\r\n    Logger.prototype.warningPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs info messages.\r\n     */\r\n    Logger.prototype.info = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs info messages with PII.\r\n     */\r\n    Logger.prototype.infoPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs verbose messages.\r\n     */\r\n    Logger.prototype.verbose = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs verbose messages with PII.\r\n     */\r\n    Logger.prototype.verbosePii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether PII Logging is enabled or not.\r\n     */\r\n    Logger.prototype.isPiiLoggingEnabled = function () {\r\n        return this.piiLoggingEnabled || false;\r\n    };\r\n    return Logger;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar Constants = {\r\n    LIBRARY_NAME: \"MSAL.JS\",\r\n    SKU: \"msal.js.common\",\r\n    // Prefix for all library cache entries\r\n    CACHE_PREFIX: \"msal\",\r\n    // default authority\r\n    DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common/\",\r\n    DEFAULT_AUTHORITY_HOST: \"login.microsoftonline.com\",\r\n    // ADFS String\r\n    ADFS: \"adfs\",\r\n    // Default AAD Instance Discovery Endpoint\r\n    AAD_INSTANCE_DISCOVERY_ENDPT: \"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=\",\r\n    // Resource delimiter - used for certain cache entries\r\n    RESOURCE_DELIM: \"|\",\r\n    // Placeholder for non-existent account ids/objects\r\n    NO_ACCOUNT: \"NO_ACCOUNT\",\r\n    // Claims\r\n    CLAIMS: \"claims\",\r\n    // Consumer UTID\r\n    CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\r\n    // Default scopes\r\n    OPENID_SCOPE: \"openid\",\r\n    PROFILE_SCOPE: \"profile\",\r\n    OFFLINE_ACCESS_SCOPE: \"offline_access\",\r\n    // Default response type for authorization code flow\r\n    CODE_RESPONSE_TYPE: \"code\",\r\n    CODE_GRANT_TYPE: \"authorization_code\",\r\n    RT_GRANT_TYPE: \"refresh_token\",\r\n    FRAGMENT_RESPONSE_MODE: \"fragment\",\r\n    S256_CODE_CHALLENGE_METHOD: \"S256\",\r\n    URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded;charset=utf-8\",\r\n    AUTHORIZATION_PENDING: \"authorization_pending\",\r\n    NOT_DEFINED: \"not_defined\"\r\n};\r\n/**\r\n * Request header names\r\n */\r\nvar HeaderNames;\r\n(function (HeaderNames) {\r\n    HeaderNames[\"CONTENT_TYPE\"] = \"Content-Type\";\r\n})(HeaderNames || (HeaderNames = {}));\r\n/**\r\n * Persistent cache keys MSAL which stay while user is logged in.\r\n */\r\nvar PersistentCacheKeys;\r\n(function (PersistentCacheKeys) {\r\n    PersistentCacheKeys[\"ID_TOKEN\"] = \"idtoken\";\r\n    PersistentCacheKeys[\"CLIENT_INFO\"] = \"client.info\";\r\n    PersistentCacheKeys[\"ADAL_ID_TOKEN\"] = \"adal.idtoken\";\r\n    PersistentCacheKeys[\"ERROR\"] = \"error\";\r\n    PersistentCacheKeys[\"ERROR_DESC\"] = \"error.description\";\r\n})(PersistentCacheKeys || (PersistentCacheKeys = {}));\r\n/**\r\n * String constants related to AAD Authority\r\n */\r\nvar AADAuthorityConstants;\r\n(function (AADAuthorityConstants) {\r\n    AADAuthorityConstants[\"COMMON\"] = \"common\";\r\n    AADAuthorityConstants[\"ORGANIZATIONS\"] = \"organizations\";\r\n    AADAuthorityConstants[\"CONSUMERS\"] = \"consumers\";\r\n})(AADAuthorityConstants || (AADAuthorityConstants = {}));\r\n/**\r\n * Keys in the hashParams sent by AAD Server\r\n */\r\nvar AADServerParamKeys;\r\n(function (AADServerParamKeys) {\r\n    AADServerParamKeys[\"CLIENT_ID\"] = \"client_id\";\r\n    AADServerParamKeys[\"REDIRECT_URI\"] = \"redirect_uri\";\r\n    AADServerParamKeys[\"RESPONSE_TYPE\"] = \"response_type\";\r\n    AADServerParamKeys[\"RESPONSE_MODE\"] = \"response_mode\";\r\n    AADServerParamKeys[\"GRANT_TYPE\"] = \"grant_type\";\r\n    AADServerParamKeys[\"CLAIMS\"] = \"claims\";\r\n    AADServerParamKeys[\"SCOPE\"] = \"scope\";\r\n    AADServerParamKeys[\"ERROR\"] = \"error\";\r\n    AADServerParamKeys[\"ERROR_DESCRIPTION\"] = \"error_description\";\r\n    AADServerParamKeys[\"ACCESS_TOKEN\"] = \"access_token\";\r\n    AADServerParamKeys[\"ID_TOKEN\"] = \"id_token\";\r\n    AADServerParamKeys[\"REFRESH_TOKEN\"] = \"refresh_token\";\r\n    AADServerParamKeys[\"EXPIRES_IN\"] = \"expires_in\";\r\n    AADServerParamKeys[\"STATE\"] = \"state\";\r\n    AADServerParamKeys[\"NONCE\"] = \"nonce\";\r\n    AADServerParamKeys[\"PROMPT\"] = \"prompt\";\r\n    AADServerParamKeys[\"SESSION_STATE\"] = \"session_state\";\r\n    AADServerParamKeys[\"CLIENT_INFO\"] = \"client_info\";\r\n    AADServerParamKeys[\"CODE\"] = \"code\";\r\n    AADServerParamKeys[\"CODE_CHALLENGE\"] = \"code_challenge\";\r\n    AADServerParamKeys[\"CODE_CHALLENGE_METHOD\"] = \"code_challenge_method\";\r\n    AADServerParamKeys[\"CODE_VERIFIER\"] = \"code_verifier\";\r\n    AADServerParamKeys[\"CLIENT_REQUEST_ID\"] = \"client-request-id\";\r\n    AADServerParamKeys[\"X_CLIENT_SKU\"] = \"x-client-SKU\";\r\n    AADServerParamKeys[\"X_CLIENT_VER\"] = \"x-client-VER\";\r\n    AADServerParamKeys[\"X_CLIENT_OS\"] = \"x-client-OS\";\r\n    AADServerParamKeys[\"X_CLIENT_CPU\"] = \"x-client-CPU\";\r\n    AADServerParamKeys[\"POST_LOGOUT_URI\"] = \"post_logout_redirect_uri\";\r\n    AADServerParamKeys[\"DEVICE_CODE\"] = \"device_code\";\r\n})(AADServerParamKeys || (AADServerParamKeys = {}));\r\n/**\r\n * IdToken claim string constants\r\n */\r\nvar IdTokenClaimName;\r\n(function (IdTokenClaimName) {\r\n    IdTokenClaimName[\"ISSUER\"] = \"iss\";\r\n    IdTokenClaimName[\"OBJID\"] = \"oid\";\r\n    IdTokenClaimName[\"SUBJECT\"] = \"sub\";\r\n    IdTokenClaimName[\"TENANTID\"] = \"tid\";\r\n    IdTokenClaimName[\"VERSION\"] = \"ver\";\r\n    IdTokenClaimName[\"PREF_USERNAME\"] = \"preferred_username\";\r\n    IdTokenClaimName[\"NAME\"] = \"name\";\r\n    IdTokenClaimName[\"NONCE\"] = \"nonce\";\r\n    IdTokenClaimName[\"EXPIRATION\"] = \"exp\";\r\n    IdTokenClaimName[\"HOME_OBJID\"] = \"home_oid\";\r\n    IdTokenClaimName[\"SESSIONID\"] = \"sid\";\r\n    IdTokenClaimName[\"CLOUD_INSTANCE_HOSTNAME\"] = \"cloud_instance_host_name\";\r\n})(IdTokenClaimName || (IdTokenClaimName = {}));\r\n/**\r\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\r\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\r\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\r\n */\r\nvar PromptValue = {\r\n    LOGIN: \"login\",\r\n    SELECT_ACCOUNT: \"select_account\",\r\n    CONSENT: \"consent\",\r\n    NONE: \"none\",\r\n};\r\n/**\r\n * SSO Types - generated to populate hints\r\n */\r\nvar SSOTypes;\r\n(function (SSOTypes) {\r\n    SSOTypes[\"ACCOUNT\"] = \"account\";\r\n    SSOTypes[\"SID\"] = \"sid\";\r\n    SSOTypes[\"LOGIN_HINT\"] = \"login_hint\";\r\n    SSOTypes[\"ID_TOKEN\"] = \"id_token\";\r\n    SSOTypes[\"DOMAIN_HINT\"] = \"domain_hint\";\r\n    SSOTypes[\"ORGANIZATIONS\"] = \"organizations\";\r\n    SSOTypes[\"CONSUMERS\"] = \"consumers\";\r\n    SSOTypes[\"ACCOUNT_ID\"] = \"accountIdentifier\";\r\n    SSOTypes[\"HOMEACCOUNT_ID\"] = \"homeAccountIdentifier\";\r\n})(SSOTypes || (SSOTypes = {}));\r\n/**\r\n * Disallowed extra query parameters.\r\n */\r\nvar BlacklistedEQParams = [\r\n    SSOTypes.SID,\r\n    SSOTypes.LOGIN_HINT\r\n];\r\n/**\r\n * allowed values for codeVerifier\r\n */\r\nvar CodeChallengeMethodValues = {\r\n    PLAIN: \"plain\",\r\n    S256: \"S256\"\r\n};\r\n/**\r\n * allowed values for response_mode\r\n */\r\nvar ResponseMode;\r\n(function (ResponseMode) {\r\n    ResponseMode[\"QUERY\"] = \"query\";\r\n    ResponseMode[\"FRAGMENT\"] = \"fragment\";\r\n    ResponseMode[\"FORM_POST\"] = \"form_post\";\r\n})(ResponseMode || (ResponseMode = {}));\r\n/**\r\n * allowed grant_type\r\n */\r\nvar GrantType;\r\n(function (GrantType) {\r\n    GrantType[\"IMPLICIT_GRANT\"] = \"implicit\";\r\n    GrantType[\"AUTHORIZATION_CODE_GRANT\"] = \"authorization_code\";\r\n    GrantType[\"CLIENT_CREDENTIALS_GRANT\"] = \"client_credentials\";\r\n    GrantType[\"RESOURCE_OWNER_PASSWORD_GRANT\"] = \"password\";\r\n    GrantType[\"REFRESH_TOKEN_GRANT\"] = \"refresh_token\";\r\n    GrantType[\"DEVICE_CODE_GRANT\"] = \"device_code\";\r\n})(GrantType || (GrantType = {}));\r\n/**\r\n * Account types in Cache\r\n */\r\nvar CacheAccountType;\r\n(function (CacheAccountType) {\r\n    CacheAccountType[\"MSSTS_ACCOUNT_TYPE\"] = \"MSSTS\";\r\n    CacheAccountType[\"ADFS_ACCOUNT_TYPE\"] = \"ADFS\";\r\n    CacheAccountType[\"MSAV1_ACCOUNT_TYPE\"] = \"MSA\";\r\n    CacheAccountType[\"GENERIC_ACCOUNT_TYPE\"] = \"Generic\"; // NTLM, Kerberos, FBA, Basic etc\r\n})(CacheAccountType || (CacheAccountType = {}));\r\n/**\r\n * Separators used in cache\r\n */\r\nvar Separators;\r\n(function (Separators) {\r\n    Separators[\"CACHE_KEY_SEPARATOR\"] = \"-\";\r\n    Separators[\"CLIENT_INFO_SEPARATOR\"] = \".\";\r\n})(Separators || (Separators = {}));\r\n/**\r\n * Credentail Type stored in the cache\r\n */\r\nvar CredentialType;\r\n(function (CredentialType) {\r\n    CredentialType[\"ID_TOKEN\"] = \"IdToken\";\r\n    CredentialType[\"ACCESS_TOKEN\"] = \"AccessToken\";\r\n    CredentialType[\"REFRESH_TOKEN\"] = \"RefreshToken\";\r\n})(CredentialType || (CredentialType = {}));\r\n/**\r\n * Credentail Type stored in the cache\r\n */\r\nvar CacheSchemaType;\r\n(function (CacheSchemaType) {\r\n    CacheSchemaType[\"ACCOUNT\"] = \"Account\";\r\n    CacheSchemaType[\"CREDENTIAL\"] = \"Credential\";\r\n    CacheSchemaType[\"APP_META_DATA\"] = \"AppMetadata\";\r\n    CacheSchemaType[\"TEMPORARY\"] = \"TempCache\";\r\n})(CacheSchemaType || (CacheSchemaType = {}));\r\n/**\r\n * Combine all cache types\r\n */\r\nvar CacheType;\r\n(function (CacheType) {\r\n    CacheType[CacheType[\"ADFS\"] = 1001] = \"ADFS\";\r\n    CacheType[CacheType[\"MSA\"] = 1002] = \"MSA\";\r\n    CacheType[CacheType[\"MSSTS\"] = 1003] = \"MSSTS\";\r\n    CacheType[CacheType[\"GENERIC\"] = 1004] = \"GENERIC\";\r\n    CacheType[CacheType[\"ACCESS_TOKEN\"] = 2001] = \"ACCESS_TOKEN\";\r\n    CacheType[CacheType[\"REFRESH_TOKEN\"] = 2002] = \"REFRESH_TOKEN\";\r\n    CacheType[CacheType[\"ID_TOKEN\"] = 2003] = \"ID_TOKEN\";\r\n    CacheType[CacheType[\"APP_META_DATA\"] = 3001] = \"APP_META_DATA\";\r\n})(CacheType || (CacheType = {}));\r\n/**\r\n * More Cache related constants\r\n */\r\nvar APP_META_DATA = \"appmetadata\";\r\nvar ClientInfo = \"client_info\";\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Base type for credentials to be stored in the cache: eg: ACCESS_TOKEN, ID_TOKEN etc\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key: <home_account_id*>-<environment>-<credential_type>-<client_id>-<realm*>-<target*>\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\r\n *      clientId: client ID of the application\r\n *      secret: Actual credential as a string\r\n *      familyId: Family ID identifier, usually only used for refresh tokens\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\r\n * }\r\n */\r\nvar CredentialEntity = /** @class */ (function () {\r\n    function CredentialEntity() {\r\n    }\r\n    /**\r\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\r\n     */\r\n    CredentialEntity.prototype.generateAccountId = function () {\r\n        return CredentialEntity.generateAccountIdForCacheKey(this.homeAccountId, this.environment);\r\n    };\r\n    /**\r\n     * Generate Credential Id key component as per the schema: <credential_type>-<client_id>-<realm>\r\n     */\r\n    CredentialEntity.prototype.generateCredentialId = function () {\r\n        return CredentialEntity.generateCredentialIdForCacheKey(this.credentialType, this.clientId, this.realm, this.familyId);\r\n    };\r\n    /**\r\n     * Generate target key component as per schema: <target>\r\n     */\r\n    CredentialEntity.prototype.generateTarget = function () {\r\n        return CredentialEntity.generateTargetForCacheKey(this.target);\r\n    };\r\n    /**\r\n     * generates credential key\r\n     */\r\n    CredentialEntity.prototype.generateCredentialKey = function () {\r\n        return CredentialEntity.generateCredentialCacheKey(this.homeAccountId, this.environment, this.credentialType, this.clientId, this.realm, this.target, this.familyId);\r\n    };\r\n    /**\r\n     * returns the type of the cache (in this case credential)\r\n     */\r\n    CredentialEntity.prototype.generateType = function () {\r\n        switch (this.credentialType) {\r\n            case CredentialType.ID_TOKEN:\r\n                return CacheType.ID_TOKEN;\r\n            case CredentialType.ACCESS_TOKEN:\r\n                return CacheType.ACCESS_TOKEN;\r\n            case CredentialType.REFRESH_TOKEN:\r\n                return CacheType.REFRESH_TOKEN;\r\n            default: {\r\n                throw ClientAuthError.createUnexpectedCredentialTypeError();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * helper function to return `CredentialType`\r\n     * @param key\r\n     */\r\n    CredentialEntity.getCredentialType = function (key) {\r\n        if (key.indexOf(CredentialType.ACCESS_TOKEN.toLowerCase()) !== -1) {\r\n            return CredentialType.ACCESS_TOKEN;\r\n        }\r\n        else if (key.indexOf(CredentialType.ID_TOKEN.toLowerCase()) !== -1) {\r\n            return CredentialType.ID_TOKEN;\r\n        }\r\n        else if (key.indexOf(CredentialType.REFRESH_TOKEN.toLowerCase()) !== -1) {\r\n            return CredentialType.REFRESH_TOKEN;\r\n        }\r\n        return Constants.NOT_DEFINED;\r\n    };\r\n    /**\r\n     * generates credential key\r\n     */\r\n    CredentialEntity.generateCredentialCacheKey = function (homeAccountId, environment, credentialType, clientId, realm, target, familyId) {\r\n        var credentialKey = [\r\n            this.generateAccountIdForCacheKey(homeAccountId, environment),\r\n            this.generateCredentialIdForCacheKey(credentialType, clientId, realm, familyId),\r\n            this.generateTargetForCacheKey(target),\r\n        ];\r\n        return credentialKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    };\r\n    /**\r\n     * generates Account Id for keys\r\n     * @param homeAccountId\r\n     * @param environment\r\n     */\r\n    CredentialEntity.generateAccountIdForCacheKey = function (homeAccountId, environment) {\r\n        var accountId = [homeAccountId, environment];\r\n        return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    };\r\n    /**\r\n     * Generates Credential Id for keys\r\n     * @param credentialType\r\n     * @param realm\r\n     * @param clientId\r\n     * @param familyId\r\n     */\r\n    CredentialEntity.generateCredentialIdForCacheKey = function (credentialType, clientId, realm, familyId) {\r\n        var clientOrFamilyId = credentialType === CredentialType.REFRESH_TOKEN\r\n            ? familyId || clientId\r\n            : clientId;\r\n        var credentialId = [\r\n            credentialType,\r\n            clientOrFamilyId,\r\n            realm || \"\",\r\n        ];\r\n        return credentialId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    };\r\n    /**\r\n     * Generate target key component as per schema: <target>\r\n     */\r\n    CredentialEntity.generateTargetForCacheKey = function (scopes) {\r\n        return (scopes || \"\").toLowerCase();\r\n    };\r\n    return CredentialEntity;\r\n}());\n\n/**\r\n * ClientConfigurationErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar ClientConfigurationErrorMessage = {\r\n    redirectUriNotSet: {\r\n        code: \"redirect_uri_empty\",\r\n        desc: \"A redirect URI is required for all calls, and none has been set.\"\r\n    },\r\n    postLogoutUriNotSet: {\r\n        code: \"post_logout_uri_empty\",\r\n        desc: \"A post logout redirect has not been set.\"\r\n    },\r\n    claimsRequestParsingError: {\r\n        code: \"claims_request_parsing_error\",\r\n        desc: \"Could not parse the given claims request object.\"\r\n    },\r\n    authorityUriInsecure: {\r\n        code: \"authority_uri_insecure\",\r\n        desc: \"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\"\r\n    },\r\n    urlParseError: {\r\n        code: \"url_parse_error\",\r\n        desc: \"URL could not be parsed into appropriate segments.\"\r\n    },\r\n    urlEmptyError: {\r\n        code: \"empty_url_error\",\r\n        desc: \"URL was empty or null.\"\r\n    },\r\n    emptyScopesError: {\r\n        code: \"empty_input_scopes_error\",\r\n        desc: \"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.\"\r\n    },\r\n    nonArrayScopesError: {\r\n        code: \"nonarray_input_scopes_error\",\r\n        desc: \"Scopes cannot be passed as non-array.\"\r\n    },\r\n    clientIdSingleScopeError: {\r\n        code: \"clientid_input_scopes_error\",\r\n        desc: \"Client ID can only be provided as a single scope.\"\r\n    },\r\n    invalidPrompt: {\r\n        code: \"invalid_prompt_value\",\r\n        desc: \"Supported prompt values are 'login', 'select_account', 'consent' and 'none'.  Please see here for valid configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\",\r\n    },\r\n    tokenRequestEmptyError: {\r\n        code: \"token_request_empty\",\r\n        desc: \"Token request was empty and not found in cache.\"\r\n    },\r\n    logoutRequestEmptyError: {\r\n        code: \"logout_request_empty\",\r\n        desc: \"The logout request was null or undefined.\"\r\n    },\r\n    invalidCodeChallengeMethod: {\r\n        code: \"invalid_code_challenge_method\",\r\n        desc: \"code_challenge_method passed is invalid. Valid values are \\\"plain\\\" and \\\"S256\\\".\"\r\n    },\r\n    invalidCodeChallengeParams: {\r\n        code: \"pkce_params_missing\",\r\n        desc: \"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request\"\r\n    },\r\n    knownAuthoritiesAndCloudDiscoveryMetadata: {\r\n        code: \"invalid_known_authorities\",\r\n        desc: \"knownAuthorities and cloudDiscoveryMetadata cannot both be provided. Please provide cloudDiscoveryMetadata object for AAD, knownAuthorities otherwise.\"\r\n    },\r\n    invalidCloudDiscoveryMetadata: {\r\n        code: \"invalid_cloud_discovery_metadata\",\r\n        desc: \"Invalid cloudDiscoveryMetadata provided. Must be a JSON object containing tenant_discovery_endpoint and metadata fields\"\r\n    },\r\n    untrustedAuthority: {\r\n        code: \"untrusted_authority\",\r\n        desc: \"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.\"\r\n    }\r\n};\r\n/**\r\n * Error thrown when there is an error in configuration of the MSAL.js library.\r\n */\r\nvar ClientConfigurationError = /** @class */ (function (_super) {\r\n    __extends(ClientConfigurationError, _super);\r\n    function ClientConfigurationError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ClientConfigurationError\";\r\n        Object.setPrototypeOf(_this, ClientConfigurationError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error thrown when the redirect uri is empty (not set by caller)\r\n     */\r\n    ClientConfigurationError.createRedirectUriEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.redirectUriNotSet.code, ClientConfigurationErrorMessage.redirectUriNotSet.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\r\n     */\r\n    ClientConfigurationError.createPostLogoutRedirectUriEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.postLogoutUriNotSet.code, ClientConfigurationErrorMessage.postLogoutUriNotSet.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the claims request could not be successfully parsed\r\n     */\r\n    ClientConfigurationError.createClaimsRequestParsingError = function (claimsRequestParseError) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.claimsRequestParsingError.code, ClientConfigurationErrorMessage.claimsRequestParsingError.desc + \" Given value: \" + claimsRequestParseError);\r\n    };\r\n    /**\r\n     * Creates an error thrown if authority uri is given an insecure protocol.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createInsecureAuthorityUriError = function (urlString) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.authorityUriInsecure.code, ClientConfigurationErrorMessage.authorityUriInsecure.desc + \" Given URI: \" + urlString);\r\n    };\r\n    /**\r\n     * Creates an error thrown if URL string does not parse into separate segments.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createUrlParseError = function (urlParseError) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.urlParseError.code, ClientConfigurationErrorMessage.urlParseError.desc + \" Given Error: \" + urlParseError);\r\n    };\r\n    /**\r\n     * Creates an error thrown if URL string is empty or null.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createUrlEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.urlEmptyError.code, ClientConfigurationErrorMessage.urlEmptyError.desc);\r\n    };\r\n    /**\r\n     * Error thrown when scopes are not an array\r\n     * @param inputScopes\r\n     */\r\n    ClientConfigurationError.createScopesNonArrayError = function (inputScopes) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.nonArrayScopesError.code, ClientConfigurationErrorMessage.nonArrayScopesError.desc + \" Given Scopes: \" + inputScopes);\r\n    };\r\n    /**\r\n     * Error thrown when scopes are empty.\r\n     * @param scopesValue\r\n     */\r\n    ClientConfigurationError.createEmptyScopesArrayError = function (inputScopes) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.emptyScopesError.code, ClientConfigurationErrorMessage.emptyScopesError.desc + \" Given Scopes: \" + inputScopes);\r\n    };\r\n    /**\r\n     * Error thrown when client id scope is not provided as single scope.\r\n     * @param inputScopes\r\n     */\r\n    ClientConfigurationError.createClientIdSingleScopeError = function (inputScopes) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.clientIdSingleScopeError.code, ClientConfigurationErrorMessage.clientIdSingleScopeError.desc + \" Given Scopes: \" + inputScopes);\r\n    };\r\n    /**\r\n     * Error thrown when prompt is not an allowed type.\r\n     * @param promptValue\r\n     */\r\n    ClientConfigurationError.createInvalidPromptError = function (promptValue) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidPrompt.code, ClientConfigurationErrorMessage.invalidPrompt.desc + \" Given value: \" + promptValue);\r\n    };\r\n    /**\r\n     * Throws error when token request is empty and nothing cached in storage.\r\n     */\r\n    ClientConfigurationError.createEmptyLogoutRequestError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.logoutRequestEmptyError.code, ClientConfigurationErrorMessage.logoutRequestEmptyError.desc);\r\n    };\r\n    /**\r\n     * Throws error when token request is empty and nothing cached in storage.\r\n     */\r\n    ClientConfigurationError.createEmptyTokenRequestError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.tokenRequestEmptyError.code, ClientConfigurationErrorMessage.tokenRequestEmptyError.desc);\r\n    };\r\n    /**\r\n     * Throws error when an invalid code_challenge_method is passed by the user\r\n     */\r\n    ClientConfigurationError.createInvalidCodeChallengeMethodError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCodeChallengeMethod.code, ClientConfigurationErrorMessage.invalidCodeChallengeMethod.desc);\r\n    };\r\n    /**\r\n     * Throws error when both params: code_challenge and code_challenge_method are not passed together\r\n     */\r\n    ClientConfigurationError.createInvalidCodeChallengeParamsError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCodeChallengeParams.code, ClientConfigurationErrorMessage.invalidCodeChallengeParams.desc);\r\n    };\r\n    /**\r\n     * Throws an error when the user passes both knownAuthorities and cloudDiscoveryMetadata\r\n     */\r\n    ClientConfigurationError.createKnownAuthoritiesCloudDiscoveryMetadataError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.knownAuthoritiesAndCloudDiscoveryMetadata.code, ClientConfigurationErrorMessage.knownAuthoritiesAndCloudDiscoveryMetadata.desc);\r\n    };\r\n    /**\r\n     * Throws an error when the user passes invalid cloudDiscoveryMetadata\r\n     */\r\n    ClientConfigurationError.createInvalidCloudDiscoveryMetadataError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCloudDiscoveryMetadata.code, ClientConfigurationErrorMessage.invalidCloudDiscoveryMetadata.desc);\r\n    };\r\n    /**\r\n     * Throws error when provided authority is not a member of the trusted host list\r\n     */\r\n    ClientConfigurationError.createUntrustedAuthorityError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.untrustedAuthority.code, ClientConfigurationErrorMessage.untrustedAuthority.desc);\r\n    };\r\n    return ClientConfigurationError;\r\n}(ClientAuthError));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * The ScopeSet class creates a set of scopes. Scopes are case-insensitive, unique values, so the Set object in JS makes\r\n * the most sense to implement for this class. All scopes are trimmed and converted to lower case strings to ensure uniqueness of strings.\r\n */\r\nvar ScopeSet = /** @class */ (function () {\r\n    function ScopeSet(inputScopes) {\r\n        var _this = this;\r\n        // Filter empty string and null/undefined array items\r\n        var scopeArr = inputScopes ? StringUtils.trimAndConvertArrayEntriesToLowerCase(__spreadArrays(inputScopes)) : [];\r\n        var filteredInput = scopeArr ? StringUtils.removeEmptyStringsFromArray(scopeArr) : [];\r\n        // Validate and filter scopes (validate function throws if validation fails)\r\n        this.validateInputScopes(filteredInput);\r\n        this.scopes = new Set(); // Iterator in constructor not supported by IE11\r\n        filteredInput.forEach(function (scope) { return _this.scopes.add(scope); });\r\n    }\r\n    /**\r\n     * Factory method to create ScopeSet from space-delimited string\r\n     * @param inputScopeString\r\n     * @param appClientId\r\n     * @param scopesRequired\r\n    */\r\n    ScopeSet.fromString = function (inputScopeString) {\r\n        inputScopeString = inputScopeString || \"\";\r\n        var inputScopes = inputScopeString.split(\" \");\r\n        return new ScopeSet(inputScopes);\r\n    };\r\n    /**\r\n     * Used to validate the scopes input parameter requested  by the developer.\r\n     * @param {Array<string>} inputScopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\r\n     * @param {boolean} scopesRequired - Boolean indicating whether the scopes array is required or not\r\n    */\r\n    ScopeSet.prototype.validateInputScopes = function (inputScopes) {\r\n        // Check if scopes are required but not given or is an empty array\r\n        if (!inputScopes || inputScopes.length < 1) {\r\n            throw ClientConfigurationError.createEmptyScopesArrayError(inputScopes);\r\n        }\r\n    };\r\n    /**\r\n     * Check if a given scope is present in this set of scopes.\r\n     * @param scope\r\n     */\r\n    ScopeSet.prototype.containsScope = function (scope) {\r\n        return !StringUtils.isEmpty(scope) ? this.scopes.has(scope) : false;\r\n    };\r\n    /**\r\n     * Check if a set of scopes is present in this set of scopes.\r\n     * @param scopeSet\r\n     */\r\n    ScopeSet.prototype.containsScopeSet = function (scopeSet) {\r\n        var _this = this;\r\n        if (!scopeSet) {\r\n            return false;\r\n        }\r\n        return (this.scopes.size >= scopeSet.scopes.size && scopeSet.asArray().every(function (scope) { return _this.containsScope(scope); }));\r\n    };\r\n    /**\r\n     * Appends single scope if passed\r\n     * @param newScope\r\n     */\r\n    ScopeSet.prototype.appendScope = function (newScope) {\r\n        if (!StringUtils.isEmpty(newScope)) {\r\n            this.scopes.add(newScope.trim().toLowerCase());\r\n        }\r\n    };\r\n    /**\r\n     * Appends multiple scopes if passed\r\n     * @param newScopes\r\n     */\r\n    ScopeSet.prototype.appendScopes = function (newScopes) {\r\n        var _this = this;\r\n        try {\r\n            newScopes.forEach(function (newScope) { return _this.appendScope(newScope); });\r\n        }\r\n        catch (e) {\r\n            throw ClientAuthError.createAppendScopeSetError(e);\r\n        }\r\n    };\r\n    /**\r\n     * Removes element from set of scopes.\r\n     * @param scope\r\n     */\r\n    ScopeSet.prototype.removeScope = function (scope) {\r\n        if (StringUtils.isEmpty(scope)) {\r\n            throw ClientAuthError.createRemoveEmptyScopeFromSetError(scope);\r\n        }\r\n        this.scopes.delete(scope.trim().toLowerCase());\r\n    };\r\n    /**\r\n     * Combines an array of scopes with the current set of scopes.\r\n     * @param otherScopes\r\n     */\r\n    ScopeSet.prototype.unionScopeSets = function (otherScopes) {\r\n        if (!otherScopes) {\r\n            throw ClientAuthError.createEmptyInputScopeSetError(otherScopes);\r\n        }\r\n        var unionScopes = new Set(); // Iterator in constructor not supported in IE11\r\n        otherScopes.scopes.forEach(function (scope) { return unionScopes.add(scope); });\r\n        this.scopes.forEach(function (scope) { return unionScopes.add(scope); });\r\n        return unionScopes;\r\n    };\r\n    /**\r\n     * Check if scopes intersect between this set and another.\r\n     * @param otherScopes\r\n     */\r\n    ScopeSet.prototype.intersectingScopeSets = function (otherScopes) {\r\n        if (!otherScopes) {\r\n            throw ClientAuthError.createEmptyInputScopeSetError(otherScopes);\r\n        }\r\n        var unionScopes = this.unionScopeSets(otherScopes);\r\n        // Do not allow offline_access to be the only intersecting scope\r\n        var sizeOtherScopes = otherScopes.getScopeCount();\r\n        var sizeThisScopes = this.getScopeCount();\r\n        var sizeUnionScopes = unionScopes.size;\r\n        return sizeUnionScopes < (sizeThisScopes + sizeOtherScopes);\r\n    };\r\n    /**\r\n     * Returns size of set of scopes.\r\n     */\r\n    ScopeSet.prototype.getScopeCount = function () {\r\n        return this.scopes.size;\r\n    };\r\n    /**\r\n     * Returns the scopes as an array of string values\r\n     */\r\n    ScopeSet.prototype.asArray = function () {\r\n        var array = [];\r\n        this.scopes.forEach(function (val) { return array.push(val); });\r\n        return array;\r\n    };\r\n    /**\r\n     * Prints scopes into a space-delimited string\r\n     */\r\n    ScopeSet.prototype.printScopes = function () {\r\n        if (this.scopes) {\r\n            var scopeArr = this.asArray();\r\n            return scopeArr.join(\" \");\r\n        }\r\n        return \"\";\r\n    };\r\n    return ScopeSet;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Function to build a client info object\r\n * @param rawClientInfo\r\n * @param crypto\r\n */\r\nfunction buildClientInfo(rawClientInfo, crypto) {\r\n    if (StringUtils.isEmpty(rawClientInfo)) {\r\n        throw ClientAuthError.createClientInfoEmptyError(rawClientInfo);\r\n    }\r\n    try {\r\n        var decodedClientInfo = crypto.base64Decode(rawClientInfo);\r\n        return JSON.parse(decodedClientInfo);\r\n    }\r\n    catch (e) {\r\n        throw ClientAuthError.createClientInfoDecodingError(e);\r\n    }\r\n}\n\nvar TrustedAuthority = /** @class */ (function () {\r\n    function TrustedAuthority() {\r\n    }\r\n    /**\r\n     * Set the CloudDiscoveryMetadata object from knownAuthorities or cloudDiscoveryMetadata passed into the app config\r\n     * @param knownAuthorities\r\n     * @param cloudDiscoveryMetadata\r\n     */\r\n    TrustedAuthority.setTrustedAuthoritiesFromConfig = function (knownAuthorities, cloudDiscoveryMetadata) {\r\n        if (!this.getTrustedHostList().length) {\r\n            if (knownAuthorities.length > 0 && !StringUtils.isEmpty(cloudDiscoveryMetadata)) {\r\n                throw ClientConfigurationError.createKnownAuthoritiesCloudDiscoveryMetadataError();\r\n            }\r\n            this.createCloudDiscoveryMetadataFromKnownAuthorities(knownAuthorities);\r\n            try {\r\n                if (cloudDiscoveryMetadata) {\r\n                    var parsedMetadata = JSON.parse(cloudDiscoveryMetadata);\r\n                    this.saveCloudDiscoveryMetadata(parsedMetadata.metadata);\r\n                }\r\n            }\r\n            catch (e) {\r\n                throw ClientConfigurationError.createInvalidCloudDiscoveryMetadataError();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Called to get metadata from network if CloudDiscoveryMetadata was not populated by config\r\n     * @param networkInterface\r\n     */\r\n    TrustedAuthority.setTrustedAuthoritiesFromNetwork = function (authorityToVerify, networkInterface) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var instanceDiscoveryEndpoint, response, metadata, e_1, host;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        instanceDiscoveryEndpoint = \"\" + Constants.AAD_INSTANCE_DISCOVERY_ENDPT + authorityToVerify.urlString + \"oauth2/v2.0/authorize\";\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, networkInterface.sendGetRequestAsync(instanceDiscoveryEndpoint)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        metadata = response.body.metadata;\r\n                        this.saveCloudDiscoveryMetadata(metadata);\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        return [2 /*return*/];\r\n                    case 4:\r\n                        host = authorityToVerify.getUrlComponents().HostNameAndPort;\r\n                        if (this.getTrustedHostList().length > 0 && !this.IsInTrustedHostList(host)) {\r\n                            // Custom Domain scenario, host is trusted because Instance Discovery call succeeded \r\n                            this.createCloudDiscoveryMetadataFromKnownAuthorities([host]);\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param metadata\r\n     */\r\n    TrustedAuthority.saveCloudDiscoveryMetadata = function (metadata) {\r\n        metadata.forEach(function (entry) {\r\n            var authorities = entry.aliases;\r\n            authorities.forEach(function (authority) {\r\n                TrustedAuthority.TrustedHostList[authority.toLowerCase()] = entry;\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Create a generic metadata object for each host passed to knownAuthorities.\r\n     * This is mostly useful for B2C or ADFS scenarios\r\n     * @param knownAuthorities\r\n     */\r\n    TrustedAuthority.createCloudDiscoveryMetadataFromKnownAuthorities = function (knownAuthorities) {\r\n        var _this = this;\r\n        knownAuthorities.forEach(function (authority) {\r\n            _this.TrustedHostList[authority.toLowerCase()] = {\r\n                preferred_cache: authority.toLowerCase(),\r\n                preferred_network: authority.toLowerCase(),\r\n                aliases: [authority.toLowerCase()]\r\n            };\r\n        });\r\n    };\r\n    TrustedAuthority.getTrustedHostList = function () {\r\n        return Object.keys(this.TrustedHostList);\r\n    };\r\n    /**\r\n     * Get metadata for the provided host\r\n     * @param host\r\n     */\r\n    TrustedAuthority.getCloudDiscoveryMetadata = function (host) {\r\n        return this.TrustedHostList[host.toLowerCase()] || null;\r\n    };\r\n    /**\r\n     * Checks to see if the host is in a list of trusted hosts\r\n     * @param host\r\n     */\r\n    TrustedAuthority.IsInTrustedHostList = function (host) {\r\n        return Object.keys(this.TrustedHostList).indexOf(host.toLowerCase()) > -1;\r\n    };\r\n    TrustedAuthority.TrustedHostList = {};\r\n    return TrustedAuthority;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Type that defines required and optional parameters for an Account field (based on universal cache schema implemented by all MSALs).\r\n *\r\n * Key : Value Schema\r\n *\r\n * Key: <home_account_id>-<environment>-<realm*>\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n *      localAccountId: Original tenant-specific accountID, usually used for legacy cases\r\n *      username: primary username that represents the user, usually corresponds to preferred_username in the v2 endpt\r\n *      authorityType: Accounts authority type as a string\r\n *      name: Full name for the account, including given name and family name,\r\n *      clientInfo: Full base64 encoded client info received from ESTS\r\n *      lastModificationTime: last time this entity was modified in the cache\r\n *      lastModificationApp:\r\n * }\r\n */\r\nvar AccountEntity = /** @class */ (function () {\r\n    function AccountEntity() {\r\n    }\r\n    /**\r\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\r\n     */\r\n    AccountEntity.prototype.generateAccountId = function () {\r\n        var accountId = [this.homeAccountId, this.environment];\r\n        return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    };\r\n    /**\r\n     * Generate Account Cache Key as per the schema: <home_account_id>-<environment>-<realm*>\r\n     */\r\n    AccountEntity.prototype.generateAccountKey = function () {\r\n        return AccountEntity.generateAccountCacheKey({\r\n            homeAccountId: this.homeAccountId,\r\n            environment: this.environment,\r\n            tenantId: this.realm,\r\n            username: this.username\r\n        });\r\n    };\r\n    /**\r\n     * returns the type of the cache (in this case account)\r\n     */\r\n    AccountEntity.prototype.generateType = function () {\r\n        switch (this.authorityType) {\r\n            case CacheAccountType.ADFS_ACCOUNT_TYPE:\r\n                return CacheType.ADFS;\r\n            case CacheAccountType.MSAV1_ACCOUNT_TYPE:\r\n                return CacheType.MSA;\r\n            case CacheAccountType.MSSTS_ACCOUNT_TYPE:\r\n                return CacheType.MSSTS;\r\n            case CacheAccountType.GENERIC_ACCOUNT_TYPE:\r\n                return CacheType.GENERIC;\r\n            default: {\r\n                throw ClientAuthError.createUnexpectedAccountTypeError();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the AccountInfo interface for this account.\r\n     */\r\n    AccountEntity.prototype.getAccountInfo = function () {\r\n        return {\r\n            homeAccountId: this.homeAccountId,\r\n            environment: this.environment,\r\n            tenantId: this.realm,\r\n            username: this.username\r\n        };\r\n    };\r\n    /**\r\n     * Generates account key from interface\r\n     * @param accountInterface\r\n     */\r\n    AccountEntity.generateAccountCacheKey = function (accountInterface) {\r\n        var accountKey = [\r\n            accountInterface.homeAccountId,\r\n            accountInterface.environment || \"\",\r\n            accountInterface.tenantId || \"\",\r\n        ];\r\n        return accountKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    };\r\n    /**\r\n     * Build Account cache from IdToken, clientInfo and authority/policy\r\n     * @param clientInfo\r\n     * @param authority\r\n     * @param idToken\r\n     * @param policy\r\n     */\r\n    AccountEntity.createAccount = function (clientInfo, authority, idToken, crypto) {\r\n        var account = new AccountEntity();\r\n        account.authorityType = CacheAccountType.MSSTS_ACCOUNT_TYPE;\r\n        account.clientInfo = clientInfo;\r\n        var clientInfoObj = buildClientInfo(clientInfo, crypto);\r\n        account.homeAccountId = \"\" + clientInfoObj.uid + Separators.CLIENT_INFO_SEPARATOR + clientInfoObj.utid;\r\n        var reqEnvironment = authority.canonicalAuthorityUrlComponents.HostNameAndPort;\r\n        var env = TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment) ? TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment).preferred_cache : \"\";\r\n        if (StringUtils.isEmpty(env)) {\r\n            throw ClientAuthError.createInvalidCacheEnvironmentError();\r\n        }\r\n        account.environment = env;\r\n        account.realm = idToken.claims.tid;\r\n        if (idToken) {\r\n            // How do you account for MSA CID here?\r\n            var localAccountId = !StringUtils.isEmpty(idToken.claims.oid)\r\n                ? idToken.claims.oid\r\n                : idToken.claims.sid;\r\n            account.localAccountId = localAccountId;\r\n            account.username = idToken.claims.preferred_username;\r\n            account.name = idToken.claims.name;\r\n        }\r\n        return account;\r\n    };\r\n    /**\r\n     * Build ADFS account type\r\n     * @param authority\r\n     * @param idToken\r\n     */\r\n    AccountEntity.createADFSAccount = function (authority, idToken) {\r\n        var account = new AccountEntity();\r\n        account.authorityType = CacheAccountType.ADFS_ACCOUNT_TYPE;\r\n        account.homeAccountId = idToken.claims.sub;\r\n        var reqEnvironment = authority.canonicalAuthorityUrlComponents.HostNameAndPort;\r\n        var env = TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment) ? TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment).preferred_cache : \"\";\r\n        if (StringUtils.isEmpty(env)) {\r\n            throw ClientAuthError.createInvalidCacheEnvironmentError();\r\n        }\r\n        account.environment = env;\r\n        account.username = idToken.claims.upn;\r\n        // add uniqueName to claims\r\n        // account.name = idToken.claims.uniqueName;\r\n        return account;\r\n    };\r\n    return AccountEntity;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Interface class which implement cache storage functions used by MSAL to perform validity checks, and store tokens.\r\n */\r\nvar CacheManager = /** @class */ (function () {\r\n    function CacheManager() {\r\n    }\r\n    /**\r\n     * Returns all accounts in cache\r\n     */\r\n    CacheManager.prototype.getAllAccounts = function () {\r\n        var currentAccounts = this.getAccountsFilteredBy();\r\n        var accountValues = Object.keys(currentAccounts).map(function (accountKey) { return currentAccounts[accountKey]; });\r\n        var numAccounts = accountValues.length;\r\n        if (numAccounts < 1) {\r\n            return null;\r\n        }\r\n        else {\r\n            var allAccounts = accountValues.map(function (value) {\r\n                var accountObj = new AccountEntity();\r\n                accountObj = CacheManager.toObject(accountObj, value);\r\n                return accountObj.getAccountInfo();\r\n            });\r\n            return allAccounts;\r\n        }\r\n    };\r\n    /**\r\n     * saves a cache record\r\n     * @param cacheRecord\r\n     */\r\n    CacheManager.prototype.saveCacheRecord = function (cacheRecord) {\r\n        if (!cacheRecord) {\r\n            throw ClientAuthError.createNullOrUndefinedCacheRecord();\r\n        }\r\n        if (!!cacheRecord.account) {\r\n            this.saveAccount(cacheRecord.account);\r\n        }\r\n        if (!!cacheRecord.idToken) {\r\n            this.saveCredential(cacheRecord.idToken);\r\n        }\r\n        if (!!cacheRecord.accessToken) {\r\n            this.saveAccessToken(cacheRecord.accessToken);\r\n        }\r\n        if (!!cacheRecord.refreshToken) {\r\n            this.saveCredential(cacheRecord.refreshToken);\r\n        }\r\n    };\r\n    /**\r\n     * saves account into cache\r\n     * @param account\r\n     */\r\n    CacheManager.prototype.saveAccount = function (account) {\r\n        var key = account.generateAccountKey();\r\n        this.setItem(key, account, CacheSchemaType.ACCOUNT);\r\n    };\r\n    /**\r\n     * saves credential - accessToken, idToken or refreshToken into cache\r\n     * @param credential\r\n     */\r\n    CacheManager.prototype.saveCredential = function (credential) {\r\n        var key = credential.generateCredentialKey();\r\n        this.setItem(key, credential, CacheSchemaType.CREDENTIAL);\r\n    };\r\n    /**\r\n     * saves access token credential\r\n     * @param credential\r\n     */\r\n    CacheManager.prototype.saveAccessToken = function (credential) {\r\n        var _this = this;\r\n        var currentTokenCache = this.getCredentialsFilteredBy({\r\n            clientId: credential.clientId,\r\n            credentialType: CredentialType.ACCESS_TOKEN,\r\n            environment: credential.environment,\r\n            homeAccountId: credential.homeAccountId,\r\n            realm: credential.realm\r\n        });\r\n        var currentScopes = ScopeSet.fromString(credential.target);\r\n        var currentAccessTokens = Object.keys(currentTokenCache.accessTokens).map(function (key) { return currentTokenCache.accessTokens[key]; });\r\n        if (currentAccessTokens) {\r\n            currentAccessTokens.forEach(function (tokenEntity) {\r\n                var tokenScopeSet = ScopeSet.fromString(tokenEntity.target);\r\n                if (tokenScopeSet.intersectingScopeSets(currentScopes)) {\r\n                    _this.removeCredential(tokenEntity);\r\n                }\r\n            });\r\n        }\r\n        this.saveCredential(credential);\r\n    };\r\n    /**\r\n     * Given account key retrieve an account\r\n     * @param key\r\n     */\r\n    CacheManager.prototype.getAccount = function (key) {\r\n        var account = this.getItem(key, CacheSchemaType.ACCOUNT);\r\n        return account;\r\n    };\r\n    /**\r\n     * retrieve a credential - accessToken, idToken or refreshToken; given the cache key\r\n     * @param key\r\n     */\r\n    CacheManager.prototype.getCredential = function (key) {\r\n        return this.getItem(key, CacheSchemaType.CREDENTIAL);\r\n    };\r\n    /**\r\n     * retrieve accounts matching all provided filters; if no filter is set, get all accounts\r\n     * not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param realm\r\n     */\r\n    CacheManager.prototype.getAccountsFilteredBy = function (accountFilter) {\r\n        return this.getAccountsFilteredByInternal(accountFilter ? accountFilter.homeAccountId : \"\", accountFilter ? accountFilter.environment : \"\", accountFilter ? accountFilter.realm : \"\");\r\n    };\r\n    /**\r\n     * retrieve accounts matching all provided filters; if no filter is set, get all accounts\r\n     * not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param realm\r\n     */\r\n    CacheManager.prototype.getAccountsFilteredByInternal = function (homeAccountId, environment, realm) {\r\n        var _this = this;\r\n        var allCacheKeys = this.getKeys();\r\n        var matchingAccounts = {};\r\n        var entity;\r\n        allCacheKeys.forEach(function (cacheKey) {\r\n            var matches = true;\r\n            // don't parse any non-account type cache entities\r\n            if (CredentialEntity.getCredentialType(cacheKey) !== Constants.NOT_DEFINED || _this.isAppMetadata(cacheKey)) {\r\n                return;\r\n            }\r\n            // Attempt retrieval\r\n            try {\r\n                entity = _this.getItem(cacheKey, CacheSchemaType.ACCOUNT);\r\n            }\r\n            catch (e) {\r\n                return;\r\n            }\r\n            if (!StringUtils.isEmpty(homeAccountId)) {\r\n                matches = _this.matchHomeAccountId(entity, homeAccountId);\r\n            }\r\n            if (!StringUtils.isEmpty(environment)) {\r\n                matches = matches && _this.matchEnvironment(entity, environment);\r\n            }\r\n            if (!StringUtils.isEmpty(realm)) {\r\n                matches = matches && _this.matchRealm(entity, realm);\r\n            }\r\n            if (matches) {\r\n                matchingAccounts[cacheKey] = entity;\r\n            }\r\n        });\r\n        return matchingAccounts;\r\n    };\r\n    /**\r\n     * retrieve credentails matching all provided filters; if no filter is set, get all credentials\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param credentialType\r\n     * @param clientId\r\n     * @param realm\r\n     * @param target\r\n     */\r\n    CacheManager.prototype.getCredentialsFilteredBy = function (filter) {\r\n        return this.getCredentialsFilteredByInternal(filter.homeAccountId, filter.environment, filter.credentialType, filter.clientId, filter.realm, filter.target);\r\n    };\r\n    /**\r\n     * Support function to help match credentials\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param credentialType\r\n     * @param clientId\r\n     * @param realm\r\n     * @param target\r\n     */\r\n    CacheManager.prototype.getCredentialsFilteredByInternal = function (homeAccountId, environment, credentialType, clientId, realm, target) {\r\n        var _this = this;\r\n        var allCacheKeys = this.getKeys();\r\n        var matchingCredentials = {\r\n            idTokens: {},\r\n            accessTokens: {},\r\n            refreshTokens: {}\r\n        };\r\n        allCacheKeys.forEach(function (cacheKey) {\r\n            var matches = true;\r\n            var entity;\r\n            // don't parse any non-credential type cache entities\r\n            var credType = CredentialEntity.getCredentialType(cacheKey);\r\n            if (credType === Constants.NOT_DEFINED) {\r\n                return;\r\n            }\r\n            // Attempt retrieval\r\n            try {\r\n                entity = _this.getItem(cacheKey, CacheSchemaType.CREDENTIAL);\r\n            }\r\n            catch (e) {\r\n                return;\r\n            }\r\n            if (!StringUtils.isEmpty(homeAccountId)) {\r\n                matches = _this.matchHomeAccountId(entity, homeAccountId);\r\n            }\r\n            if (!StringUtils.isEmpty(environment)) {\r\n                matches = matches && _this.matchEnvironment(entity, environment);\r\n            }\r\n            if (!StringUtils.isEmpty(realm)) {\r\n                matches = matches && _this.matchRealm(entity, realm);\r\n            }\r\n            if (!StringUtils.isEmpty(credentialType)) {\r\n                matches = matches && _this.matchCredentialType(entity, credentialType);\r\n            }\r\n            if (!StringUtils.isEmpty(clientId)) {\r\n                matches = matches && _this.matchClientId(entity, clientId);\r\n            }\r\n            // idTokens do not have \"target\", target specific refreshTokens do exist for some types of authentication\r\n            // TODO: Add case for target specific refresh tokens\r\n            if (!StringUtils.isEmpty(target) && credType === CredentialType.ACCESS_TOKEN) {\r\n                matches = matches && _this.matchTarget(entity, target);\r\n            }\r\n            if (matches) {\r\n                switch (credType) {\r\n                    case CredentialType.ID_TOKEN:\r\n                        matchingCredentials.idTokens[cacheKey] = entity;\r\n                        break;\r\n                    case CredentialType.ACCESS_TOKEN:\r\n                        matchingCredentials.accessTokens[cacheKey] = entity;\r\n                        break;\r\n                    case CredentialType.REFRESH_TOKEN:\r\n                        matchingCredentials.refreshTokens[cacheKey] = entity;\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n        return matchingCredentials;\r\n    };\r\n    /**\r\n     * returns a boolean if the given account is removed\r\n     * @param account\r\n     */\r\n    CacheManager.prototype.removeAccount = function (accountKey) {\r\n        var account = this.getAccount(accountKey);\r\n        if (!account) {\r\n            throw ClientAuthError.createNoAccountFoundError();\r\n        }\r\n        return (this.removeAccountContext(account) && this.removeItem(accountKey, CacheSchemaType.ACCOUNT));\r\n    };\r\n    /**\r\n     * returns a boolean if the given account is removed\r\n     * @param account\r\n     */\r\n    CacheManager.prototype.removeAccountContext = function (account) {\r\n        var _this = this;\r\n        var allCacheKeys = this.getKeys();\r\n        var accountId = account.generateAccountId();\r\n        allCacheKeys.forEach(function (cacheKey) {\r\n            // don't parse any non-credential type cache entities\r\n            if (CredentialEntity.getCredentialType(cacheKey) === Constants.NOT_DEFINED) {\r\n                return;\r\n            }\r\n            var cacheEntity = _this.getItem(cacheKey, CacheSchemaType.CREDENTIAL);\r\n            if (!!cacheEntity && accountId === cacheEntity.generateAccountId()) {\r\n                _this.removeCredential(cacheEntity);\r\n            }\r\n        });\r\n        return true;\r\n    };\r\n    /**\r\n     * returns a boolean if the given credential is removed\r\n     * @param credential\r\n     */\r\n    CacheManager.prototype.removeCredential = function (credential) {\r\n        var key = credential.generateCredentialKey();\r\n        return this.removeItem(key, CacheSchemaType.CREDENTIAL);\r\n    };\r\n    /**\r\n     *\r\n     * @param value\r\n     * @param homeAccountId\r\n     */\r\n    CacheManager.prototype.matchHomeAccountId = function (entity, homeAccountId) {\r\n        return homeAccountId === entity.homeAccountId;\r\n    };\r\n    /**\r\n     *\r\n     * @param value\r\n     * @param environment\r\n     */\r\n    CacheManager.prototype.matchEnvironment = function (entity, environment) {\r\n        var cloudMetadata = TrustedAuthority.getCloudDiscoveryMetadata(environment);\r\n        if (cloudMetadata &&\r\n            cloudMetadata.aliases.indexOf(entity.environment) > -1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *\r\n     * @param entity\r\n     * @param credentialType\r\n     */\r\n    CacheManager.prototype.matchCredentialType = function (entity, credentialType) {\r\n        return credentialType.toLowerCase() === entity.credentialType.toLowerCase();\r\n    };\r\n    /**\r\n     *\r\n     * @param entity\r\n     * @param clientId\r\n     */\r\n    CacheManager.prototype.matchClientId = function (entity, clientId) {\r\n        return clientId === entity.clientId;\r\n    };\r\n    /**\r\n     *\r\n     * @param entity\r\n     * @param realm\r\n     */\r\n    CacheManager.prototype.matchRealm = function (entity, realm) {\r\n        return realm === entity.realm;\r\n    };\r\n    /**\r\n     * Returns true if the target scopes are a subset of the current entity's scopes, false otherwise.\r\n     * @param entity\r\n     * @param target\r\n     */\r\n    CacheManager.prototype.matchTarget = function (entity, target) {\r\n        var entityScopeSet = ScopeSet.fromString(entity.target);\r\n        var requestTargetScopeSet = ScopeSet.fromString(target);\r\n        return entityScopeSet.containsScopeSet(requestTargetScopeSet);\r\n    };\r\n    /**\r\n     * returns if a given cache entity is of the type appmetadata\r\n     * @param key\r\n     */\r\n    CacheManager.prototype.isAppMetadata = function (key) {\r\n        return key.indexOf(APP_META_DATA) !== -1;\r\n    };\r\n    /**\r\n     * Helper to convert serialized data to object\r\n     * @param obj\r\n     * @param json\r\n     */\r\n    CacheManager.toObject = function (obj, json) {\r\n        for (var propertyName in json) {\r\n            obj[propertyName] = json[propertyName];\r\n        }\r\n        return obj;\r\n    };\r\n    return CacheManager;\r\n}());\r\nvar DefaultStorageClass = /** @class */ (function (_super) {\r\n    __extends(DefaultStorageClass, _super);\r\n    function DefaultStorageClass() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DefaultStorageClass.prototype.setItem = function () {\r\n        var notImplErr = \"Storage interface - setItem() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.getItem = function () {\r\n        var notImplErr = \"Storage interface - getItem() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.removeItem = function () {\r\n        var notImplErr = \"Storage interface - removeItem() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.containsKey = function () {\r\n        var notImplErr = \"Storage interface - containsKey() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.getKeys = function () {\r\n        var notImplErr = \"Storage interface - getKeys() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.clear = function () {\r\n        var notImplErr = \"Storage interface - clear() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    return DefaultStorageClass;\r\n}(CacheManager));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n// Token renewal offset default in seconds\r\nvar DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\r\nvar DEFAULT_AUTH_OPTIONS = {\r\n    clientId: \"\",\r\n    authority: null,\r\n    knownAuthorities: [],\r\n    cloudDiscoveryMetadata: \"\"\r\n};\r\nvar DEFAULT_SYSTEM_OPTIONS = {\r\n    tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\r\n    telemetry: null\r\n};\r\nvar DEFAULT_LOGGER_IMPLEMENTATION = {\r\n    loggerCallback: function () {\r\n        // allow users to not set loggerCallback\r\n    },\r\n    piiLoggingEnabled: false,\r\n    logLevel: LogLevel.Info\r\n};\r\nvar DEFAULT_NETWORK_IMPLEMENTATION = {\r\n    sendGetRequestAsync: function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator(this, function (_a) {\r\n                notImplErr = \"Network interface - sendGetRequestAsync() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    },\r\n    sendPostRequestAsync: function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator(this, function (_a) {\r\n                notImplErr = \"Network interface - sendPostRequestAsync() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    }\r\n};\r\nvar DEFAULT_CRYPTO_IMPLEMENTATION = {\r\n    createNewGuid: function () {\r\n        var notImplErr = \"Crypto interface - createNewGuid() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    base64Decode: function () {\r\n        var notImplErr = \"Crypto interface - base64Decode() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    base64Encode: function () {\r\n        var notImplErr = \"Crypto interface - base64Encode() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    generatePkceCodes: function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator(this, function (_a) {\r\n                notImplErr = \"Crypto interface - generatePkceCodes() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    }\r\n};\r\nvar DEFAULT_LIBRARY_INFO = {\r\n    sku: Constants.SKU,\r\n    version: version,\r\n    cpu: \"\",\r\n    os: \"\"\r\n};\r\n/**\r\n * Function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param Configuration\r\n *\r\n * @returns Configuration\r\n */\r\nfunction buildClientConfiguration(_a) {\r\n    var userAuthOptions = _a.authOptions, userSystemOptions = _a.systemOptions, userLoggerOption = _a.loggerOptions, storageImplementation = _a.storageInterface, networkImplementation = _a.networkInterface, cryptoImplementation = _a.cryptoInterface, libraryInfo = _a.libraryInfo;\r\n    return {\r\n        authOptions: __assign(__assign({}, DEFAULT_AUTH_OPTIONS), userAuthOptions),\r\n        systemOptions: __assign(__assign({}, DEFAULT_SYSTEM_OPTIONS), userSystemOptions),\r\n        loggerOptions: __assign(__assign({}, DEFAULT_LOGGER_IMPLEMENTATION), userLoggerOption),\r\n        storageInterface: storageImplementation || new DefaultStorageClass(),\r\n        networkInterface: networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\r\n        cryptoInterface: cryptoImplementation || DEFAULT_CRYPTO_IMPLEMENTATION,\r\n        libraryInfo: __assign(__assign({}, DEFAULT_LIBRARY_INFO), libraryInfo)\r\n    };\r\n}\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Base application class which will construct requests to send to and handle responses from the Microsoft STS using the authorization code flow.\r\n */\r\nvar BaseClient = /** @class */ (function () {\r\n    function BaseClient(configuration) {\r\n        // Set the configuration\r\n        this.config = buildClientConfiguration(configuration);\r\n        // Initialize the logger\r\n        this.logger = new Logger(this.config.loggerOptions);\r\n        // Initialize crypto\r\n        this.cryptoUtils = this.config.cryptoInterface;\r\n        // Initialize storage interface\r\n        this.cacheManager = this.config.storageInterface;\r\n        // Set the network interface\r\n        this.networkClient = this.config.networkInterface;\r\n        TrustedAuthority.setTrustedAuthoritiesFromConfig(this.config.authOptions.knownAuthorities, this.config.authOptions.cloudDiscoveryMetadata);\r\n        this.authority = this.config.authOptions.authority;\r\n    }\r\n    /**\r\n     * Creates default headers for requests to token endpoint\r\n     */\r\n    BaseClient.prototype.createDefaultTokenRequestHeaders = function () {\r\n        var headers = this.createDefaultLibraryHeaders();\r\n        headers.set(HeaderNames.CONTENT_TYPE, Constants.URL_FORM_CONTENT_TYPE);\r\n        return headers;\r\n    };\r\n    /**\r\n     * addLibraryData\r\n     */\r\n    BaseClient.prototype.createDefaultLibraryHeaders = function () {\r\n        var headers = new Map();\r\n        // client info headers\r\n        headers.set(\"\" + AADServerParamKeys.X_CLIENT_SKU, this.config.libraryInfo.sku);\r\n        headers.set(\"\" + AADServerParamKeys.X_CLIENT_VER, this.config.libraryInfo.version);\r\n        headers.set(\"\" + AADServerParamKeys.X_CLIENT_OS, this.config.libraryInfo.os);\r\n        headers.set(\"\" + AADServerParamKeys.X_CLIENT_CPU, this.config.libraryInfo.cpu);\r\n        return headers;\r\n    };\r\n    /**\r\n     * Http post to token endpoint\r\n     * @param tokenEndpoint\r\n     * @param queryString\r\n     * @param headers\r\n     */\r\n    BaseClient.prototype.executePostToTokenEndpoint = function (tokenEndpoint, queryString, headers) {\r\n        return this.networkClient.sendPostRequestAsync(tokenEndpoint, {\r\n            body: queryString,\r\n            headers: headers,\r\n        });\r\n    };\r\n    return BaseClient;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Validates server consumable params from the \"request\" objects\r\n */\r\nvar RequestValidator = /** @class */ (function () {\r\n    function RequestValidator() {\r\n    }\r\n    /**\r\n     * Utility to check if the `redirectUri` in the request is a non-null value\r\n     * @param redirectUri\r\n     */\r\n    RequestValidator.validateRedirectUri = function (redirectUri) {\r\n        if (StringUtils.isEmpty(redirectUri)) {\r\n            throw ClientConfigurationError.createRedirectUriEmptyError();\r\n        }\r\n    };\r\n    /**\r\n     * Utility to validate prompt sent by the user in the request\r\n     * @param prompt\r\n     */\r\n    RequestValidator.validatePrompt = function (prompt) {\r\n        if ([\r\n            PromptValue.LOGIN,\r\n            PromptValue.SELECT_ACCOUNT,\r\n            PromptValue.CONSENT,\r\n            PromptValue.NONE\r\n        ].indexOf(prompt) < 0) {\r\n            throw ClientConfigurationError.createInvalidPromptError(prompt);\r\n        }\r\n    };\r\n    /**\r\n     * Utility to validate code_challenge and code_challenge_method\r\n     * @param codeChallenge\r\n     * @param codeChallengeMethod\r\n     */\r\n    RequestValidator.validateCodeChallengeParams = function (codeChallenge, codeChallengeMethod) {\r\n        if (StringUtils.isEmpty(codeChallenge) || StringUtils.isEmpty(codeChallengeMethod)) {\r\n            throw ClientConfigurationError.createInvalidCodeChallengeParamsError();\r\n        }\r\n        else {\r\n            this.validateCodeChallengeMethod(codeChallengeMethod);\r\n        }\r\n    };\r\n    /**\r\n     * Utility to validate code_challenge_method\r\n     * @param codeChallengeMethod\r\n     */\r\n    RequestValidator.validateCodeChallengeMethod = function (codeChallengeMethod) {\r\n        if ([\r\n            CodeChallengeMethodValues.PLAIN,\r\n            CodeChallengeMethodValues.S256\r\n        ].indexOf(codeChallengeMethod) < 0) {\r\n            throw ClientConfigurationError.createInvalidCodeChallengeMethodError();\r\n        }\r\n    };\r\n    /**\r\n     * Removes unnecessary or duplicate query parameters from extraQueryParameters\r\n     * @param request\r\n     */\r\n    RequestValidator.sanitizeEQParams = function (eQParams, queryParams) {\r\n        if (!eQParams) {\r\n            return null;\r\n        }\r\n        // Remove any query parameters already included in SSO params\r\n        queryParams.forEach(function (value, key) {\r\n            if (eQParams[key]) {\r\n                delete eQParams[key];\r\n            }\r\n        });\r\n        return eQParams;\r\n    };\r\n    return RequestValidator;\r\n}());\n\n/*\r\n* Copyright (c) Microsoft Corporation. All rights reserved.\r\n* Licensed under the MIT License.\r\n*/\r\nvar RequestParameterBuilder = /** @class */ (function () {\r\n    function RequestParameterBuilder() {\r\n        this.parameters = new Map();\r\n    }\r\n    /**\r\n     * add response_type = code\r\n     */\r\n    RequestParameterBuilder.prototype.addResponseTypeCode = function () {\r\n        this.parameters.set(AADServerParamKeys.RESPONSE_TYPE, encodeURIComponent(Constants.CODE_RESPONSE_TYPE));\r\n    };\r\n    /**\r\n     * add response_mode. defaults to query.\r\n     * @param responseMode\r\n     */\r\n    RequestParameterBuilder.prototype.addResponseMode = function (responseMode) {\r\n        this.parameters.set(AADServerParamKeys.RESPONSE_MODE, encodeURIComponent((responseMode) ? responseMode : ResponseMode.QUERY));\r\n    };\r\n    /**\r\n     * add scopes\r\n     * @param scopeSet\r\n     */\r\n    RequestParameterBuilder.prototype.addScopes = function (scopeSet) {\r\n        this.parameters.set(AADServerParamKeys.SCOPE, encodeURIComponent(scopeSet.printScopes()));\r\n    };\r\n    /**\r\n     * add clientId\r\n     * @param clientId\r\n     */\r\n    RequestParameterBuilder.prototype.addClientId = function (clientId) {\r\n        this.parameters.set(AADServerParamKeys.CLIENT_ID, encodeURIComponent(clientId));\r\n    };\r\n    /**\r\n     * add redirect_uri\r\n     * @param redirectUri\r\n     */\r\n    RequestParameterBuilder.prototype.addRedirectUri = function (redirectUri) {\r\n        RequestValidator.validateRedirectUri(redirectUri);\r\n        this.parameters.set(AADServerParamKeys.REDIRECT_URI, encodeURIComponent(redirectUri));\r\n    };\r\n    /**\r\n     * add domain_hint\r\n     * @param domainHint\r\n     */\r\n    RequestParameterBuilder.prototype.addDomainHint = function (domainHint) {\r\n        this.parameters.set(SSOTypes.DOMAIN_HINT, encodeURIComponent(domainHint));\r\n    };\r\n    /**\r\n     * add login_hint\r\n     * @param loginHint\r\n     */\r\n    RequestParameterBuilder.prototype.addLoginHint = function (loginHint) {\r\n        this.parameters.set(SSOTypes.LOGIN_HINT, encodeURIComponent(loginHint));\r\n    };\r\n    /**\r\n     * add claims\r\n     * @param claims\r\n     */\r\n    RequestParameterBuilder.prototype.addClaims = function (claims) {\r\n        this.parameters.set(AADServerParamKeys.CLAIMS, encodeURIComponent(claims));\r\n    };\r\n    /**\r\n     * add correlationId\r\n     * @param correlationId\r\n     */\r\n    RequestParameterBuilder.prototype.addCorrelationId = function (correlationId) {\r\n        this.parameters.set(AADServerParamKeys.CLIENT_REQUEST_ID, encodeURIComponent(correlationId));\r\n    };\r\n    /**\r\n     * add library info query params\r\n     * @param libraryInfo\r\n     */\r\n    RequestParameterBuilder.prototype.addLibraryInfo = function (libraryInfo) {\r\n        // Telemetry Info\r\n        this.parameters.set(AADServerParamKeys.X_CLIENT_SKU, libraryInfo.sku);\r\n        this.parameters.set(AADServerParamKeys.X_CLIENT_VER, libraryInfo.version);\r\n        this.parameters.set(AADServerParamKeys.X_CLIENT_OS, libraryInfo.os);\r\n        this.parameters.set(AADServerParamKeys.X_CLIENT_CPU, libraryInfo.cpu);\r\n    };\r\n    /**\r\n     * add prompt\r\n     * @param prompt\r\n     */\r\n    RequestParameterBuilder.prototype.addPrompt = function (prompt) {\r\n        RequestValidator.validatePrompt(prompt);\r\n        this.parameters.set(\"\" + AADServerParamKeys.PROMPT, encodeURIComponent(prompt));\r\n    };\r\n    /**\r\n     * add state\r\n     * @param state\r\n     */\r\n    RequestParameterBuilder.prototype.addState = function (state) {\r\n        if (!StringUtils.isEmpty(state)) {\r\n            this.parameters.set(AADServerParamKeys.STATE, encodeURIComponent(state));\r\n        }\r\n    };\r\n    /**\r\n     * add nonce\r\n     * @param nonce\r\n     */\r\n    RequestParameterBuilder.prototype.addNonce = function (nonce) {\r\n        this.parameters.set(AADServerParamKeys.NONCE, encodeURIComponent(nonce));\r\n    };\r\n    /**\r\n     * add code_challenge and code_challenge_method\r\n     * - throw if either of them are not passed\r\n     * @param codeChallenge\r\n     * @param codeChallengeMethod\r\n     */\r\n    RequestParameterBuilder.prototype.addCodeChallengeParams = function (codeChallenge, codeChallengeMethod) {\r\n        RequestValidator.validateCodeChallengeParams(codeChallenge, codeChallengeMethod);\r\n        if (codeChallenge && codeChallengeMethod) {\r\n            this.parameters.set(AADServerParamKeys.CODE_CHALLENGE, encodeURIComponent(codeChallenge));\r\n            this.parameters.set(AADServerParamKeys.CODE_CHALLENGE_METHOD, encodeURIComponent(codeChallengeMethod));\r\n        }\r\n        else {\r\n            throw ClientConfigurationError.createInvalidCodeChallengeParamsError();\r\n        }\r\n    };\r\n    /**\r\n     * add the `authorization_code` passed by the user to exchange for a token\r\n     * @param code\r\n     */\r\n    RequestParameterBuilder.prototype.addAuthorizationCode = function (code) {\r\n        this.parameters.set(AADServerParamKeys.CODE, encodeURIComponent(code));\r\n    };\r\n    /**\r\n     * add the `authorization_code` passed by the user to exchange for a token\r\n     * @param code\r\n     */\r\n    RequestParameterBuilder.prototype.addDeviceCode = function (code) {\r\n        this.parameters.set(AADServerParamKeys.DEVICE_CODE, encodeURIComponent(code));\r\n    };\r\n    /**\r\n     * add the `refreshToken` passed by the user\r\n     * @param refreshToken\r\n     */\r\n    RequestParameterBuilder.prototype.addRefreshToken = function (refreshToken) {\r\n        this.parameters.set(AADServerParamKeys.REFRESH_TOKEN, encodeURIComponent(refreshToken));\r\n    };\r\n    /**\r\n     * add the `code_verifier` passed by the user to exchange for a token\r\n     * @param codeVerifier\r\n     */\r\n    RequestParameterBuilder.prototype.addCodeVerifier = function (codeVerifier) {\r\n        this.parameters.set(AADServerParamKeys.CODE_VERIFIER, encodeURIComponent(codeVerifier));\r\n    };\r\n    /**\r\n     * add client_secret\r\n     * @param clientSecret\r\n     */\r\n    // TODO uncomment when confidential client flow is added.\r\n    // addClientSecret(clientSecret: string): void {\r\n    //     params.set(`${AADServerParamKeys.CLIENT_SECRET}`, clientSecret);\r\n    // }\r\n    /**\r\n     * add grant type\r\n     * @param grantType\r\n     */\r\n    RequestParameterBuilder.prototype.addGrantType = function (grantType) {\r\n        this.parameters.set(AADServerParamKeys.GRANT_TYPE, encodeURIComponent(grantType));\r\n    };\r\n    /**\r\n     * add client info\r\n     *\r\n     */\r\n    RequestParameterBuilder.prototype.addClientInfo = function () {\r\n        this.parameters.set(ClientInfo, \"1\");\r\n    };\r\n    /**\r\n     * add extraQueryParams\r\n     * @param eQparams\r\n     */\r\n    RequestParameterBuilder.prototype.addExtraQueryParameters = function (eQparams) {\r\n        var _this = this;\r\n        RequestValidator.sanitizeEQParams(eQparams, this.parameters);\r\n        Object.keys(eQparams).forEach(function (key) {\r\n            _this.parameters.set(key, eQparams[key]);\r\n        });\r\n    };\r\n    /**\r\n     * Utility to create a URL from the params map\r\n     */\r\n    RequestParameterBuilder.prototype.createQueryString = function () {\r\n        var queryParameterArray = new Array();\r\n        this.parameters.forEach(function (value, key) {\r\n            queryParameterArray.push(key + \"=\" + value);\r\n        });\r\n        return queryParameterArray.join(\"&\");\r\n    };\r\n    return RequestParameterBuilder;\r\n}());\n\n/**\r\n * Error thrown when there is an error with the server code, for example, unavailability.\r\n */\r\nvar ServerError = /** @class */ (function (_super) {\r\n    __extends(ServerError, _super);\r\n    function ServerError(errorCode, errorMessage, subError) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ServerError\";\r\n        _this.subError = subError;\r\n        Object.setPrototypeOf(_this, ServerError.prototype);\r\n        return _this;\r\n    }\r\n    return ServerError;\r\n}(AuthError));\n\n/**\r\n * Id Token representation class. Parses id token string and generates claims object.\r\n */\r\nvar IdToken = /** @class */ (function () {\r\n    function IdToken(rawIdToken, crypto) {\r\n        if (StringUtils.isEmpty(rawIdToken)) {\r\n            throw ClientAuthError.createIdTokenNullOrEmptyError(rawIdToken);\r\n        }\r\n        this.rawIdToken = rawIdToken;\r\n        this.claims = IdToken.extractIdToken(rawIdToken, crypto);\r\n    }\r\n    /**\r\n     * Extract IdToken by decoding the RAWIdToken\r\n     *\r\n     * @param encodedIdToken\r\n     */\r\n    IdToken.extractIdToken = function (encodedIdToken, crypto) {\r\n        // id token will be decoded to get the username\r\n        var decodedToken = StringUtils.decodeJwt(encodedIdToken);\r\n        if (!decodedToken) {\r\n            return null;\r\n        }\r\n        try {\r\n            var base64IdTokenPayload = decodedToken.JWSPayload;\r\n            // base64Decode() should throw an error if there is an issue\r\n            var base64Decoded = crypto.base64Decode(base64IdTokenPayload);\r\n            return JSON.parse(base64Decoded);\r\n        }\r\n        catch (err) {\r\n            throw ClientAuthError.createIdTokenParsingError(err);\r\n        }\r\n    };\r\n    return IdToken;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Utility class which exposes functions for managing date and time operations.\r\n */\r\nvar TimeUtils = /** @class */ (function () {\r\n    function TimeUtils() {\r\n    }\r\n    /**\r\n     * return the current time in Unix time (seconds).\r\n     */\r\n    TimeUtils.nowSeconds = function () {\r\n        // Date.getTime() returns in milliseconds.\r\n        return Math.round(new Date().getTime() / 1000.0);\r\n    };\r\n    return TimeUtils;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Authority types supported by MSAL.\r\n */\r\nvar AuthorityType;\r\n(function (AuthorityType) {\r\n    AuthorityType[AuthorityType[\"Default\"] = 0] = \"Default\";\r\n    AuthorityType[AuthorityType[\"Adfs\"] = 1] = \"Adfs\";\r\n})(AuthorityType || (AuthorityType = {}));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * ID_TOKEN Cache\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key Example: uid.utid-login.microsoftonline.com-idtoken-clientId-contoso.com-\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\r\n *      clientId: client ID of the application\r\n *      secret: Actual credential as a string\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n * }\r\n */\r\nvar IdTokenEntity = /** @class */ (function (_super) {\r\n    __extends(IdTokenEntity, _super);\r\n    function IdTokenEntity() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Create IdTokenEntity\r\n     * @param homeAccountId\r\n     * @param authenticationResult\r\n     * @param clientId\r\n     * @param authority\r\n     */\r\n    IdTokenEntity.createIdTokenEntity = function (homeAccountId, environment, idToken, clientId, tenantId) {\r\n        var idTokenEntity = new IdTokenEntity();\r\n        idTokenEntity.credentialType = CredentialType.ID_TOKEN;\r\n        idTokenEntity.homeAccountId = homeAccountId;\r\n        idTokenEntity.environment = environment;\r\n        idTokenEntity.clientId = clientId;\r\n        idTokenEntity.secret = idToken;\r\n        idTokenEntity.realm = tenantId;\r\n        return idTokenEntity;\r\n    };\r\n    return IdTokenEntity;\r\n}(CredentialEntity));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * ACCESS_TOKEN Credential Type\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key Example: uid.utid-login.microsoftonline.com-accesstoken-clientId-contoso.com-user.read\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\r\n *      clientId: client ID of the application\r\n *      secret: Actual credential as a string\r\n *      familyId: Family ID identifier, usually only used for refresh tokens\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\r\n *      cachedAt: Absolute device time when entry was created in the cache.\r\n *      expiresOn: Token expiry time, calculated based on current UTC time in seconds. Represented as a string.\r\n *      extendedExpiresOn: Additional extended expiry time until when token is valid in case of server-side outage. Represented as string in UTC seconds.\r\n *      keyId: used for POP and SSH tokenTypes\r\n *      tokenType: Type of the token issued. Usually \"Bearer\"\r\n * }\r\n */\r\nvar AccessTokenEntity = /** @class */ (function (_super) {\r\n    __extends(AccessTokenEntity, _super);\r\n    function AccessTokenEntity() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Create AccessTokenEntity\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param accessToken\r\n     * @param clientId\r\n     * @param tenantId\r\n     * @param scopes\r\n     * @param expiresOn\r\n     * @param extExpiresOn\r\n     */\r\n    AccessTokenEntity.createAccessTokenEntity = function (homeAccountId, environment, accessToken, clientId, tenantId, scopes, expiresOn, extExpiresOn) {\r\n        var atEntity = new AccessTokenEntity();\r\n        atEntity.homeAccountId = homeAccountId;\r\n        atEntity.credentialType = CredentialType.ACCESS_TOKEN;\r\n        atEntity.secret = accessToken;\r\n        var currentTime = TimeUtils.nowSeconds();\r\n        atEntity.cachedAt = currentTime.toString();\r\n        // Token expiry time.\r\n        // This value should be  calculated based on the current UTC time measured locally and the value  expires_in Represented as a string in JSON.\r\n        atEntity.expiresOn = expiresOn.toString();\r\n        atEntity.extendedExpiresOn = extExpiresOn.toString();\r\n        atEntity.environment = environment;\r\n        atEntity.clientId = clientId;\r\n        atEntity.realm = tenantId;\r\n        atEntity.target = scopes;\r\n        return atEntity;\r\n    };\r\n    return AccessTokenEntity;\r\n}(CredentialEntity));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * REFRESH_TOKEN Cache\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key Example: uid.utid-login.microsoftonline.com-refreshtoken-clientId--\r\n *\r\n * Value:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\r\n *      clientId: client ID of the application\r\n *      secret: Actual credential as a string\r\n *      familyId: Family ID identifier, '1' represents Microsoft Family\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\r\n * }\r\n */\r\nvar RefreshTokenEntity = /** @class */ (function (_super) {\r\n    __extends(RefreshTokenEntity, _super);\r\n    function RefreshTokenEntity() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Create RefreshTokenEntity\r\n     * @param homeAccountId\r\n     * @param authenticationResult\r\n     * @param clientId\r\n     * @param authority\r\n     */\r\n    RefreshTokenEntity.createRefreshTokenEntity = function (homeAccountId, environment, refreshToken, clientId, familyId) {\r\n        var rtEntity = new RefreshTokenEntity();\r\n        rtEntity.clientId = clientId;\r\n        rtEntity.credentialType = CredentialType.REFRESH_TOKEN;\r\n        rtEntity.environment = environment;\r\n        rtEntity.homeAccountId = homeAccountId;\r\n        rtEntity.secret = refreshToken;\r\n        if (familyId)\r\n            rtEntity.familyId = familyId;\r\n        return rtEntity;\r\n    };\r\n    return RefreshTokenEntity;\r\n}(CredentialEntity));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * InteractionRequiredAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar InteractionRequiredAuthErrorMessage = [\r\n    \"interaction_required\",\r\n    \"consent_required\",\r\n    \"login_required\"\r\n];\r\nvar InteractionRequiredAuthSubErrorMessage = [\r\n    \"message_only\",\r\n    \"additional_action\",\r\n    \"basic_action\",\r\n    \"user_password_expired\",\r\n    \"consent_required\"\r\n];\r\n/**\r\n * Error thrown when user interaction is required at the auth server.\r\n */\r\nvar InteractionRequiredAuthError = /** @class */ (function (_super) {\r\n    __extends(InteractionRequiredAuthError, _super);\r\n    function InteractionRequiredAuthError(errorCode, errorMessage, subError) {\r\n        var _this = _super.call(this, errorCode, errorMessage, subError) || this;\r\n        _this.name = \"InteractionRequiredAuthError\";\r\n        Object.setPrototypeOf(_this, InteractionRequiredAuthError.prototype);\r\n        return _this;\r\n    }\r\n    InteractionRequiredAuthError.isInteractionRequiredError = function (errorCode, errorString, subError) {\r\n        var isInteractionRequiredErrorCode = !StringUtils.isEmpty(errorCode) && InteractionRequiredAuthErrorMessage.indexOf(errorCode) > -1;\r\n        var isInteractionRequiredSubError = !StringUtils.isEmpty(subError) && InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\r\n        var isInteractionRequiredErrorDesc = !StringUtils.isEmpty(errorString) && InteractionRequiredAuthErrorMessage.some(function (irErrorCode) {\r\n            return errorString.indexOf(irErrorCode) > -1;\r\n        });\r\n        return isInteractionRequiredErrorCode || isInteractionRequiredErrorDesc || isInteractionRequiredSubError;\r\n    };\r\n    return InteractionRequiredAuthError;\r\n}(ServerError));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar CacheRecord = /** @class */ (function () {\r\n    function CacheRecord(accountEntity, idTokenEntity, accessTokenEntity, refreshTokenEntity) {\r\n        this.account = accountEntity;\r\n        this.idToken = idTokenEntity;\r\n        this.accessToken = accessTokenEntity;\r\n        this.refreshToken = refreshTokenEntity;\r\n    }\r\n    return CacheRecord;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class which provides helpers for OAuth 2.0 protocol specific values\r\n */\r\nvar ProtocolUtils = /** @class */ (function () {\r\n    function ProtocolUtils() {\r\n    }\r\n    /**\r\n     * Appends user state with random guid, or returns random guid.\r\n     * @param userState\r\n     * @param randomGuid\r\n     */\r\n    ProtocolUtils.setRequestState = function (userState, cryptoObj) {\r\n        var libraryState = ProtocolUtils.generateLibraryState(cryptoObj);\r\n        return !StringUtils.isEmpty(userState) ? \"\" + libraryState + Constants.RESOURCE_DELIM + userState : libraryState;\r\n    };\r\n    /**\r\n     * Generates the state value used by the library.\r\n     * @param randomGuid\r\n     * @param cryptoObj\r\n     */\r\n    ProtocolUtils.generateLibraryState = function (cryptoObj) {\r\n        if (!cryptoObj) {\r\n            throw ClientAuthError.createNoCryptoObjectError(\"generateLibraryState\");\r\n        }\r\n        // Create a state object containing a unique id and the timestamp of the request creation\r\n        var stateObj = {\r\n            id: cryptoObj.createNewGuid(),\r\n            ts: TimeUtils.nowSeconds()\r\n        };\r\n        var stateString = JSON.stringify(stateObj);\r\n        return cryptoObj.base64Encode(stateString);\r\n    };\r\n    /**\r\n     * Parses the state into the RequestStateObject, which contains the LibraryState info and the state passed by the user.\r\n     * @param state\r\n     * @param cryptoObj\r\n     */\r\n    ProtocolUtils.parseRequestState = function (state, cryptoObj) {\r\n        if (!cryptoObj) {\r\n            throw ClientAuthError.createNoCryptoObjectError(\"parseRequestState\");\r\n        }\r\n        if (StringUtils.isEmpty(state)) {\r\n            throw ClientAuthError.createInvalidStateError(state, \"Null, undefined or empty state\");\r\n        }\r\n        try {\r\n            // Split the state between library state and user passed state and decode them separately\r\n            var splitState = decodeURIComponent(state).split(Constants.RESOURCE_DELIM);\r\n            var libraryState = splitState[0];\r\n            var userState = splitState.length > 1 ? splitState.slice(1).join(Constants.RESOURCE_DELIM) : \"\";\r\n            var libraryStateString = cryptoObj.base64Decode(libraryState);\r\n            var libraryStateObj = JSON.parse(libraryStateString);\r\n            return {\r\n                userRequestState: !StringUtils.isEmpty(userState) ? userState : \"\",\r\n                libraryState: libraryStateObj\r\n            };\r\n        }\r\n        catch (e) {\r\n            throw ClientAuthError.createInvalidStateError(state, e);\r\n        }\r\n    };\r\n    return ProtocolUtils;\r\n}());\n\n/**\r\n * Class that handles response parsing.\r\n */\r\nvar ResponseHandler = /** @class */ (function () {\r\n    function ResponseHandler(clientId, cacheStorage, cryptoObj, logger) {\r\n        this.clientId = clientId;\r\n        this.cacheStorage = cacheStorage;\r\n        this.cryptoObj = cryptoObj;\r\n        this.logger = logger;\r\n    }\r\n    /**\r\n     * Function which validates server authorization code response.\r\n     * @param serverResponseHash\r\n     * @param cachedState\r\n     * @param cryptoObj\r\n     */\r\n    ResponseHandler.prototype.validateServerAuthorizationCodeResponse = function (serverResponseHash, cachedState, cryptoObj) {\r\n        if (serverResponseHash.state !== cachedState) {\r\n            throw ClientAuthError.createStateMismatchError();\r\n        }\r\n        // Check for error\r\n        if (serverResponseHash.error || serverResponseHash.error_description || serverResponseHash.suberror) {\r\n            if (InteractionRequiredAuthError.isInteractionRequiredError(serverResponseHash.error, serverResponseHash.error_description, serverResponseHash.suberror)) {\r\n                throw new InteractionRequiredAuthError(serverResponseHash.error, serverResponseHash.error_description, serverResponseHash.suberror);\r\n            }\r\n            throw new ServerError(serverResponseHash.error, serverResponseHash.error_description, serverResponseHash.suberror);\r\n        }\r\n        if (serverResponseHash.client_info) {\r\n            buildClientInfo(serverResponseHash.client_info, cryptoObj);\r\n        }\r\n    };\r\n    /**\r\n     * Function which validates server authorization token response.\r\n     * @param serverResponse\r\n     */\r\n    ResponseHandler.prototype.validateTokenResponse = function (serverResponse) {\r\n        // Check for error\r\n        if (serverResponse.error || serverResponse.error_description || serverResponse.suberror) {\r\n            if (InteractionRequiredAuthError.isInteractionRequiredError(serverResponse.error, serverResponse.error_description, serverResponse.suberror)) {\r\n                throw new InteractionRequiredAuthError(serverResponse.error, serverResponse.error_description, serverResponse.suberror);\r\n            }\r\n            var errString = serverResponse.error_codes + \" - [\" + serverResponse.timestamp + \"]: \" + serverResponse.error_description + \" - Correlation ID: \" + serverResponse.correlation_id + \" - Trace ID: \" + serverResponse.trace_id;\r\n            throw new ServerError(serverResponse.error, errString);\r\n        }\r\n        // generate homeAccountId\r\n        if (serverResponse.client_info) {\r\n            this.clientInfo = buildClientInfo(serverResponse.client_info, this.cryptoObj);\r\n            if (!StringUtils.isEmpty(this.clientInfo.uid) && !StringUtils.isEmpty(this.clientInfo.utid)) {\r\n                this.homeAccountIdentifier = this.clientInfo.uid + \".\" + this.clientInfo.utid;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a constructed token response based on given string. Also manages the cache updates and cleanups.\r\n     * @param serverTokenResponse\r\n     * @param authority\r\n     */\r\n    ResponseHandler.prototype.handleServerTokenResponse = function (serverTokenResponse, authority, cachedNonce, cachedState) {\r\n        // create an idToken object (not entity)\r\n        var idTokenObj = new IdToken(serverTokenResponse.id_token, this.cryptoObj);\r\n        // token nonce check (TODO: Add a warning if no nonce is given?)\r\n        if (!StringUtils.isEmpty(cachedNonce)) {\r\n            if (idTokenObj.claims.nonce !== cachedNonce) {\r\n                throw ClientAuthError.createNonceMismatchError();\r\n            }\r\n        }\r\n        // save the response tokens\r\n        var requestStateObj = null;\r\n        if (!StringUtils.isEmpty(cachedState)) {\r\n            requestStateObj = ProtocolUtils.parseRequestState(cachedState, this.cryptoObj);\r\n        }\r\n        var cacheRecord = this.generateCacheRecord(serverTokenResponse, idTokenObj, authority, requestStateObj && requestStateObj.libraryState);\r\n        this.cacheStorage.saveCacheRecord(cacheRecord);\r\n        return ResponseHandler.generateAuthenticationResult(cacheRecord, idTokenObj, false, requestStateObj ? requestStateObj.userRequestState : null);\r\n    };\r\n    /**\r\n     * Generates CacheRecord\r\n     * @param serverTokenResponse\r\n     * @param idTokenObj\r\n     * @param authority\r\n     */\r\n    ResponseHandler.prototype.generateCacheRecord = function (serverTokenResponse, idTokenObj, authority, libraryState) {\r\n        // Account\r\n        var cachedAccount = this.generateAccountEntity(serverTokenResponse, idTokenObj, authority);\r\n        var reqEnvironment = authority.canonicalAuthorityUrlComponents.HostNameAndPort;\r\n        var env = TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment) ? TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment).preferred_cache : \"\";\r\n        if (StringUtils.isEmpty(env)) {\r\n            throw ClientAuthError.createInvalidCacheEnvironmentError();\r\n        }\r\n        // IdToken\r\n        var cachedIdToken = IdTokenEntity.createIdTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.id_token, this.clientId, idTokenObj.claims.tid);\r\n        // AccessToken\r\n        var responseScopes = ScopeSet.fromString(serverTokenResponse.scope);\r\n        // Expiration calculation\r\n        var currentTime = TimeUtils.nowSeconds();\r\n        // If the request timestamp was sent in the library state, use that timestamp to calculate expiration. Otherwise, use current time.\r\n        var timestamp = libraryState ? libraryState.ts : currentTime;\r\n        var tokenExpirationSeconds = timestamp + serverTokenResponse.expires_in;\r\n        var extendedTokenExpirationSeconds = tokenExpirationSeconds + serverTokenResponse.ext_expires_in;\r\n        var cachedAccessToken = AccessTokenEntity.createAccessTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.access_token, this.clientId, idTokenObj.claims.tid, responseScopes.printScopes(), tokenExpirationSeconds, extendedTokenExpirationSeconds);\r\n        // refreshToken\r\n        var cachedRefreshToken = RefreshTokenEntity.createRefreshTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.refresh_token, this.clientId, serverTokenResponse.foci);\r\n        return new CacheRecord(cachedAccount, cachedIdToken, cachedAccessToken, cachedRefreshToken);\r\n    };\r\n    /**\r\n     * Generate Account\r\n     * @param serverTokenResponse\r\n     * @param idToken\r\n     * @param authority\r\n     */\r\n    ResponseHandler.prototype.generateAccountEntity = function (serverTokenResponse, idToken, authority) {\r\n        var authorityType = authority.authorityType;\r\n        if (StringUtils.isEmpty(serverTokenResponse.client_info)) {\r\n            throw ClientAuthError.createClientInfoEmptyError(serverTokenResponse.client_info);\r\n        }\r\n        return (authorityType === AuthorityType.Adfs) ?\r\n            AccountEntity.createADFSAccount(authority, idToken) :\r\n            AccountEntity.createAccount(serverTokenResponse.client_info, authority, idToken, this.cryptoObj);\r\n    };\r\n    /**\r\n     * Creates an @AuthenticationResult from @CacheRecord , @IdToken , and a boolean that states whether or not the result is from cache.\r\n     *\r\n     * Optionally takes a state string that is set as-is in the response.\r\n     *\r\n     * @param cacheRecord\r\n     * @param idTokenObj\r\n     * @param fromTokenCache\r\n     * @param stateString\r\n     */\r\n    ResponseHandler.generateAuthenticationResult = function (cacheRecord, idTokenObj, fromTokenCache, stateString) {\r\n        var responseScopes = ScopeSet.fromString(cacheRecord.accessToken.target);\r\n        return {\r\n            uniqueId: idTokenObj.claims.oid || idTokenObj.claims.sub,\r\n            tenantId: idTokenObj.claims.tid,\r\n            scopes: responseScopes.asArray(),\r\n            account: cacheRecord.account.getAccountInfo(),\r\n            idToken: idTokenObj.rawIdToken,\r\n            idTokenClaims: idTokenObj.claims,\r\n            accessToken: cacheRecord.accessToken.secret,\r\n            fromCache: fromTokenCache,\r\n            expiresOn: new Date(Number(cacheRecord.accessToken.expiresOn) * 1000),\r\n            extExpiresOn: new Date(Number(cacheRecord.accessToken.extendedExpiresOn) * 1000),\r\n            familyId: cacheRecord.refreshToken.familyId || null,\r\n            state: stateString || \"\"\r\n        };\r\n    };\r\n    return ResponseHandler;\r\n}());\n\n/**\r\n * Url object class which can perform various transformations on url strings.\r\n */\r\nvar UrlString = /** @class */ (function () {\r\n    function UrlString(url) {\r\n        this._urlString = url;\r\n        if (!StringUtils.isEmpty(this._urlString) && StringUtils.isEmpty(this.getHash())) {\r\n            this._urlString = this.canonicalizeUri(url);\r\n        }\r\n        else if (StringUtils.isEmpty(this._urlString)) {\r\n            // Throws error if url is empty\r\n            throw ClientConfigurationError.createUrlEmptyError();\r\n        }\r\n    }\r\n    Object.defineProperty(UrlString.prototype, \"urlString\", {\r\n        get: function () {\r\n            return this._urlString;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Ensure urls are lower case and end with a / character.\r\n     * @param url\r\n     */\r\n    UrlString.prototype.canonicalizeUri = function (url) {\r\n        if (url) {\r\n            url = url.toLowerCase();\r\n        }\r\n        if (url && !StringUtils.endsWith(url, \"/\")) {\r\n            url += \"/\";\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Throws if urlString passed is not a valid authority URI string.\r\n     */\r\n    UrlString.prototype.validateAsUri = function () {\r\n        // Attempts to parse url for uri components\r\n        var components;\r\n        try {\r\n            components = this.getUrlComponents();\r\n        }\r\n        catch (e) {\r\n            throw ClientConfigurationError.createUrlParseError(e);\r\n        }\r\n        // Throw error if URI or path segments are not parseable.\r\n        if (!components.HostNameAndPort || !components.PathSegments || components.PathSegments.length < 1) {\r\n            throw ClientConfigurationError.createUrlParseError(\"Given url string: \" + this.urlString);\r\n        }\r\n        // Throw error if uri is insecure.\r\n        if (!components.Protocol || components.Protocol.toLowerCase() !== \"https:\") {\r\n            throw ClientConfigurationError.createInsecureAuthorityUriError(this.urlString);\r\n        }\r\n    };\r\n    /**\r\n     * Function to remove query string params from url. Returns the new url.\r\n     * @param url\r\n     * @param name\r\n     */\r\n    UrlString.prototype.urlRemoveQueryStringParameter = function (name) {\r\n        var regex = new RegExp(\"(\\\\&\" + name + \"=)[^\\&]+\");\r\n        this._urlString = this.urlString.replace(regex, \"\");\r\n        // name=value&\r\n        regex = new RegExp(\"(\" + name + \"=)[^\\&]+&\");\r\n        this._urlString = this.urlString.replace(regex, \"\");\r\n        // name=value\r\n        regex = new RegExp(\"(\" + name + \"=)[^\\&]+\");\r\n        this._urlString = this.urlString.replace(regex, \"\");\r\n        return this.urlString;\r\n    };\r\n    UrlString.removeHashFromUrl = function (url) {\r\n        return url.split(\"#\")[0];\r\n    };\r\n    /**\r\n     * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\r\n     * @param href The url\r\n     * @param tenantId The tenant id to replace\r\n     */\r\n    UrlString.prototype.replaceTenantPath = function (tenantId) {\r\n        var urlObject = this.getUrlComponents();\r\n        var pathArray = urlObject.PathSegments;\r\n        if (tenantId && (pathArray.length !== 0 && (pathArray[0] === AADAuthorityConstants.COMMON || pathArray[0] === AADAuthorityConstants.ORGANIZATIONS))) {\r\n            pathArray[0] = tenantId;\r\n        }\r\n        return UrlString.constructAuthorityUriFromObject(urlObject);\r\n    };\r\n    /**\r\n     * Returns the anchor part(#) of the URL\r\n     */\r\n    UrlString.prototype.getHash = function () {\r\n        var hashIndex1 = this.urlString.indexOf(\"#\");\r\n        var hashIndex2 = this.urlString.indexOf(\"#/\");\r\n        if (hashIndex2 > -1) {\r\n            return this.urlString.substring(hashIndex2 + 2);\r\n        }\r\n        else if (hashIndex1 > -1) {\r\n            return this.urlString.substring(hashIndex1 + 1);\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Returns deserialized portion of URL hash\r\n     */\r\n    UrlString.prototype.getDeserializedHash = function () {\r\n        var hash = this.getHash();\r\n        var deserializedHash = StringUtils.queryStringToObject(hash);\r\n        if (!deserializedHash) {\r\n            throw ClientAuthError.createHashNotDeserializedError(JSON.stringify(deserializedHash));\r\n        }\r\n        return deserializedHash;\r\n    };\r\n    /**\r\n     * Parses out the components from a url string.\r\n     * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\r\n     */\r\n    UrlString.prototype.getUrlComponents = function () {\r\n        // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\r\n        var regEx = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\r\n        // If url string does not match regEx, we throw an error\r\n        var match = this.urlString.match(regEx);\r\n        if (!match) {\r\n            throw ClientConfigurationError.createUrlParseError(\"Given url string: \" + this.urlString);\r\n        }\r\n        // Url component object\r\n        var urlComponents = {\r\n            Protocol: match[1],\r\n            HostNameAndPort: match[4],\r\n            AbsolutePath: match[5]\r\n        };\r\n        var pathSegments = urlComponents.AbsolutePath.split(\"/\");\r\n        pathSegments = pathSegments.filter(function (val) { return val && val.length > 0; }); // remove empty elements\r\n        urlComponents.PathSegments = pathSegments;\r\n        return urlComponents;\r\n    };\r\n    UrlString.constructAuthorityUriFromObject = function (urlObject) {\r\n        return new UrlString(urlObject.Protocol + \"//\" + urlObject.HostNameAndPort + \"/\" + urlObject.PathSegments.join(\"/\"));\r\n    };\r\n    /**\r\n     * Check if the hash of the URL string contains known properties\r\n     */\r\n    UrlString.hashContainsKnownProperties = function (url) {\r\n        if (StringUtils.isEmpty(url)) {\r\n            return false;\r\n        }\r\n        var urlString = new UrlString(url);\r\n        var parameters = urlString.getDeserializedHash();\r\n        return !!(parameters.code ||\r\n            parameters.error_description ||\r\n            parameters.error ||\r\n            parameters.state);\r\n    };\r\n    return UrlString;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Oauth2.0 Authorization Code client\r\n */\r\nvar AuthorizationCodeClient = /** @class */ (function (_super) {\r\n    __extends(AuthorizationCodeClient, _super);\r\n    function AuthorizationCodeClient(configuration) {\r\n        return _super.call(this, configuration) || this;\r\n    }\r\n    /**\r\n     * Creates the URL of the authorization request letting the user input credentials and consent to the\r\n     * application. The URL target the /authorize endpoint of the authority configured in the\r\n     * application object.\r\n     *\r\n     * Once the user inputs their credentials and consents, the authority will send a response to the redirect URI\r\n     * sent in the request and should contain an authorization code, which can then be used to acquire tokens via\r\n     * acquireToken(AuthorizationCodeRequest)\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.getAuthCodeUrl = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var queryString;\r\n            return __generator(this, function (_a) {\r\n                queryString = this.createAuthCodeUrlQueryString(request);\r\n                return [2 /*return*/, this.authority.authorizationEndpoint + \"?\" + queryString];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * API to acquire a token in exchange of 'authorization_code` acquired by the user in the first leg of the\r\n     * authorization_code_grant\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.acquireToken = function (request, cachedNonce, cachedState) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response, responseHandler, tokenResponse;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.info(\"in acquireToken call\");\r\n                        // If no code response is given, we cannot acquire a token.\r\n                        if (!request || StringUtils.isEmpty(request.code)) {\r\n                            throw ClientAuthError.createTokenRequestCannotBeMadeError();\r\n                        }\r\n                        return [4 /*yield*/, this.executeTokenRequest(this.authority, request)];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger);\r\n                        // Validate response. This function throws a server error if an error is returned by the server.\r\n                        responseHandler.validateTokenResponse(response.body);\r\n                        tokenResponse = responseHandler.handleServerTokenResponse(response.body, this.authority, cachedNonce, cachedState);\r\n                        return [2 /*return*/, tokenResponse];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Handles the hash fragment response from public client code request. Returns a code response used by\r\n     * the client to exchange for a token in acquireToken.\r\n     * @param hashFragment\r\n     */\r\n    AuthorizationCodeClient.prototype.handleFragmentResponse = function (hashFragment, cachedState) {\r\n        // Handle responses.\r\n        var responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger);\r\n        // Deserialize hash fragment response parameters.\r\n        var hashUrlString = new UrlString(hashFragment);\r\n        var serverParams = hashUrlString.getDeserializedHash();\r\n        // Get code response\r\n        responseHandler.validateServerAuthorizationCodeResponse(serverParams, cachedState, this.cryptoUtils);\r\n        return serverParams.code;\r\n    };\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param authorityUri\r\n     */\r\n    AuthorizationCodeClient.prototype.getLogoutUri = function (logoutRequest) {\r\n        // Throw error if logoutRequest is null/undefined\r\n        if (!logoutRequest) {\r\n            throw ClientConfigurationError.createEmptyLogoutRequestError();\r\n        }\r\n        if (logoutRequest.account) {\r\n            // Clear given account.\r\n            this.cacheManager.removeAccount(AccountEntity.generateAccountCacheKey(logoutRequest.account));\r\n        }\r\n        else {\r\n            // Clear all accounts and tokens\r\n            this.cacheManager.clear();\r\n        }\r\n        // Get postLogoutRedirectUri.\r\n        var postLogoutUriParam = logoutRequest.postLogoutRedirectUri ?\r\n            \"?\" + AADServerParamKeys.POST_LOGOUT_URI + \"=\" + encodeURIComponent(logoutRequest.postLogoutRedirectUri) : \"\";\r\n        var correlationIdParam = logoutRequest.correlationId ?\r\n            \"&\" + AADServerParamKeys.CLIENT_REQUEST_ID + \"=\" + encodeURIComponent(logoutRequest.correlationId) : \"\";\r\n        // Construct logout URI.\r\n        var logoutUri = \"\" + this.authority.endSessionEndpoint + postLogoutUriParam + correlationIdParam;\r\n        return logoutUri;\r\n    };\r\n    /**\r\n     * Executes POST request to token endpoint\r\n     * @param authority\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.executeTokenRequest = function (authority, request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var requestBody, headers;\r\n            return __generator(this, function (_a) {\r\n                requestBody = this.createTokenRequestBody(request);\r\n                headers = this.createDefaultTokenRequestHeaders();\r\n                return [2 /*return*/, this.executePostToTokenEndpoint(authority.tokenEndpoint, requestBody, headers)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Generates a map for all the params to be sent to the service\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.createTokenRequestBody = function (request) {\r\n        var parameterBuilder = new RequestParameterBuilder();\r\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\r\n        // validate the redirectUri (to be a non null value)\r\n        parameterBuilder.addRedirectUri(request.redirectUri);\r\n        var scopeSet = new ScopeSet(request.scopes || []);\r\n        parameterBuilder.addScopes(scopeSet);\r\n        // add code: user set, not validated\r\n        parameterBuilder.addAuthorizationCode(request.code);\r\n        // add code_verifier if passed\r\n        if (request.codeVerifier) {\r\n            parameterBuilder.addCodeVerifier(request.codeVerifier);\r\n        }\r\n        parameterBuilder.addGrantType(GrantType.AUTHORIZATION_CODE_GRANT);\r\n        parameterBuilder.addClientInfo();\r\n        var correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\r\n        parameterBuilder.addCorrelationId(correlationId);\r\n        return parameterBuilder.createQueryString();\r\n    };\r\n    /**\r\n     * This API validates the `AuthorizationCodeUrlRequest` and creates a URL\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.createAuthCodeUrlQueryString = function (request) {\r\n        var parameterBuilder = new RequestParameterBuilder();\r\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\r\n        var scopeSet = new ScopeSet(request.scopes || []);\r\n        if (request.extraScopesToConsent) {\r\n            scopeSet.appendScopes(request.extraScopesToConsent);\r\n        }\r\n        parameterBuilder.addScopes(scopeSet);\r\n        // validate the redirectUri (to be a non null value)\r\n        parameterBuilder.addRedirectUri(request.redirectUri);\r\n        // generate the correlationId if not set by the user and add\r\n        var correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\r\n        parameterBuilder.addCorrelationId(correlationId);\r\n        // add response_mode. If not passed in it defaults to query.\r\n        parameterBuilder.addResponseMode(request.responseMode);\r\n        // add response_type = code\r\n        parameterBuilder.addResponseTypeCode();\r\n        // add library info parameters\r\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\r\n        // add client_info=1\r\n        parameterBuilder.addClientInfo();\r\n        if (request.codeChallenge) {\r\n            parameterBuilder.addCodeChallengeParams(request.codeChallenge, request.codeChallengeMethod);\r\n        }\r\n        if (request.prompt) {\r\n            parameterBuilder.addPrompt(request.prompt);\r\n        }\r\n        if (request.loginHint) {\r\n            parameterBuilder.addLoginHint(request.loginHint);\r\n        }\r\n        if (request.domainHint) {\r\n            parameterBuilder.addDomainHint(request.domainHint);\r\n        }\r\n        if (request.nonce) {\r\n            parameterBuilder.addNonce(request.nonce);\r\n        }\r\n        if (request.state) {\r\n            parameterBuilder.addState(request.state);\r\n        }\r\n        if (request.claims) {\r\n            parameterBuilder.addClaims(request.claims);\r\n        }\r\n        if (request.extraQueryParameters) {\r\n            parameterBuilder.addExtraQueryParameters(request.extraQueryParameters);\r\n        }\r\n        return parameterBuilder.createQueryString();\r\n    };\r\n    return AuthorizationCodeClient;\r\n}(BaseClient));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * OAuth2.0 Device code client\r\n */\r\nvar DeviceCodeClient = /** @class */ (function (_super) {\r\n    __extends(DeviceCodeClient, _super);\r\n    function DeviceCodeClient(configuration) {\r\n        return _super.call(this, configuration) || this;\r\n    }\r\n    /**\r\n     * Gets device code from device code endpoint, calls back to with device code response, and\r\n     * polls token endpoint to exchange device code for tokens\r\n     * @param request\r\n     */\r\n    DeviceCodeClient.prototype.acquireToken = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var deviceCodeResponse, response;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getDeviceCode(request)];\r\n                    case 1:\r\n                        deviceCodeResponse = _a.sent();\r\n                        request.deviceCodeCallback(deviceCodeResponse);\r\n                        return [4 /*yield*/, this.acquireTokenWithDeviceCode(request, deviceCodeResponse)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        // TODO handle response\r\n                        return [2 /*return*/, JSON.stringify(response)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates device code request and executes http GET\r\n     * @param request\r\n     */\r\n    DeviceCodeClient.prototype.getDeviceCode = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var queryString, headers;\r\n            return __generator(this, function (_a) {\r\n                queryString = this.createQueryString(request);\r\n                headers = this.createDefaultLibraryHeaders();\r\n                return [2 /*return*/, this.executePostRequestToDeviceCodeEndpoint(this.authority.deviceCodeEndpoint, queryString, headers)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Executes POST request to device code endpoint\r\n     * @param deviceCodeEndpoint\r\n     * @param queryString\r\n     * @param headers\r\n     */\r\n    DeviceCodeClient.prototype.executePostRequestToDeviceCodeEndpoint = function (deviceCodeEndpoint, queryString, headers) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, userCode, deviceCode, verificationUri, expiresIn, interval, message;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.networkClient.sendPostRequestAsync(deviceCodeEndpoint, {\r\n                            body: queryString,\r\n                            headers: headers\r\n                        })];\r\n                    case 1:\r\n                        _a = (_b.sent()).body, userCode = _a.user_code, deviceCode = _a.device_code, verificationUri = _a.verification_uri, expiresIn = _a.expires_in, interval = _a.interval, message = _a.message;\r\n                        return [2 /*return*/, {\r\n                                userCode: userCode,\r\n                                deviceCode: deviceCode,\r\n                                verificationUri: verificationUri,\r\n                                expiresIn: expiresIn,\r\n                                interval: interval,\r\n                                message: message\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Create device code endpoint query parameters and returns string\r\n     */\r\n    DeviceCodeClient.prototype.createQueryString = function (request) {\r\n        var parameterBuilder = new RequestParameterBuilder();\r\n        var scopeSet = new ScopeSet(request.scopes || []);\r\n        parameterBuilder.addScopes(scopeSet);\r\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\r\n        return parameterBuilder.createQueryString();\r\n    };\r\n    /**\r\n     * Creates token request with device code response and polls token endpoint at interval set by the device code\r\n     * response\r\n     * @param request\r\n     * @param deviceCodeResponse\r\n     */\r\n    DeviceCodeClient.prototype.acquireTokenWithDeviceCode = function (request, deviceCodeResponse) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var requestBody, headers, deviceCodeExpirationTime, pollingIntervalMilli;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                requestBody = this.createTokenRequestBody(request, deviceCodeResponse);\r\n                headers = this.createDefaultTokenRequestHeaders();\r\n                deviceCodeExpirationTime = TimeUtils.nowSeconds() + deviceCodeResponse.expiresIn;\r\n                pollingIntervalMilli = deviceCodeResponse.interval * 1000;\r\n                // Poll token endpoint while (device code is not expired AND operation has not been cancelled by\r\n                // setting CancellationToken.cancel = true). POST request is sent at interval set by pollingIntervalMilli\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        var intervalId = setInterval(function () { return __awaiter(_this, void 0, void 0, function () {\r\n                            var response, error_1;\r\n                            return __generator(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0:\r\n                                        _a.trys.push([0, 5, , 6]);\r\n                                        if (!request.cancel) return [3 /*break*/, 1];\r\n                                        this.logger.error(\"Token request cancelled by setting DeviceCodeRequest.cancel = true\");\r\n                                        clearInterval(intervalId);\r\n                                        reject(ClientAuthError.createDeviceCodeCancelledError());\r\n                                        return [3 /*break*/, 4];\r\n                                    case 1:\r\n                                        if (!(TimeUtils.nowSeconds() > deviceCodeExpirationTime)) return [3 /*break*/, 2];\r\n                                        this.logger.error(\"Device code expired. Expiration time of device code was \" + deviceCodeExpirationTime);\r\n                                        clearInterval(intervalId);\r\n                                        reject(ClientAuthError.createDeviceCodeExpiredError());\r\n                                        return [3 /*break*/, 4];\r\n                                    case 2: return [4 /*yield*/, this.executePostToTokenEndpoint(this.authority.tokenEndpoint, requestBody, headers)];\r\n                                    case 3:\r\n                                        response = _a.sent();\r\n                                        if (response.body && response.body.error == Constants.AUTHORIZATION_PENDING) {\r\n                                            // user authorization is pending. Sleep for polling interval and try again\r\n                                            this.logger.info(response.body.error_description);\r\n                                        }\r\n                                        else {\r\n                                            clearInterval(intervalId);\r\n                                            resolve(response.body);\r\n                                        }\r\n                                        _a.label = 4;\r\n                                    case 4: return [3 /*break*/, 6];\r\n                                    case 5:\r\n                                        error_1 = _a.sent();\r\n                                        clearInterval(intervalId);\r\n                                        reject(error_1);\r\n                                        return [3 /*break*/, 6];\r\n                                    case 6: return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); }, pollingIntervalMilli);\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates query parameters and converts to string.\r\n     * @param request\r\n     * @param deviceCodeResponse\r\n     */\r\n    DeviceCodeClient.prototype.createTokenRequestBody = function (request, deviceCodeResponse) {\r\n        var requestParameters = new RequestParameterBuilder();\r\n        var scopeSet = new ScopeSet(request.scopes || []);\r\n        requestParameters.addScopes(scopeSet);\r\n        requestParameters.addClientId(this.config.authOptions.clientId);\r\n        requestParameters.addGrantType(GrantType.DEVICE_CODE_GRANT);\r\n        requestParameters.addDeviceCode(deviceCodeResponse.deviceCode);\r\n        var correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\r\n        requestParameters.addCorrelationId(correlationId);\r\n        return requestParameters.createQueryString();\r\n    };\r\n    return DeviceCodeClient;\r\n}(BaseClient));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * OAuth2.0 refresh token client\r\n */\r\nvar RefreshTokenClient = /** @class */ (function (_super) {\r\n    __extends(RefreshTokenClient, _super);\r\n    function RefreshTokenClient(configuration) {\r\n        return _super.call(this, configuration) || this;\r\n    }\r\n    RefreshTokenClient.prototype.acquireToken = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response, responseHandler, tokenResponse;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.executeTokenRequest(request, this.authority)];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger);\r\n                        responseHandler.validateTokenResponse(response.body);\r\n                        tokenResponse = responseHandler.handleServerTokenResponse(response.body, this.authority);\r\n                        return [2 /*return*/, tokenResponse];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RefreshTokenClient.prototype.executeTokenRequest = function (request, authority) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var requestBody, headers;\r\n            return __generator(this, function (_a) {\r\n                requestBody = this.createTokenRequestBody(request);\r\n                headers = this.createDefaultTokenRequestHeaders();\r\n                return [2 /*return*/, this.executePostToTokenEndpoint(authority.tokenEndpoint, requestBody, headers)];\r\n            });\r\n        });\r\n    };\r\n    RefreshTokenClient.prototype.createTokenRequestBody = function (request) {\r\n        var parameterBuilder = new RequestParameterBuilder();\r\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\r\n        var scopeSet = new ScopeSet(request.scopes || []);\r\n        parameterBuilder.addScopes(scopeSet);\r\n        parameterBuilder.addGrantType(GrantType.REFRESH_TOKEN_GRANT);\r\n        parameterBuilder.addClientInfo();\r\n        var correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\r\n        parameterBuilder.addCorrelationId(correlationId);\r\n        parameterBuilder.addRefreshToken(request.refreshToken);\r\n        return parameterBuilder.createQueryString();\r\n    };\r\n    return RefreshTokenClient;\r\n}(BaseClient));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar SilentFlowClient = /** @class */ (function (_super) {\r\n    __extends(SilentFlowClient, _super);\r\n    function SilentFlowClient(configuration) {\r\n        return _super.call(this, configuration) || this;\r\n    }\r\n    /**\r\n     * Retrieves a token from cache if it is still valid, or uses the cached refresh token to renew\r\n     * the given token and returns the renewed token\r\n     * @param request\r\n     */\r\n    SilentFlowClient.prototype.acquireToken = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var requestScopes, accountKey, cachedAccount, homeAccountId, environment, cachedAccessToken, cachedRefreshToken, refreshTokenClient, refreshTokenRequest, cachedIdToken, idTokenObj;\r\n            return __generator(this, function (_a) {\r\n                // Cannot renew token if no request object is given.\r\n                if (!request) {\r\n                    throw ClientConfigurationError.createEmptyTokenRequestError();\r\n                }\r\n                // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\r\n                if (!request.account) {\r\n                    throw ClientAuthError.createNoAccountInSilentRequestError();\r\n                }\r\n                requestScopes = new ScopeSet(request.scopes || []);\r\n                accountKey = AccountEntity.generateAccountCacheKey(request.account);\r\n                cachedAccount = this.cacheManager.getAccount(accountKey);\r\n                homeAccountId = cachedAccount.homeAccountId;\r\n                environment = cachedAccount.environment;\r\n                cachedAccessToken = this.readAccessTokenFromCache(homeAccountId, environment, requestScopes, cachedAccount.realm);\r\n                cachedRefreshToken = this.readRefreshTokenFromCache(homeAccountId, environment);\r\n                // Check if refresh is forced, or if tokens are expired. If neither are true, return a token response with the found token entry.\r\n                if (request.forceRefresh || !cachedAccessToken || this.isTokenExpired(cachedAccessToken.expiresOn)) {\r\n                    // no refresh Token\r\n                    if (!cachedRefreshToken) {\r\n                        throw ClientAuthError.createNoTokensFoundError();\r\n                    }\r\n                    refreshTokenClient = new RefreshTokenClient(this.config);\r\n                    refreshTokenRequest = __assign(__assign({}, request), { refreshToken: cachedRefreshToken.secret });\r\n                    return [2 /*return*/, refreshTokenClient.acquireToken(refreshTokenRequest)];\r\n                }\r\n                cachedIdToken = this.readIdTokenFromCache(homeAccountId, environment, cachedAccount.realm);\r\n                idTokenObj = new IdToken(cachedIdToken.secret, this.config.cryptoInterface);\r\n                return [2 /*return*/, ResponseHandler.generateAuthenticationResult({\r\n                        account: cachedAccount,\r\n                        accessToken: cachedAccessToken,\r\n                        idToken: cachedIdToken,\r\n                        refreshToken: cachedRefreshToken\r\n                    }, idTokenObj, true)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * fetches idToken from cache if present\r\n     * @param request\r\n     */\r\n    SilentFlowClient.prototype.readIdTokenFromCache = function (homeAccountId, environment, inputRealm) {\r\n        var idTokenKey = CredentialEntity.generateCredentialCacheKey(homeAccountId, environment, CredentialType.ID_TOKEN, this.config.authOptions.clientId, inputRealm);\r\n        return this.cacheManager.getCredential(idTokenKey);\r\n    };\r\n    /**\r\n     * fetches accessToken from cache if present\r\n     * @param request\r\n     * @param scopes\r\n     */\r\n    SilentFlowClient.prototype.readAccessTokenFromCache = function (homeAccountId, environment, scopes, inputRealm) {\r\n        var accessTokenFilter = {\r\n            homeAccountId: homeAccountId,\r\n            environment: environment,\r\n            credentialType: CredentialType.ACCESS_TOKEN,\r\n            clientId: this.config.authOptions.clientId,\r\n            realm: inputRealm,\r\n            target: scopes.printScopes()\r\n        };\r\n        var credentialCache = this.cacheManager.getCredentialsFilteredBy(accessTokenFilter);\r\n        var accessTokens = Object.keys(credentialCache.accessTokens).map(function (key) { return credentialCache.accessTokens[key]; });\r\n        if (accessTokens.length > 1) ;\r\n        else if (accessTokens.length < 1) {\r\n            return null;\r\n        }\r\n        return accessTokens[0];\r\n    };\r\n    /**\r\n     * fetches refreshToken from cache if present\r\n     * @param request\r\n     */\r\n    SilentFlowClient.prototype.readRefreshTokenFromCache = function (homeAccountId, environment) {\r\n        var refreshTokenKey = CredentialEntity.generateCredentialCacheKey(homeAccountId, environment, CredentialType.REFRESH_TOKEN, this.config.authOptions.clientId);\r\n        return this.cacheManager.getCredential(refreshTokenKey);\r\n    };\r\n    /**\r\n     * check if a token is expired based on given UTC time in seconds.\r\n     * @param expiresOn\r\n     */\r\n    SilentFlowClient.prototype.isTokenExpired = function (expiresOn) {\r\n        // check for access token expiry\r\n        var expirationSec = Number(expiresOn) || 0;\r\n        var offsetCurrentTimeSec = TimeUtils.nowSeconds() + this.config.systemOptions.tokenRenewalOffsetSeconds;\r\n        // If current time + offset is greater than token expiration time, then token is expired.\r\n        return (offsetCurrentTimeSec > expirationSec);\r\n    };\r\n    return SilentFlowClient;\r\n}(BaseClient));\n\n/**\r\n * The authority class validates the authority URIs used by the user, and retrieves the OpenID Configuration Data from the\r\n * endpoint. It will store the pertinent config data in this object for use during token calls.\r\n */\r\nvar Authority = /** @class */ (function () {\r\n    function Authority(authority, networkInterface) {\r\n        this.canonicalAuthority = authority;\r\n        this._canonicalAuthority.validateAsUri();\r\n        this.networkInterface = networkInterface;\r\n    }\r\n    Object.defineProperty(Authority.prototype, \"authorityType\", {\r\n        // See above for AuthorityType\r\n        get: function () {\r\n            var pathSegments = this.canonicalAuthorityUrlComponents.PathSegments;\r\n            if (pathSegments.length && pathSegments[0].toLowerCase() === Constants.ADFS) {\r\n                return AuthorityType.Adfs;\r\n            }\r\n            return AuthorityType.Default;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"canonicalAuthority\", {\r\n        /**\r\n         * A URL that is the authority set by the developer\r\n         */\r\n        get: function () {\r\n            return this._canonicalAuthority.urlString;\r\n        },\r\n        /**\r\n         * Sets canonical authority.\r\n         */\r\n        set: function (url) {\r\n            this._canonicalAuthority = new UrlString(url);\r\n            this._canonicalAuthority.validateAsUri();\r\n            this._canonicalAuthorityUrlComponents = null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"canonicalAuthorityUrlComponents\", {\r\n        /**\r\n         * Get authority components.\r\n         */\r\n        get: function () {\r\n            if (!this._canonicalAuthorityUrlComponents) {\r\n                this._canonicalAuthorityUrlComponents = this._canonicalAuthority.getUrlComponents();\r\n            }\r\n            return this._canonicalAuthorityUrlComponents;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"tenant\", {\r\n        /**\r\n         * Get tenant for authority.\r\n         */\r\n        get: function () {\r\n            return this.canonicalAuthorityUrlComponents.PathSegments[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"authorizationEndpoint\", {\r\n        /**\r\n         * OAuth /authorize endpoint for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.replaceTenant(this.tenantDiscoveryResponse.authorization_endpoint);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"tokenEndpoint\", {\r\n        /**\r\n         * OAuth /token endpoint for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.replaceTenant(this.tenantDiscoveryResponse.token_endpoint);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"deviceCodeEndpoint\", {\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.tenantDiscoveryResponse.token_endpoint.replace(\"/token\", \"/devicecode\");\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"endSessionEndpoint\", {\r\n        /**\r\n         * OAuth logout endpoint for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.replaceTenant(this.tenantDiscoveryResponse.end_session_endpoint);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"selfSignedJwtAudience\", {\r\n        /**\r\n         * OAuth issuer for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.replaceTenant(this.tenantDiscoveryResponse.issuer);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Replaces tenant in url path with current tenant. Defaults to common.\r\n     * @param urlString\r\n     */\r\n    Authority.prototype.replaceTenant = function (urlString) {\r\n        return urlString.replace(/{tenant}|{tenantid}/g, this.tenant);\r\n    };\r\n    Object.defineProperty(Authority.prototype, \"defaultOpenIdConfigurationEndpoint\", {\r\n        /**\r\n         * The default open id configuration endpoint for any canonical authority.\r\n         */\r\n        get: function () {\r\n            if (this.authorityType === AuthorityType.Adfs) {\r\n                return this.canonicalAuthority + \".well-known/openid-configuration\";\r\n            }\r\n            return this.canonicalAuthority + \"v2.0/.well-known/openid-configuration\";\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Boolean that returns whethr or not tenant discovery has been completed.\r\n     */\r\n    Authority.prototype.discoveryComplete = function () {\r\n        return !!this.tenantDiscoveryResponse;\r\n    };\r\n    /**\r\n     * Gets OAuth endpoints from the given OpenID configuration endpoint.\r\n     * @param openIdConfigurationEndpoint\r\n     */\r\n    Authority.prototype.discoverEndpoints = function (openIdConfigurationEndpoint) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.networkInterface.sendGetRequestAsync(openIdConfigurationEndpoint)];\r\n            });\r\n        });\r\n    };\r\n    Object.defineProperty(Authority.prototype, \"aadInstanceDiscoveryEndpointUrl\", {\r\n        // Default AAD Instance Discovery Endpoint\r\n        get: function () {\r\n            return \"\" + Constants.AAD_INSTANCE_DISCOVERY_ENDPT + this.canonicalAuthority + \"oauth2/v2.0/authorize\";\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Authority.prototype.validateAndSetPreferredNetwork = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var host, preferredNetwork;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        host = this.canonicalAuthorityUrlComponents.HostNameAndPort;\r\n                        if (!(TrustedAuthority.getTrustedHostList().length === 0)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, TrustedAuthority.setTrustedAuthoritiesFromNetwork(this._canonicalAuthority, this.networkInterface)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        if (!TrustedAuthority.IsInTrustedHostList(host)) {\r\n                            throw ClientConfigurationError.createUntrustedAuthorityError();\r\n                        }\r\n                        preferredNetwork = TrustedAuthority.getCloudDiscoveryMetadata(host).preferred_network;\r\n                        if (host !== preferredNetwork) {\r\n                            this.canonicalAuthority = this.canonicalAuthority.replace(host, preferredNetwork);\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Perform endpoint discovery to discover the /authorize, /token and logout endpoints.\r\n     */\r\n    Authority.prototype.resolveEndpointsAsync = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var openIdConfigEndpoint, response;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.validateAndSetPreferredNetwork()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        openIdConfigEndpoint = this.defaultOpenIdConfigurationEndpoint;\r\n                        return [4 /*yield*/, this.discoverEndpoints(openIdConfigEndpoint)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        this.tenantDiscoveryResponse = response.body;\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return Authority;\r\n}());\n\nvar AuthorityFactory = /** @class */ (function () {\r\n    function AuthorityFactory() {\r\n    }\r\n    /**\r\n     * Create an authority object of the correct type based on the url\r\n     * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\r\n     *\r\n     * Also performs endpoint discovery.\r\n     *\r\n     * @param authorityUri\r\n     * @param networkClient\r\n     */\r\n    AuthorityFactory.createDiscoveredInstance = function (authorityUri, networkClient) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var acquireTokenAuthority, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        acquireTokenAuthority = AuthorityFactory.createInstance(authorityUri, networkClient);\r\n                        if (acquireTokenAuthority.discoveryComplete()) {\r\n                            return [2 /*return*/, acquireTokenAuthority];\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, acquireTokenAuthority.resolveEndpointsAsync()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, acquireTokenAuthority];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        throw ClientAuthError.createEndpointDiscoveryIncompleteError(e_1);\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Create an authority object of the correct type based on the url\r\n     * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\r\n     *\r\n     * Does not perform endpoint discovery.\r\n     *\r\n     * @param authorityUrl\r\n     * @param networkInterface\r\n     */\r\n    AuthorityFactory.createInstance = function (authorityUrl, networkInterface) {\r\n        // Throw error if authority url is empty\r\n        if (StringUtils.isEmpty(authorityUrl)) {\r\n            throw ClientConfigurationError.createUrlEmptyError();\r\n        }\r\n        return new Authority(authorityUrl, networkInterface);\r\n    };\r\n    return AuthorityFactory;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * APP_META_DATA Cache\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key: appmetadata-<environment>-<client_id>\r\n *\r\n * Value:\r\n * {\r\n *      clientId: client ID of the application\r\n *      environment: entity that issued the token, represented as a full host\r\n *      familyId: Family ID identifier, '1' represents Microsoft Family\r\n * }\r\n */\r\nvar AppMetadataEntity = /** @class */ (function () {\r\n    function AppMetadataEntity() {\r\n    }\r\n    /**\r\n     * Generate Account Cache Key as per the schema: <home_account_id>-<environment>-<realm*>\r\n     */\r\n    AppMetadataEntity.prototype.generateAppMetaDataEntityKey = function () {\r\n        var appMetaDataKeyArray = [APP_META_DATA, this.environment, this.clientId];\r\n        return appMetaDataKeyArray.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    };\r\n    return AppMetadataEntity;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Result returned from the authority's token endpoint.\r\n * - uniqueId               - `oid` or `sub` claim from ID token\r\n * - tenantId               - `tid` claim from ID token\r\n * - scopes                 - Scopes that are validated for the respective token\r\n * - account                - An account object representation of the currently signed-in user\r\n * - idToken                - Id token received as part of the response\r\n * - idTokenClaims          - MSAL-relevant ID token claims\r\n * - accessToken            - Access token received as part of the response\r\n * - fromCache              - Boolean denoting whether token came from cache\r\n * - expiresOn              - Javascript Date object representing relative expiration of access token\r\n * - extExpiresOn           - Javascript Date object representing extended relative expiration of access token in case of server outage\r\n * - state                  - Value passed in by user in request\r\n * - familyId               - Family ID identifier, usually only used for refresh tokens\r\n */\r\nvar AuthenticationResult = /** @class */ (function () {\r\n    function AuthenticationResult() {\r\n    }\r\n    return AuthenticationResult;\r\n}());\n\nexport { AccessTokenEntity, AccountEntity, AppMetadataEntity, AuthError, AuthErrorMessage, AuthenticationResult, Authority, AuthorityFactory, AuthorityType, AuthorizationCodeClient, CacheManager, CacheSchemaType, ClientAuthError, ClientAuthErrorMessage, ClientConfigurationError, ClientConfigurationErrorMessage, Constants, CredentialEntity, CredentialType, DEFAULT_SYSTEM_OPTIONS, DeviceCodeClient, IdToken, IdTokenEntity, InteractionRequiredAuthError, LogLevel, Logger, PersistentCacheKeys, PromptValue, ProtocolUtils, RefreshTokenClient, RefreshTokenEntity, ResponseMode, ServerError, SilentFlowClient, StringUtils, TimeUtils, TrustedAuthority, UrlString };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n/**\r\n * Constants\r\n */\r\nexport const BrowserConstants = {\r\n    // Local storage constant string\r\n    CACHE_LOCATION_LOCAL: \"localStorage\",\r\n    // Session storage constant string\r\n    CACHE_LOCATION_SESSION: \"sessionStorage\",\r\n    // Interaction status key (only used for browsers)\r\n    INTERACTION_STATUS_KEY: \"interaction.status\",\r\n    // Interaction in progress cache value\r\n    INTERACTION_IN_PROGRESS_VALUE: \"interaction_in_progress\",\r\n    // Invalid grant error code\r\n    INVALID_GRANT_ERROR: \"invalid_grant\",\r\n    // Default popup window width\r\n    POPUP_WIDTH: 483,\r\n    // Default popup window height\r\n    POPUP_HEIGHT: 600,\r\n    // Default popup monitor poll interval in milliseconds\r\n    POLL_INTERVAL_MS: 50,\r\n    // msal-browser SKU\r\n    MSAL_SKU: \"msal.js.browser\",\r\n};\r\n\r\n/**\r\n * HTTP Request types supported by MSAL.\r\n */\r\nexport enum HTTP_REQUEST_TYPE {\r\n    GET = \"GET\",\r\n    POST = \"POST\"\r\n}\r\n\r\n/**\r\n * Temporary cache keys for MSAL, deleted after any request.\r\n */\r\nexport enum TemporaryCacheKeys {\r\n    AUTHORITY = \"authority\",\r\n    ACQUIRE_TOKEN_ACCOUNT = \"acquireToken.account\",\r\n    SESSION_STATE = \"session.state\",\r\n    REQUEST_STATE = \"request.state\",\r\n    NONCE_IDTOKEN = \"nonce.id_token\",\r\n    ORIGIN_URI = \"request.origin\",\r\n    RENEW_STATUS = \"token.renew.status\",\r\n    URL_HASH = \"urlHash\",\r\n    REQUEST_PARAMS = \"request.params\",\r\n    SCOPES = \"scopes\"\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { INetworkModule, NetworkRequestOptions, NetworkResponse } from \"@azure/msal-common\";\r\nimport { HTTP_REQUEST_TYPE } from \"../utils/BrowserConstants\";\r\n\r\n/**\r\n * This class implements the Fetch API for GET and POST requests. See more here: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\r\n */\r\nexport class FetchClient implements INetworkModule {\r\n\r\n    /**\r\n     * Fetch Client for REST endpoints - Get request\r\n     * @param url \r\n     * @param headers \r\n     * @param body \r\n     */\r\n    async sendGetRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\r\n        const response = await fetch(url, {\r\n            method: HTTP_REQUEST_TYPE.GET,\r\n            headers: this.getFetchHeaders(options)\r\n        });\r\n        return {\r\n            headers: this.getHeaderMap(response.headers),\r\n            body: await response.json() as T,\r\n            status: response.status\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Fetch Client for REST endpoints - Post request\r\n     * @param url \r\n     * @param headers \r\n     * @param body \r\n     */\r\n    async sendPostRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\r\n        const reqBody = (options && options.body) || \"\";\r\n        const response = await fetch(url, {\r\n            method: HTTP_REQUEST_TYPE.POST,\r\n            headers: this.getFetchHeaders(options),\r\n            body: reqBody\r\n        });\r\n        return {\r\n            headers: this.getHeaderMap(response.headers),\r\n            body: await response.json() as T,\r\n            status: response.status\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Get Fetch API Headers object from string map\r\n     * @param inputHeaders \r\n     */\r\n    private getFetchHeaders(options?: NetworkRequestOptions): Headers {\r\n        const headers = new Headers();\r\n        if (!(options && options.headers)) {\r\n            return headers;\r\n        }\r\n        options.headers.forEach((value, key) => {\r\n            headers.append(key, value);\r\n        });\r\n        return headers;\r\n    }\r\n\r\n    private getHeaderMap(headers: Headers): Map<string, string> {\r\n        const headerMap = new Map<string, string>();\r\n        headers.forEach((value: string, key: string) => {\r\n            headerMap.set(key, value);\r\n        });\r\n        return headerMap;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { AuthError, StringUtils } from \"@azure/msal-common\";\r\n\r\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nexport const BrowserAuthErrorMessage = {\r\n    noWindowObjectError: {\r\n        code: \"no_window_object\",\r\n        desc: \"No window object detected.\"\r\n    },\r\n    pkceNotGenerated: {\r\n        code: \"pkce_not_created\",\r\n        desc: \"The PKCE code challenge and verifier could not be generated.\"\r\n    },\r\n    cryptoDoesNotExist: {\r\n        code: \"crypto_nonexistent\",\r\n        desc: \"The crypto object or function is not available.\"\r\n    },\r\n    httpMethodNotImplementedError: {\r\n        code: \"http_method_not_implemented\",\r\n        desc: \"The HTTP method given has not been implemented in this library.\"\r\n    },\r\n    emptyNavigateUriError: {\r\n        code: \"empty_navigate_uri\",\r\n        desc: \"Navigation URI is empty. Please check stack trace for more info.\"\r\n    },\r\n    hashEmptyError: {\r\n        code: \"hash_empty_error\",\r\n        desc: \"Hash value cannot be processed because it is empty.\"\r\n    },\r\n    interactionInProgress: {\r\n        code: \"interaction_in_progress\",\r\n        desc: \"Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.\"\r\n    },\r\n    popUpWindowError: {\r\n        code: \"popup_window_error\",\r\n        desc: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"\r\n    },\r\n    emptyWindowError: {\r\n        code: \"empty_window_error\",\r\n        desc: \"window.open returned null or undefined window object.\"\r\n    },\r\n    userCancelledError: {\r\n        code: \"user_cancelled\",\r\n        desc: \"User cancelled the flow.\"\r\n    },\r\n    monitorWindowTimeoutError: {\r\n        code: \"monitor_window_timeout\",\r\n        desc: \"Token acquisition in popup failed due to timeout.\"\r\n    },\r\n    redirectInIframeError: {\r\n        code: \"redirect_in_iframe\",\r\n        desc: \"Code flow is not supported inside an iframe. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\"\r\n    },\r\n    blockTokenRequestsInHiddenIframeError: {\r\n        code: \"block_iframe_reload\",\r\n        desc: \"Request was blocked inside an iframe because MSAL detected an authentication response. Please ensure monitorWindowForHash was called.\"\r\n    },\r\n    iframeClosedPrematurelyError: {\r\n        code: \"iframe_closed_prematurely\",\r\n        desc: \"The iframe being monitored was closed prematurely.\"\r\n    },\r\n    silentSSOInsufficientInfoError: {\r\n        code: \"silent_sso_error\",\r\n        desc: \"Silent SSO could not be completed - insufficient information was provided. Please provide either a login_hint, sid or account object.\"\r\n    },\r\n    silentPromptValueError: {\r\n        code: \"silent_prompt_value_error\",\r\n        desc: \"The value given for the prompt value is not valid for silent requests - must be set to 'none'.\"\r\n    },\r\n    tokenRequestCacheError: {\r\n        code: \"token_request_cache_error\",\r\n        desc: \"The token request could not be fetched from the cache correctly.\"\r\n    },\r\n    invalidCacheType: {\r\n        code: \"invalid_cache_type\",\r\n        desc: \"Invalid cache type\"\r\n    }\r\n};\r\n\r\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\r\nexport class BrowserAuthError extends AuthError {\r\n\r\n    constructor(errorCode: string, errorMessage?: string) {\r\n        super(errorCode, errorMessage);\r\n\r\n        Object.setPrototypeOf(this, BrowserAuthError.prototype);\r\n        this.name = \"BrowserAuthError\";\r\n    }\r\n\r\n    /**\r\n     * Creates error thrown when no window object can be found.\r\n     */\r\n    static createNoWindowObjectError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.noWindowObjectError.code, BrowserAuthErrorMessage.noWindowObjectError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when PKCE is not implemented.\r\n     * @param errDetail \r\n     */\r\n    static createPkceNotGeneratedError(errDetail: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.pkceNotGenerated.code,\r\n            `${BrowserAuthErrorMessage.pkceNotGenerated.desc} Detail:${errDetail}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the crypto object is unavailable.\r\n     * @param errDetail \r\n     */\r\n    static createCryptoNotAvailableError(errDetail: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.cryptoDoesNotExist.code,\r\n            `${BrowserAuthErrorMessage.cryptoDoesNotExist.desc} Detail:${errDetail}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when an HTTP method hasn't been implemented by the browser class.\r\n     * @param method \r\n     */\r\n    static createHttpMethodNotImplementedError(method: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.httpMethodNotImplementedError.code,\r\n            `${BrowserAuthErrorMessage.httpMethodNotImplementedError.desc} Given Method: ${method}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the navigation URI is empty.\r\n     */\r\n    static createEmptyNavigationUriError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyNavigateUriError.code, BrowserAuthErrorMessage.emptyNavigateUriError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the hash string value is unexpectedly empty.\r\n     * @param hashValue \r\n     */\r\n    static createEmptyHashError(hashValue: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashEmptyError.code, `${BrowserAuthErrorMessage.hashEmptyError.desc} Given Url: ${hashValue}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when a browser interaction (redirect or popup) is in progress.\r\n     */\r\n    static createInteractionInProgressError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.interactionInProgress.code, BrowserAuthErrorMessage.interactionInProgress.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the popup window could not be opened.\r\n     * @param errDetail \r\n     */\r\n    static createPopupWindowError(errDetail?: string): BrowserAuthError {\r\n        let errorMessage = BrowserAuthErrorMessage.popUpWindowError.desc;\r\n        errorMessage = !StringUtils.isEmpty(errDetail) ? `${errorMessage} Details: ${errDetail}` : errorMessage;\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.popUpWindowError.code, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when window.open returns an empty window object.\r\n     * @param errDetail \r\n     */\r\n    static createEmptyWindowCreatedError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyWindowError.code, BrowserAuthErrorMessage.emptyWindowError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the user closes a popup.\r\n     */\r\n    static createUserCancelledError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.userCancelledError.code,\r\n            BrowserAuthErrorMessage.userCancelledError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when monitorWindowFromHash times out for a given popup.\r\n     * @param urlNavigate \r\n     */\r\n    static createMonitorWindowTimeoutError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.monitorWindowTimeoutError.code,\r\n            BrowserAuthErrorMessage.monitorWindowTimeoutError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when navigateWindow is called inside an iframe.\r\n     * @param windowParentCheck \r\n     */\r\n    static createRedirectInIframeError(windowParentCheck: boolean): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.redirectInIframeError.code, \r\n            `${BrowserAuthErrorMessage.redirectInIframeError.desc} (window.parent !== window) => ${windowParentCheck}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when an auth reload is done inside an iframe.\r\n     */\r\n    static createBlockReloadInHiddenIframeError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.code,\r\n            BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when an iframe is found to be closed before the timeout is reached.\r\n     */\r\n    static createIframeClosedPrematurelyError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.iframeClosedPrematurelyError.code, BrowserAuthErrorMessage.iframeClosedPrematurelyError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the login_hint, sid or account object is not provided in the ssoSilent API.\r\n     */\r\n    static createSilentSSOInsufficientInfoError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.silentSSOInsufficientInfoError.code, BrowserAuthErrorMessage.silentSSOInsufficientInfoError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when a given prompt value is invalid for silent requests.\r\n     */\r\n    static createSilentPromptValueError(givenPrompt: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.silentPromptValueError.code, `${BrowserAuthErrorMessage.silentPromptValueError.desc} Given value: ${givenPrompt}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the token request could not be retrieved from the cache\r\n     * @param errDetail\r\n     */\r\n    static createTokenRequestCacheError(errDetail: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.tokenRequestCacheError.code,\r\n            `${BrowserAuthErrorMessage.tokenRequestCacheError.desc} Error Detail: ${errDetail}`);\r\n    }\r\n\r\n    /**\r\n    * Creates an error thrown if cache type is invalid.\r\n    */\r\n    static createInvalidCacheTypeError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.invalidCacheType.code, `${BrowserAuthErrorMessage.invalidCacheType.desc}`);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { INetworkModule, NetworkRequestOptions, NetworkResponse } from \"@azure/msal-common\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { HTTP_REQUEST_TYPE } from \"../utils/BrowserConstants\";\r\n\r\n/**\r\n * This client implements the XMLHttpRequest class to send GET and POST requests.\r\n */\r\nexport class XhrClient implements INetworkModule {\r\n\r\n    /**\r\n     * XhrClient for REST endpoints - Get request\r\n     * @param url \r\n     * @param headers \r\n     * @param body \r\n     */\r\n    async sendGetRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\r\n        return this.sendRequestAsync(url, HTTP_REQUEST_TYPE.GET, options);\r\n    }\r\n\r\n    /**\r\n     * XhrClient for REST endpoints - Post request\r\n     * @param url \r\n     * @param headers \r\n     * @param body \r\n     */\r\n    async sendPostRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\r\n        return this.sendRequestAsync(url, HTTP_REQUEST_TYPE.POST, options);\r\n    }\r\n\r\n    /**\r\n     * Helper for XhrClient requests.\r\n     * @param url \r\n     * @param method \r\n     * @param options \r\n     */\r\n    private sendRequestAsync<T>(url: string, method: string, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\r\n        return new Promise<NetworkResponse<T>>((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.open(method, url, /* async: */ true);\r\n            this.setXhrHeaders(xhr, options);\r\n            xhr.onload = (): void => {\r\n                if (xhr.status < 200 || xhr.status >= 300) {\r\n                    reject(xhr.responseText);\r\n                }\r\n                try {\r\n                    const jsonResponse = JSON.parse(xhr.responseText) as T;\r\n                    const networkResponse: NetworkResponse<T> = {\r\n                        headers: this.getHeaderMap(xhr),\r\n                        body: jsonResponse,\r\n                        status: xhr.status\r\n                    };\r\n                    resolve(networkResponse);\r\n                } catch (e) {\r\n                    reject(xhr.responseText);\r\n                }\r\n            };\r\n\r\n            xhr.onerror = (): void => {\r\n                reject(xhr.status);\r\n            };\r\n\r\n            if (method === \"POST\" && options.body) {\r\n                xhr.send(options.body);\r\n            } else if (method === \"GET\") {\r\n                xhr.send();\r\n            } else {\r\n                throw BrowserAuthError.createHttpMethodNotImplementedError(method);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Helper to set XHR headers for request.\r\n     * @param xhr \r\n     * @param options \r\n     */\r\n    private setXhrHeaders(xhr: XMLHttpRequest, options?: NetworkRequestOptions): void {\r\n        if (options && options.headers) {\r\n            options.headers.forEach((value, key) => {\r\n                xhr.setRequestHeader(key, value);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets a string map of the headers received in the response.\r\n     * \r\n     * Algorithm comes from https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/getAllResponseHeaders\r\n     * @param xhr \r\n     */\r\n    private getHeaderMap(xhr: XMLHttpRequest): Map<string, string> {\r\n        const headerString = xhr.getAllResponseHeaders();\r\n        const headerArr = headerString.trim().split(/[\\r\\n]+/);\r\n        const headerMap = new Map<string, string>();\r\n        headerArr.forEach((value: string) => {\r\n            const parts = value.split(\": \");\r\n            const headerName = parts.shift();\r\n            const headerVal = parts.join(\": \");\r\n            headerMap.set(headerName, headerVal);\r\n        });\r\n\r\n        return headerMap;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { INetworkModule, UrlString } from \"@azure/msal-common\";\r\nimport { FetchClient } from \"../network/FetchClient\";\r\nimport { XhrClient } from \"../network/XhrClient\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\n\r\n/**\r\n * Utility class for browser specific functions\r\n */\r\nexport class BrowserUtils {\r\n\r\n    // #region Window Navigation and URL management\r\n\r\n    /**\r\n     * Used to redirect the browser to the STS authorization endpoint\r\n     * @param {string} urlNavigate - URL of the authorization endpoint\r\n     * @param {boolean} noHistory - boolean flag, uses .replace() instead of .assign() if true\r\n     */\r\n    static navigateWindow(urlNavigate: string, noHistory?: boolean): void {\r\n        if (noHistory) {\r\n            window.location.replace(urlNavigate);\r\n        } else {\r\n            window.location.assign(urlNavigate);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clears hash from window url.\r\n     */\r\n    static clearHash(): void {\r\n        window.location.hash = \"\";\r\n    }\r\n\r\n    /**\r\n     * Replaces current hash with hash from provided url\r\n     */\r\n    static replaceHash(url: string): void {\r\n        const urlParts = url.split(\"#\");\r\n        urlParts.shift(); // Remove part before the hash\r\n        \r\n        window.location.hash = urlParts.length > 0 ? urlParts.join(\"#\") : \"\";\r\n    }\r\n\r\n    /**\r\n     * Returns boolean of whether the current window is in an iframe or not.\r\n     */\r\n    static isInIframe(): boolean {\r\n        return window.parent !== window;\r\n    }\r\n\r\n    // #endregion\r\n\r\n    /**\r\n     * Returns current window URL as redirect uri\r\n     */\r\n    static getCurrentUri(): string {\r\n        return window.location.href.split(\"?\")[0].split(\"#\")[0];\r\n    }\r\n\r\n    /**\r\n     * Returns best compatible network client object. \r\n     */\r\n    static getBrowserNetworkClient(): INetworkModule {\r\n        if (window.fetch) {\r\n            return new FetchClient();\r\n        } else {\r\n            return new XhrClient();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Throws error if we have completed an auth and are \r\n     * attempting another auth request inside an iframe.\r\n     */\r\n    static blockReloadInHiddenIframes(): void {\r\n        const isResponseHash = UrlString.hashContainsKnownProperties(window.location.hash);\r\n        // return an error if called from the hidden iframe created by the msal js silent calls\r\n        if (isResponseHash && BrowserUtils.isInIframe()) {\r\n            throw BrowserAuthError.createBlockReloadInHiddenIframeError();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns boolean of whether current browser is an Internet Explorer or Edge browser.\r\n     */\r\n    static detectIEOrEdge(): boolean {\r\n        const ua = window.navigator.userAgent;\r\n        const msie = ua.indexOf(\"MSIE \");\r\n        const msie11 = ua.indexOf(\"Trident/\");\r\n        const msedge = ua.indexOf(\"Edge/\");\r\n        const isIE = msie > 0 || msie11 > 0;\r\n        const isEdge = msedge > 0;\r\n        return isIE || isEdge;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { SystemOptions, LoggerOptions, INetworkModule, DEFAULT_SYSTEM_OPTIONS, Constants } from \"@azure/msal-common\";\r\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\r\nimport { BrowserConstants } from \"../utils/BrowserConstants\";\r\n\r\n// Default timeout for popup windows and iframes in milliseconds\r\nconst DEFAULT_POPUP_TIMEOUT_MS = 60000;\r\nconst DEFAULT_IFRAME_TIMEOUT_MS = 6000;\r\n\r\nexport type BrowserAuthOptions = {\r\n    clientId: string;\r\n    authority?: string;\r\n    knownAuthorities?: Array<string>;\r\n    cloudDiscoveryMetadata?: string;\r\n    redirectUri?: string;\r\n    postLogoutRedirectUri?: string;\r\n    navigateToLoginRequestUrl?: boolean;\r\n};\r\n\r\n/**\r\n * Use this to configure the below cache configuration options:\r\n *\r\n * - cacheLocation            - Used to specify the cacheLocation user wants to set. Valid values are \"localStorage\" and \"sessionStorage\"\r\n * - storeAuthStateInCookie   - If set, MSAL store's the auth request state required for validation of the auth flows in the browser cookies. By default this flag is set to false.\r\n */\r\nexport type CacheOptions = {\r\n    cacheLocation?: string;\r\n    storeAuthStateInCookie?: boolean;\r\n    storeInMemory?: boolean;\r\n};\r\n\r\n/**\r\n * Library Specific Options\r\n *\r\n * - logger                       - Used to initialize the Logger object; TODO: Expand on logger details or link to the documentation on logger\r\n * - loadFrameTimeout             - maximum time the library should wait for a frame to load\r\n * - windowHashTimeout            - sets the wait time for hidden iFrame navigation\r\n * - tokenRenewalOffsetSeconds    - sets the window of offset needed to renew the token before expiry\r\n * - telemetry                    - Telemetry options for library network requests\r\n */\r\nexport type BrowserSystemOptions = SystemOptions & {\r\n    loggerOptions?: LoggerOptions;\r\n    networkClient?: INetworkModule;\r\n    windowHashTimeout?: number;\r\n    iframeHashTimeout?: number;\r\n    loadFrameTimeout?: number;\r\n};\r\n\r\n/**\r\n * Use the configuration object to configure MSAL and initialize the UserAgentApplication.\r\n *\r\n * This object allows you to configure important elements of MSAL functionality:\r\n * - auth: this is where you configure auth elements like clientID, authority used for authenticating against the Microsoft Identity Platform\r\n * - cache: this is where you configure cache location and whether to store cache in cookies\r\n * - system: this is where you can configure the network client, logger, token renewal offset, and telemetry\r\n */\r\nexport type Configuration = {\r\n    auth?: BrowserAuthOptions,\r\n    cache?: CacheOptions,\r\n    system?: BrowserSystemOptions\r\n};\r\n\r\n// Default auth options for browser\r\nconst DEFAULT_AUTH_OPTIONS: BrowserAuthOptions = {\r\n    clientId: \"\",\r\n    authority: `${Constants.DEFAULT_AUTHORITY}`,\r\n    knownAuthorities: [],\r\n    cloudDiscoveryMetadata: \"\",\r\n    redirectUri: \"\",\r\n    postLogoutRedirectUri: \"\",\r\n    navigateToLoginRequestUrl: true\r\n};\r\n\r\n// Default cache options for browser\r\nconst DEFAULT_CACHE_OPTIONS: CacheOptions = {\r\n    cacheLocation: BrowserConstants.CACHE_LOCATION_SESSION,\r\n    storeAuthStateInCookie: false\r\n};\r\n\r\n// Default logger options for browser\r\nconst DEFAULT_LOGGER_OPTIONS: LoggerOptions = {\r\n    loggerCallback: (): void => {},\r\n    piiLoggingEnabled: false\r\n};\r\n\r\n// Default system options for browser\r\nconst DEFAULT_BROWSER_SYSTEM_OPTIONS: BrowserSystemOptions = {\r\n    ...DEFAULT_SYSTEM_OPTIONS,\r\n    loggerOptions: DEFAULT_LOGGER_OPTIONS,\r\n    networkClient: BrowserUtils.getBrowserNetworkClient(),\r\n    windowHashTimeout: DEFAULT_POPUP_TIMEOUT_MS,\r\n    iframeHashTimeout: DEFAULT_IFRAME_TIMEOUT_MS,\r\n    loadFrameTimeout: BrowserUtils.detectIEOrEdge() ? 500 : 0\r\n};\r\n\r\n/**\r\n * MSAL function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param auth\r\n * @param cache\r\n * @param system\r\n *\r\n * @returns Configuration object\r\n */\r\nexport function buildConfiguration({ auth: userInputAuth, cache: userInputCache, system: userInputSystem }: Configuration): Configuration {\r\n    const overlayedConfig: Configuration = {\r\n        auth: { ...DEFAULT_AUTH_OPTIONS, ...userInputAuth },\r\n        cache: { ...DEFAULT_CACHE_OPTIONS, ...userInputCache },\r\n        system: { ...DEFAULT_BROWSER_SYSTEM_OPTIONS, ...userInputSystem }\r\n    };\r\n    return overlayedConfig;\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { AuthError } from \"@azure/msal-common\";\r\n\r\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nexport const BrowserConfigurationAuthErrorMessage = {\r\n    redirectUriNotSet: {\r\n        code: \"redirect_uri_empty\",\r\n        desc: \"A redirect URI is required for all calls, and none has been set.\"\r\n    },\r\n    postLogoutUriNotSet: {\r\n        code: \"post_logout_uri_empty\",\r\n        desc: \"A post logout redirect has not been set.\"\r\n    },\r\n    storageNotSupportedError: {\r\n        code: \"storage_not_supported\",\r\n        desc: \"Given storage configuration option was not supported.\"\r\n    },\r\n    noRedirectCallbacksSet: {\r\n        code: \"no_redirect_callbacks\",\r\n        desc: \"No redirect callbacks have been set. Please call setRedirectCallbacks() with the appropriate function arguments before continuing. \" +\r\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\r\n    },\r\n    invalidCallbackObject: {\r\n        code: \"invalid_callback_object\",\r\n        desc: \"The object passed for the callback was invalid. \" +\r\n          \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\r\n    },\r\n};\r\n\r\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\r\nexport class BrowserConfigurationAuthError extends AuthError {\r\n\r\n    constructor(errorCode: string, errorMessage?: string) {\r\n        super(errorCode, errorMessage);\r\n        this.name = \"BrowserConfigurationAuthError\";\r\n\r\n        Object.setPrototypeOf(this, BrowserConfigurationAuthError.prototype);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the redirect uri is empty (not set by caller)\r\n     */\r\n    static createRedirectUriEmptyError(): BrowserConfigurationAuthError {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.redirectUriNotSet.code,\r\n            BrowserConfigurationAuthErrorMessage.redirectUriNotSet.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\r\n     */\r\n    static createPostLogoutRedirectUriEmptyError(): BrowserConfigurationAuthError {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.code,\r\n            BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates error thrown when given storage location is not supported.\r\n     * @param givenStorageLocation \r\n     */\r\n    static createStorageNotSupportedError(givenStorageLocation: string): BrowserConfigurationAuthError {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.storageNotSupportedError.code, `${BrowserConfigurationAuthErrorMessage.storageNotSupportedError.desc} Given Location: ${givenStorageLocation}`);\r\n    }\r\n\r\n    /**\r\n     * Creates error thrown when callback object is invalid.\r\n     * @param callbackObject \r\n     */\r\n    static createInvalidCallbackObjectError(callbackObject: object): BrowserConfigurationAuthError {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.invalidCallbackObject.code,\r\n            `${BrowserConfigurationAuthErrorMessage.invalidCallbackObject.desc} Given value for callback function: ${callbackObject}`);\r\n    }\r\n\r\n    /**\r\n     * Creates error thrown when redirect callbacks are not set before calling loginRedirect() or acquireTokenRedirect().\r\n     */\r\n    static createRedirectCallbacksNotSetError(): BrowserConfigurationAuthError {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.code, \r\n            BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.desc);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { Constants, PersistentCacheKeys, StringUtils, AuthorizationCodeRequest, ICrypto, CacheSchemaType, AccountEntity, IdTokenEntity, CredentialType, AccessTokenEntity, RefreshTokenEntity, AppMetadataEntity, CacheManager, CredentialEntity } from \"@azure/msal-common\";\r\nimport { CacheOptions } from \"../config/Configuration\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { BrowserConfigurationAuthError } from \"../error/BrowserConfigurationAuthError\";\r\nimport { BrowserConstants, TemporaryCacheKeys } from \"../utils/BrowserConstants\";\r\n\r\n// Cookie life calculation (hours * minutes * seconds * ms)\r\nconst COOKIE_LIFE_MULTIPLIER = 24 * 60 * 60 * 1000;\r\n\r\n/**\r\n * This class implements the cache storage interface for MSAL through browser local or session storage.\r\n * Cookies are only used if storeAuthStateInCookie is true, and are only used for\r\n * parameters such as state and nonce, generally.\r\n */\r\nexport class BrowserStorage extends CacheManager {\r\n\r\n    // Cache configuration, either set by user or default values.\r\n    private cacheConfig: CacheOptions;\r\n    // Window storage object (either local or sessionStorage)\r\n    private windowStorage: Storage;\r\n    // Client id of application. Used in cache keys to partition cache correctly in the case of multiple instances of MSAL.\r\n    private clientId: string;\r\n\r\n    constructor(clientId: string, cacheConfig: CacheOptions) {\r\n        super();\r\n        // Validate cache location\r\n        this.validateWindowStorage(cacheConfig.cacheLocation);\r\n\r\n        this.cacheConfig = cacheConfig;\r\n        this.windowStorage = window[this.cacheConfig.cacheLocation];\r\n        this.clientId = clientId;\r\n\r\n        // Migrate any cache entries from older versions of MSAL.\r\n        this.migrateCacheEntries();\r\n    }\r\n\r\n    /**\r\n     * Validates the the given cache location string is an expected value:\r\n     * - localStorage\r\n     * - sessionStorage (default)\r\n     * Also validates if given cacheLocation is supported on the browser.\r\n     * @param cacheLocation\r\n     */\r\n    private validateWindowStorage(cacheLocation: string): void {\r\n        if (typeof window === \"undefined\" || !window) {\r\n            throw BrowserAuthError.createNoWindowObjectError();\r\n        }\r\n\r\n        if (cacheLocation !== BrowserConstants.CACHE_LOCATION_LOCAL && cacheLocation !== BrowserConstants.CACHE_LOCATION_SESSION) {\r\n            throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\r\n        }\r\n\r\n        const storageSupported = !!window[cacheLocation];\r\n        if (!storageSupported) {\r\n            throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Migrate all old cache entries to new schema. No rollback supported.\r\n     * @param storeAuthStateInCookie\r\n     */\r\n    private migrateCacheEntries(): void {\r\n        const idTokenKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ID_TOKEN}`;\r\n        const clientInfoKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.CLIENT_INFO}`;\r\n        const errorKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ERROR}`;\r\n        const errorDescKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ERROR_DESC}`;\r\n\r\n        const idTokenValue = this.windowStorage.getItem(idTokenKey);\r\n        const clientInfoValue = this.windowStorage.getItem(clientInfoKey);\r\n        const errorValue = this.windowStorage.getItem(errorKey);\r\n        const errorDescValue = this.windowStorage.getItem(errorDescKey);\r\n\r\n        const values = [idTokenValue, clientInfoValue, errorValue, errorDescValue];\r\n        const keysToMigrate = [PersistentCacheKeys.ID_TOKEN, PersistentCacheKeys.CLIENT_INFO, PersistentCacheKeys.ERROR, PersistentCacheKeys.ERROR_DESC];\r\n\r\n        keysToMigrate.forEach((cacheKey, index) => this.migrateCacheEntry(cacheKey, values[index]));\r\n    }\r\n\r\n    /**\r\n     * Utility function to help with migration.\r\n     * @param newKey\r\n     * @param value\r\n     * @param storeAuthStateInCookie\r\n     */\r\n    private migrateCacheEntry(newKey: string, value: string): void {\r\n        if (value) {\r\n            this.setItem(this.generateCacheKey(newKey), value, CacheSchemaType.TEMPORARY);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Parses key as JSON object, JSON.parse() will throw an error.\r\n     * @param key\r\n     */\r\n    private validateObjectKey(key: string): void {\r\n        JSON.parse(key);\r\n    }\r\n\r\n    /**\r\n     * Sets the cache item with the key and value given.\r\n     * Stores in cookie if storeAuthStateInCookie is set to true.\r\n     * This can cause cookie overflow if used incorrectly.\r\n     * @param key\r\n     * @param value\r\n     */\r\n    setItem(key: string, value: string | object, type: string): void {\r\n        // save the cacheItem\r\n        switch (type) {\r\n            case CacheSchemaType.ACCOUNT:\r\n            case CacheSchemaType.CREDENTIAL:\r\n            case CacheSchemaType.APP_META_DATA:\r\n                this.windowStorage.setItem(key, JSON.stringify(value));\r\n                break;\r\n            case CacheSchemaType.TEMPORARY: {\r\n                const stringVal = value as string;\r\n                this.windowStorage.setItem(key, stringVal);\r\n                if (this.cacheConfig.storeAuthStateInCookie) {\r\n                    this.setItemCookie(key, stringVal);\r\n                }\r\n                break;\r\n            }\r\n            default: {\r\n                throw BrowserAuthError.createInvalidCacheTypeError();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets cache item with given key.\r\n     * Will retrieve frm cookies if storeAuthStateInCookie is set to true.\r\n     * @param key\r\n     */\r\n    getItem(key: string, type: string): string | object {\r\n        const value = this.windowStorage.getItem(key);\r\n        if (StringUtils.isEmpty(value)) {\r\n            return null;\r\n        }\r\n        switch (type) {\r\n            case CacheSchemaType.ACCOUNT: {\r\n                const account = new AccountEntity();\r\n                return (CacheManager.toObject(account, JSON.parse(value)) as AccountEntity);\r\n            }\r\n            case CacheSchemaType.CREDENTIAL: {\r\n                const credentialType = CredentialEntity.getCredentialType(key);\r\n                switch (credentialType) {\r\n                    case CredentialType.ID_TOKEN: {\r\n                        const idTokenEntity: IdTokenEntity = new IdTokenEntity();\r\n                        return (CacheManager.toObject(idTokenEntity, JSON.parse(value)) as IdTokenEntity);\r\n                    }\r\n                    case CredentialType.ACCESS_TOKEN: {\r\n                        const accessTokenEntity: AccessTokenEntity = new AccessTokenEntity();\r\n                        return (CacheManager.toObject(accessTokenEntity, JSON.parse(value)) as AccessTokenEntity);\r\n                    }\r\n                    case CredentialType.REFRESH_TOKEN: {\r\n                        const refreshTokenEntity: RefreshTokenEntity = new RefreshTokenEntity();\r\n                        return (CacheManager.toObject(refreshTokenEntity, JSON.parse(value)) as RefreshTokenEntity);\r\n                    }\r\n                }\r\n            }\r\n            case CacheSchemaType.APP_META_DATA: {\r\n                return (JSON.parse(value) as AppMetadataEntity);\r\n            }\r\n            case CacheSchemaType.TEMPORARY: {\r\n                const itemCookie = this.getItemCookie(key);\r\n                if (this.cacheConfig.storeAuthStateInCookie) {\r\n                    return itemCookie;\r\n                }\r\n                return value;\r\n            }\r\n            default: {\r\n                throw BrowserAuthError.createInvalidCacheTypeError();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes the cache item with the given key.\r\n     * Will also clear the cookie item if storeAuthStateInCookie is set to true.\r\n     * @param key\r\n     */\r\n    removeItem(key: string): boolean {\r\n        this.windowStorage.removeItem(key);\r\n        if (this.cacheConfig.storeAuthStateInCookie) {\r\n            this.clearItemCookie(key);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Checks whether key is in cache.\r\n     * @param key\r\n     */\r\n    containsKey(key: string): boolean {\r\n        return this.windowStorage.hasOwnProperty(key);\r\n    }\r\n\r\n    /**\r\n     * Gets all keys in window.\r\n     */\r\n    getKeys(): string[] {\r\n        return Object.keys(this.windowStorage);\r\n    }\r\n\r\n    /**\r\n     * Clears all cache entries created by MSAL (except tokens).\r\n     */\r\n    clear(): void {\r\n        let key: string;\r\n        for (key in this.windowStorage) {\r\n            // Check if key contains msal prefix; For now, we are clearing all the cache items created by MSAL.js\r\n            if (this.windowStorage.hasOwnProperty(key) && ((key.indexOf(Constants.CACHE_PREFIX) !== -1) || (key.indexOf(this.clientId) !== -1))) {\r\n                this.removeItem(key);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add value to cookies\r\n     * @param cookieName\r\n     * @param cookieValue\r\n     * @param expires\r\n     */\r\n    setItemCookie(cookieName: string, cookieValue: string, expires?: number): void {\r\n        let cookieStr = `${encodeURIComponent(cookieName)}=${encodeURIComponent(cookieValue)};path=/;`;\r\n        if (expires) {\r\n            const expireTime = this.getCookieExpirationTime(expires);\r\n            cookieStr += `expires=${expireTime};`;\r\n        }\r\n\r\n        document.cookie = cookieStr;\r\n    }\r\n\r\n    /**\r\n     * Get one item by key from cookies\r\n     * @param cookieName\r\n     */\r\n    getItemCookie(cookieName: string): string {\r\n        const name = `${encodeURIComponent(cookieName)}=`;\r\n        const cookieList = document.cookie.split(\";\");\r\n        for (let i = 0; i < cookieList.length; i++) {\r\n            let cookie = cookieList[i];\r\n            while (cookie.charAt(0) === \" \") {\r\n                cookie = cookie.substring(1);\r\n            }\r\n            if (cookie.indexOf(name) === 0) {\r\n                return decodeURIComponent(cookie.substring(name.length, cookie.length));\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * Clear an item in the cookies by key\r\n     * @param cookieName\r\n     */\r\n    clearItemCookie(cookieName: string): void {\r\n        this.setItemCookie(cookieName, \"\", -1);\r\n    }\r\n\r\n    /**\r\n     * Clear all msal cookies\r\n     */\r\n    clearMsalCookie(state?: string): void {\r\n        const nonceKey = state ? `${TemporaryCacheKeys.NONCE_IDTOKEN}|${state}` : TemporaryCacheKeys.NONCE_IDTOKEN;\r\n        this.clearItemCookie(this.generateCacheKey(nonceKey));\r\n        this.clearItemCookie(this.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE));\r\n        this.clearItemCookie(this.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI));\r\n    }\r\n\r\n    /**\r\n     * Get cookie expiration time\r\n     * @param cookieLifeDays\r\n     */\r\n    getCookieExpirationTime(cookieLifeDays: number): string {\r\n        const today = new Date();\r\n        const expr = new Date(today.getTime() + cookieLifeDays * COOKIE_LIFE_MULTIPLIER);\r\n        return expr.toUTCString();\r\n    }\r\n\r\n    /**\r\n     * Gets the cache object referenced by the browser\r\n     */\r\n    getCache(): object {\r\n        return this.windowStorage;\r\n    }\r\n\r\n    /**\r\n     * interface compat, we cannot overwrite browser cache; Functionality is supported by individual entities in browser\r\n     */\r\n    setCache(): void {\r\n        // sets nothing\r\n    }\r\n\r\n    /**\r\n     * Prepend msal.<client-id> to each key; Skip for any JSON object as Key (defined schemas do not need the key appended: AccessToken Keys or the upcoming schema)\r\n     * @param key\r\n     * @param addInstanceId\r\n     */\r\n    generateCacheKey(key: string): string {\r\n        try {\r\n            // Defined schemas do not need the key migrated\r\n            this.validateObjectKey(key);\r\n            return key;\r\n        } catch (e) {\r\n            if (StringUtils.startsWith(key, Constants.CACHE_PREFIX) || StringUtils.startsWith(key, PersistentCacheKeys.ADAL_ID_TOKEN)) {\r\n                return key;\r\n            }\r\n            return `${Constants.CACHE_PREFIX}.${this.clientId}.${key}`;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create authorityKey to cache authority\r\n     * @param state\r\n     */\r\n    generateAuthorityKey(state: string): string {\r\n        return `${TemporaryCacheKeys.AUTHORITY}${Constants.RESOURCE_DELIM}${state}`;\r\n    }\r\n\r\n    /**\r\n     * Create Nonce key to cache nonce\r\n     * @param state\r\n     */\r\n    generateNonceKey(state: string): string {\r\n        return `${TemporaryCacheKeys.NONCE_IDTOKEN}${Constants.RESOURCE_DELIM}${state}`;\r\n    }\r\n\r\n    /**\r\n     * Sets the cacheKey for and stores the authority information in cache\r\n     * @param state\r\n     * @param authority\r\n     */\r\n    setAuthorityCache(authority: string, state: string): void {\r\n        // Cache authorityKey\r\n        const authorityKey = this.generateAuthorityKey(state);\r\n        this.setItem(this.generateCacheKey(authorityKey), authority, CacheSchemaType.TEMPORARY);\r\n    }\r\n\r\n    /**\r\n     * Gets the cached authority based on the cached state. Returns empty if no cached state found.\r\n     */\r\n    getCachedAuthority(): string {\r\n        const state = this.getItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE), CacheSchemaType.TEMPORARY) as string;\r\n        if (!state) {\r\n            return null;\r\n        }\r\n        return this.getItem(this.generateCacheKey(this.generateAuthorityKey(state)), CacheSchemaType.TEMPORARY) as string;\r\n    }\r\n\r\n    /**\r\n     * Updates account, authority, and state in cache\r\n     * @param serverAuthenticationRequest\r\n     * @param account\r\n     */\r\n    updateCacheEntries(state: string, nonce: string, authorityInstance: string): void {\r\n        // Cache the request state\r\n        this.setItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE), state, CacheSchemaType.TEMPORARY);\r\n\r\n        // Cache the nonce\r\n        this.setItem(this.generateCacheKey(this.generateNonceKey(state)), nonce, CacheSchemaType.TEMPORARY);\r\n\r\n        // Cache authorityKey\r\n        this.setAuthorityCache(authorityInstance, state);\r\n    }\r\n\r\n    /**\r\n     * Reset all temporary cache items\r\n     * @param state\r\n     */\r\n    resetRequestCache(state: string): void {\r\n        // check state and remove associated cache items\r\n        this.getKeys().forEach(key => {\r\n            if (!StringUtils.isEmpty(state) && key.indexOf(state) !== -1) {\r\n                this.removeItem(key);\r\n            }\r\n        });\r\n\r\n        // delete generic interactive request parameters\r\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE));\r\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS));\r\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI));\r\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.URL_HASH));\r\n    }\r\n\r\n    cleanRequest(): void {\r\n        // Interaction is completed - remove interaction status.\r\n        this.removeItem(this.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY));\r\n        const cachedState = this.getItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE), CacheSchemaType.TEMPORARY) as string;\r\n        this.resetRequestCache(cachedState || \"\");\r\n    }\r\n\r\n    cacheCodeRequest(authCodeRequest: AuthorizationCodeRequest, browserCrypto: ICrypto): void {\r\n        this.setItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS), browserCrypto.base64Encode(JSON.stringify(authCodeRequest)), CacheSchemaType.TEMPORARY);\r\n    }\r\n\r\n    /**\r\n     * Gets the token exchange parameters from the cache. Throws an error if nothing is found.\r\n     */\r\n    getCachedRequest(state: string, browserCrypto: ICrypto): AuthorizationCodeRequest {\r\n        try {\r\n            // Get token request from cache and parse as TokenExchangeParameters.\r\n            const encodedTokenRequest = this.getItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS), CacheSchemaType.TEMPORARY) as string;\r\n            const parsedRequest = JSON.parse(browserCrypto.base64Decode(encodedTokenRequest)) as AuthorizationCodeRequest;\r\n            this.removeItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS));\r\n            // Get cached authority and use if no authority is cached with request.\r\n            if (StringUtils.isEmpty(parsedRequest.authority)) {\r\n                const authorityKey: string = this.generateAuthorityKey(state);\r\n                const cachedAuthority: string = this.getItem(this.generateCacheKey(authorityKey), CacheSchemaType.TEMPORARY) as string;\r\n                parsedRequest.authority = cachedAuthority;\r\n            }\r\n            return parsedRequest;\r\n        } catch (err) {\r\n            throw BrowserAuthError.createTokenRequestCacheError(err);\r\n        }\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n/**\r\n * Utility class for math specific functions in browser.\r\n */\r\nexport class MathUtils {\r\n\r\n    /**\r\n     * Decimal to Hex\r\n     *\r\n     * @param num\r\n     */\r\n    static decimalToHex(num: number): string {\r\n        let hex: string = num.toString(16);\r\n        while (hex.length < 2) {\r\n            hex = \"0\" + hex;\r\n        }\r\n        return hex;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { MathUtils } from \"../utils/MathUtils\";\r\nimport { BrowserCrypto } from \"./BrowserCrypto\";\r\n\r\nexport class GuidGenerator {\r\n\r\n    // browser crypto object used to generate random values\r\n    private cryptoObj: BrowserCrypto;\r\n\r\n    constructor(cryptoObj: BrowserCrypto) {\r\n        this.cryptoObj = cryptoObj;\r\n    }\r\n\r\n    /*\r\n     * RFC4122: The version 4 UUID is meant for generating UUIDs from truly-random or\r\n     * pseudo-random numbers.\r\n     * The algorithm is as follows:\r\n     *     Set the two most significant bits (bits 6 and 7) of the\r\n     *        clock_seq_hi_and_reserved to zero and one, respectively.\r\n     *     Set the four most significant bits (bits 12 through 15) of the\r\n     *        time_hi_and_version field to the 4-bit version number from\r\n     *        Section 4.1.3. Version4\r\n     *     Set all the other bits to randomly (or pseudo-randomly) chosen\r\n     *     values.\r\n     * UUID                   = time-low \"-\" time-mid \"-\"time-high-and-version \"-\"clock-seq-reserved and low(2hexOctet)\"-\" node\r\n     * time-low               = 4hexOctet\r\n     * time-mid               = 2hexOctet\r\n     * time-high-and-version  = 2hexOctet\r\n     * clock-seq-and-reserved = hexOctet:\r\n     * clock-seq-low          = hexOctet\r\n     * node                   = 6hexOctet\r\n     * Format: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\r\n     * y could be 1000, 1001, 1010, 1011 since most significant two bits needs to be 10\r\n     * y values are 8, 9, A, B\r\n     */\r\n    generateGuid(): string {\r\n        try {\r\n            const buffer: Uint8Array = new Uint8Array(16);\r\n            this.cryptoObj.getRandomValues(buffer);\r\n\r\n            // buffer[6] and buffer[7] represents the time_hi_and_version field. We will set the four most significant bits (4 through 7) of buffer[6] to represent decimal number 4 (UUID version number).\r\n            buffer[6] |= 0x40; // buffer[6] | 01000000 will set the 6 bit to 1.\r\n            buffer[6] &= 0x4f; // buffer[6] & 01001111 will set the 4, 5, and 7 bit to 0 such that bits 4-7 == 0100 = \"4\".\r\n\r\n            // buffer[8] represents the clock_seq_hi_and_reserved field. We will set the two most significant bits (6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively.\r\n            buffer[8] |= 0x80; // buffer[8] | 10000000 will set the 7 bit to 1.\r\n            buffer[8] &= 0xbf; // buffer[8] & 10111111 will set the 6 bit to 0.\r\n\r\n            return MathUtils.decimalToHex(buffer[0]) + MathUtils.decimalToHex(buffer[1])\r\n                + MathUtils.decimalToHex(buffer[2]) + MathUtils.decimalToHex(buffer[3])\r\n                + \"-\" + MathUtils.decimalToHex(buffer[4]) + MathUtils.decimalToHex(buffer[5])\r\n                + \"-\" + MathUtils.decimalToHex(buffer[6]) + MathUtils.decimalToHex(buffer[7])\r\n                + \"-\" + MathUtils.decimalToHex(buffer[8]) + MathUtils.decimalToHex(buffer[9])\r\n                + \"-\" + MathUtils.decimalToHex(buffer[10]) + MathUtils.decimalToHex(buffer[11])\r\n                + MathUtils.decimalToHex(buffer[12]) + MathUtils.decimalToHex(buffer[13])\r\n                + MathUtils.decimalToHex(buffer[14]) + MathUtils.decimalToHex(buffer[15]);\r\n        }\r\n        catch (err) {\r\n            const guidHolder: string = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\";\r\n            const hex: string = \"0123456789abcdef\";\r\n            let r: number = 0;\r\n            let guidResponse: string = \"\";\r\n            for (let i: number = 0; i < 36; i++) {\r\n                if (guidHolder[i] !== \"-\" && guidHolder[i] !== \"4\") {\r\n                    // each x and y needs to be random\r\n                    r = Math.random() * 16 | 0;\r\n                }\r\n                if (guidHolder[i] === \"x\") {\r\n                    guidResponse += hex[r];\r\n                } else if (guidHolder[i] === \"y\") {\r\n                    // clock-seq-and-reserved first hex is filtered and remaining hex values are random\r\n                    r &= 0x3; // bit and with 0011 to set pos 2 to zero ?0??\r\n                    r |= 0x8; // set pos 3 to 1 as 1???\r\n                    guidResponse += hex[r];\r\n                } else {\r\n                    guidResponse += guidHolder[i];\r\n                }\r\n            }\r\n            return guidResponse;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * verifies if a string is  GUID\r\n     * @param guid\r\n     */\r\n    static isGuid(guid: string): boolean {\r\n        const regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\r\n        return regexGuid.test(guid);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n/**\r\n * Utility functions for strings in a browser. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\nexport class BrowserStringUtils {\r\n\r\n    /**\r\n     * Converts string to Uint8Array\r\n     * @param sDOMStr \r\n     */\r\n    static stringToUtf8Arr (sDOMStr: string): Uint8Array {\r\n        let nChr;\r\n        let nArrLen = 0;\r\n        const nStrLen = sDOMStr.length;\r\n        /* mapping... */\r\n        for (let nMapIdx = 0; nMapIdx < nStrLen; nMapIdx++) {\r\n            nChr = sDOMStr.charCodeAt(nMapIdx);\r\n            nArrLen += nChr < 0x80 ? 1 : nChr < 0x800 ? 2 : nChr < 0x10000 ? 3 : nChr < 0x200000 ? 4 : nChr < 0x4000000 ? 5 : 6;\r\n        }\r\n\r\n        const aBytes = new Uint8Array(nArrLen);\r\n\r\n        /* transcription... */\r\n\r\n        for (let nIdx = 0, nChrIdx = 0; nIdx < nArrLen; nChrIdx++) {\r\n            nChr = sDOMStr.charCodeAt(nChrIdx);\r\n            if (nChr < 128) {\r\n                /* one byte */\r\n                aBytes[nIdx++] = nChr;\r\n            } else if (nChr < 0x800) {\r\n                /* two bytes */\r\n                aBytes[nIdx++] = 192 + (nChr >>> 6);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            } else if (nChr < 0x10000) {\r\n                /* three bytes */\r\n                aBytes[nIdx++] = 224 + (nChr >>> 12);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            } else if (nChr < 0x200000) {\r\n                /* four bytes */\r\n                aBytes[nIdx++] = 240 + (nChr >>> 18);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            } else if (nChr < 0x4000000) {\r\n                /* five bytes */\r\n                aBytes[nIdx++] = 248 + (nChr >>> 24);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            } else /* if (nChr <= 0x7fffffff) */ {\r\n                /* six bytes */\r\n                aBytes[nIdx++] = 252 + (nChr >>> 30);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 24 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            }\r\n        }\r\n\r\n        return aBytes;      \r\n    }\r\n\r\n    /**\r\n     * Converts Uint8Array to a string\r\n     * @param aBytes \r\n     */\r\n    static utf8ArrToString (aBytes: Uint8Array): string {\r\n        let sView = \"\";\r\n        for (let nPart, nLen = aBytes.length, nIdx = 0; nIdx < nLen; nIdx++) {\r\n            nPart = aBytes[nIdx];\r\n            sView += String.fromCharCode(\r\n                nPart > 251 && nPart < 254 && nIdx + 5 < nLen ? /* six bytes */\r\n                    /* (nPart - 252 << 30) may be not so safe in ECMAScript! So...: */\r\n                    (nPart - 252) * 1073741824 + (aBytes[++nIdx] - 128 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                    : nPart > 247 && nPart < 252 && nIdx + 4 < nLen ? /* five bytes */\r\n                        (nPart - 248 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                        : nPart > 239 && nPart < 248 && nIdx + 3 < nLen ? /* four bytes */\r\n                            (nPart - 240 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                            : nPart > 223 && nPart < 240 && nIdx + 2 < nLen ? /* three bytes */\r\n                                (nPart - 224 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                                : nPart > 191 && nPart < 224 && nIdx + 1 < nLen ? /* two bytes */\r\n                                    (nPart - 192 << 6) + aBytes[++nIdx] - 128\r\n                                    : /* nPart < 127 ? */ /* one byte */\r\n                                    nPart\r\n            );\r\n        }\r\n        return sView;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\r\n\r\n/**\r\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\nexport class Base64Encode {\r\n    \r\n    /**\r\n     * Returns URL Safe b64 encoded string from a plaintext string.\r\n     * @param input \r\n     */\r\n    urlEncode(input: string): string {\r\n        return encodeURIComponent(this.encode(input)\r\n            .replace(/=/g, \"\")\r\n            .replace(/\\+/g, \"-\")\r\n            .replace(/\\//g, \"_\"));\r\n    }\r\n\r\n    /**\r\n     * Returns URL Safe b64 encoded string from an int8Array.\r\n     * @param inputArr \r\n     */\r\n    urlEncodeArr(inputArr: Uint8Array): string {\r\n        return this.base64EncArr(inputArr)\r\n            .replace(/=/g, \"\")\r\n            .replace(/\\+/g, \"-\")\r\n            .replace(/\\//g, \"_\");\r\n    }\r\n\r\n    /**\r\n     * Returns b64 encoded string from plaintext string.\r\n     * @param input \r\n     */\r\n    encode(input: string): string {\r\n        const inputUtf8Arr = BrowserStringUtils.stringToUtf8Arr(input);\r\n        return this.base64EncArr(inputUtf8Arr);\r\n    }\r\n\r\n    /**\r\n     * Base64 encode byte array\r\n     * @param aBytes \r\n     */\r\n    private base64EncArr(aBytes: Uint8Array): string {  \r\n        const eqLen = (3 - (aBytes.length % 3)) % 3;\r\n        let sB64Enc = \"\";\r\n      \r\n        for (let nMod3, nLen = aBytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {\r\n            nMod3 = nIdx % 3;\r\n            /* Uncomment the following line in order to split the output in lines 76-character long: */\r\n            /*\r\n            if (nIdx > 0 && (nIdx * 4 / 3) % 76 === 0) { sB64Enc += \"\\r\\n\"; }\r\n            */\r\n            nUint24 |= aBytes[nIdx] << (16 >>> nMod3 & 24);\r\n            if (nMod3 === 2 || aBytes.length - nIdx === 1) {\r\n                sB64Enc += String.fromCharCode(\r\n                    this.uint6ToB64(nUint24 >>> 18 & 63), \r\n                    this.uint6ToB64(nUint24 >>> 12 & 63), \r\n                    this.uint6ToB64(nUint24 >>> 6 & 63), \r\n                    this.uint6ToB64(nUint24 & 63)\r\n                );\r\n                nUint24 = 0;\r\n            }\r\n        }\r\n\r\n        return  eqLen === 0 ? sB64Enc : sB64Enc.substring(0, sB64Enc.length - eqLen) + (eqLen === 1 ? \"=\" : \"==\");\r\n    }\r\n\r\n    /**\r\n     * Base64 string to array encoding helper\r\n     * @param nUint6 \r\n     */\r\n    private uint6ToB64 (nUint6: number): number {\r\n        return nUint6 < 26 ?\r\n            nUint6 + 65\r\n            : nUint6 < 52 ?\r\n                nUint6 + 71\r\n                : nUint6 < 62 ?\r\n                    nUint6 - 4\r\n                    : nUint6 === 62 ?\r\n                        43\r\n                        : nUint6 === 63 ?\r\n                            47\r\n                            :\r\n                            65;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\r\n\r\n/**\r\n * Class which exposes APIs to decode base64 strings to plaintext. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\nexport class Base64Decode {\r\n\r\n    /**\r\n     * Returns a URL-safe plaintext decoded string from b64 encoded input.\r\n     * @param input \r\n     */\r\n    decode(input: string): string {\r\n        let encodedString = input.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n        switch (encodedString.length % 4) {\r\n            case 0:\r\n                break;\r\n            case 2:\r\n                encodedString += \"==\";\r\n                break;\r\n            case 3:\r\n                encodedString += \"=\";\r\n                break;\r\n            default:\r\n                throw new Error(\"Invalid base64 string\");\r\n        }\r\n\r\n        const inputUtf8Arr = this.base64DecToArr(encodedString);\r\n        return decodeURIComponent(BrowserStringUtils.utf8ArrToString(inputUtf8Arr));\r\n    }\r\n\r\n    /**\r\n     * Decodes base64 into Uint8Array\r\n     * @param base64String \r\n     * @param nBlockSize \r\n     */\r\n    private base64DecToArr(base64String: string, nBlockSize?: number): Uint8Array {\r\n        const sB64Enc = base64String.replace(/[^A-Za-z0-9\\+\\/]/g, \"\");\r\n        const nInLen = sB64Enc.length;\r\n        const nOutLen = nBlockSize ? Math.ceil((nInLen * 3 + 1 >>> 2) / nBlockSize) * nBlockSize : nInLen * 3 + 1 >>> 2;\r\n        const aBytes = new Uint8Array(nOutLen);\r\n\r\n        for (let nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {\r\n            nMod4 = nInIdx & 3;\r\n            nUint24 |= this.b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;\r\n            if (nMod4 === 3 || nInLen - nInIdx === 1) {\r\n                for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {\r\n                    aBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;\r\n                }\r\n                nUint24 = 0;\r\n            }\r\n        }\r\n\r\n        return aBytes;\r\n    }\r\n\r\n    /**\r\n     * Base64 string to array decoding helper\r\n     * @param charNum \r\n     */\r\n    private b64ToUint6(charNum: number): number {\r\n        return charNum > 64 && charNum < 91 ?\r\n            charNum - 65\r\n            : charNum > 96 && charNum < 123 ? \r\n                charNum - 71\r\n                : charNum > 47 && charNum < 58 ?\r\n                    charNum + 4\r\n                    : charNum === 43 ?\r\n                        62\r\n                        : charNum === 47 ?\r\n                            63\r\n                            :\r\n                            0;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { PkceCodes } from \"@azure/msal-common\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { Base64Encode } from \"../encode/Base64Encode\";\r\nimport { BrowserCrypto } from \"./BrowserCrypto\";\r\n\r\n// Constant byte array length\r\nconst RANDOM_BYTE_ARR_LENGTH = 32;\r\n\r\n/**\r\n * Class which exposes APIs to generate PKCE codes and code verifiers.\r\n */\r\nexport class PkceGenerator {\r\n\r\n    private base64Encode: Base64Encode;\r\n    private cryptoObj: BrowserCrypto;\r\n\r\n    constructor(cryptoObj: BrowserCrypto) {\r\n        this.base64Encode = new Base64Encode();\r\n        this.cryptoObj = cryptoObj;\r\n    }\r\n\r\n    /**\r\n     * Generates PKCE Codes. See the RFC for more information: https://tools.ietf.org/html/rfc7636\r\n     */\r\n    async generateCodes(): Promise<PkceCodes> {\r\n        const codeVerifier = this.generateCodeVerifier();\r\n        const codeChallenge = await this.generateCodeChallengeFromVerifier(codeVerifier);\r\n        return {\r\n            verifier: codeVerifier,\r\n            challenge: codeChallenge\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Generates a random 32 byte buffer and returns the base64\r\n     * encoded string to be used as a PKCE Code Verifier\r\n     */\r\n    private generateCodeVerifier(): string {\r\n        try {\r\n            // Generate random values as utf-8\r\n            const buffer: Uint8Array = new Uint8Array(RANDOM_BYTE_ARR_LENGTH);\r\n            this.cryptoObj.getRandomValues(buffer);\r\n            // encode verifier as base64\r\n            const pkceCodeVerifierB64: string = this.base64Encode.urlEncodeArr(buffer);\r\n            return pkceCodeVerifierB64;\r\n        } catch (e) {\r\n            throw BrowserAuthError.createPkceNotGeneratedError(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates a base64 encoded PKCE Code Challenge string from the\r\n     * hash created from the PKCE Code Verifier supplied\r\n     */\r\n    private async generateCodeChallengeFromVerifier(pkceCodeVerifier: string): Promise<string> {\r\n        try {\r\n            // hashed verifier\r\n            const pkceHashedCodeVerifier = await this.cryptoObj.sha256Digest(pkceCodeVerifier);\r\n            // encode hash as base64\r\n            return this.base64Encode.urlEncodeArr(new Uint8Array(pkceHashedCodeVerifier));\r\n        } catch (e) {\r\n            throw BrowserAuthError.createPkceNotGeneratedError(e);\r\n        }\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\n\r\n// SHA-256 hashing algorithm\r\nconst HASH_ALG = \"SHA-256\";\r\n\r\n/**\r\n * This class implements functions used by the browser library to perform cryptography operations such as\r\n * hashing and encoding. It also has helper functions to validate the availability of specific APIs.\r\n */\r\nexport class BrowserCrypto {\r\n\r\n    constructor() {\r\n        if (!(this.hasCryptoAPI())) {\r\n            throw BrowserAuthError.createCryptoNotAvailableError(\"Browser crypto or msCrypto object not available.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a sha-256 hash of the given dataString as an ArrayBuffer.\r\n     * @param dataString \r\n     */\r\n    async sha256Digest(dataString: string): Promise<ArrayBuffer> {\r\n        const data = BrowserStringUtils.stringToUtf8Arr(dataString);\r\n\r\n        return this.hasIECrypto() ? this.getMSCryptoDigest(HASH_ALG, data) : this.getSubtleCryptoDigest(HASH_ALG, data);\r\n    }\r\n\r\n    /**\r\n     * Populates buffer with cryptographically random values.\r\n     * @param dataBuffer \r\n     */\r\n    getRandomValues(dataBuffer: Uint8Array): void {\r\n        const cryptoObj = window[\"msCrypto\"] || window.crypto;\r\n        if (!cryptoObj.getRandomValues) {\r\n            throw BrowserAuthError.createCryptoNotAvailableError(\"getRandomValues does not exist.\");\r\n        }\r\n        cryptoObj.getRandomValues(dataBuffer);\r\n    }\r\n\r\n    /**\r\n     * Checks whether IE crypto (AKA msCrypto) is available.\r\n     */\r\n    private hasIECrypto(): boolean {\r\n        return !!window[\"msCrypto\"];\r\n    }\r\n\r\n    /**\r\n     * Check whether browser crypto is available.\r\n     */\r\n    private hasBrowserCrypto(): boolean {\r\n        return !!window.crypto;\r\n    }\r\n\r\n    /**\r\n     * Check whether IE crypto or other browser cryptography is available.\r\n     */\r\n    private hasCryptoAPI(): boolean {\r\n        return this.hasIECrypto() || this.hasBrowserCrypto();\r\n    }\r\n\r\n    /**\r\n     * Helper function for SHA digest.\r\n     * @param algorithm \r\n     * @param data \r\n     */\r\n    private async getSubtleCryptoDigest(algorithm: string, data: Uint8Array): Promise<ArrayBuffer> {\r\n        return window.crypto.subtle.digest(algorithm, data);\r\n    }\r\n\r\n    /**\r\n     * Helper function for SHA digest.\r\n     * @param algorithm \r\n     * @param data \r\n     */\r\n    private async getMSCryptoDigest(algorithm: string, data: Uint8Array): Promise<ArrayBuffer> {\r\n        return new Promise((resolve, reject) => {\r\n            const digestOperation = window[\"msCrypto\"].subtle.digest(algorithm, data.buffer);\r\n            digestOperation.addEventListener(\"complete\", (e: { target: { result: ArrayBuffer | PromiseLike<ArrayBuffer>; }; }) => {\r\n                resolve(e.target.result);\r\n            });\r\n            digestOperation.addEventListener(\"error\", (error: string) => {\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { ICrypto, PkceCodes } from \"@azure/msal-common\";\r\nimport { GuidGenerator } from \"./GuidGenerator\";\r\nimport { Base64Encode } from \"../encode/Base64Encode\";\r\nimport { Base64Decode } from \"../encode/Base64Decode\";\r\nimport { PkceGenerator } from \"./PkceGenerator\";\r\nimport { BrowserCrypto } from \"./BrowserCrypto\";\r\n\r\n/**\r\n * This class implements MSAL's crypto interface, which allows it to perform base64 encoding and decoding, generating cryptographically random GUIDs and \r\n * implementing Proof Key for Code Exchange specs for the OAuth Authorization Code Flow using PKCE (rfc here: https://tools.ietf.org/html/rfc7636).\r\n */\r\nexport class CryptoOps implements ICrypto {\r\n\r\n    private browserCrypto: BrowserCrypto;\r\n    private guidGenerator: GuidGenerator;\r\n    private b64Encode: Base64Encode;\r\n    private b64Decode: Base64Decode;\r\n    private pkceGenerator: PkceGenerator;\r\n\r\n    constructor() {\r\n        // Browser crypto needs to be validated first before any other classes can be set.\r\n        this.browserCrypto = new BrowserCrypto();\r\n        this.b64Encode = new Base64Encode();\r\n        this.b64Decode = new Base64Decode();\r\n        this.guidGenerator = new GuidGenerator(this.browserCrypto);\r\n        this.pkceGenerator = new PkceGenerator(this.browserCrypto);\r\n    }\r\n\r\n    /**\r\n     * Creates a new random GUID - used to populate state and nonce.\r\n     * @returns string (GUID)\r\n     */\r\n    createNewGuid(): string {\r\n        return this.guidGenerator.generateGuid();\r\n    }\r\n\r\n    /**\r\n     * Encodes input string to base64.\r\n     * @param input \r\n     */\r\n    base64Encode(input: string): string {\r\n        return this.b64Encode.encode(input);\r\n    }    \r\n    \r\n    /**\r\n     * Decodes input string from base64.\r\n     * @param input \r\n     */\r\n    base64Decode(input: string): string {\r\n        return this.b64Decode.decode(input);\r\n    }\r\n\r\n    /**\r\n     * Generates PKCE codes used in Authorization Code Flow.\r\n     */\r\n    async generatePkceCodes(): Promise<PkceCodes> {\r\n        return this.pkceGenerator.generateCodes();\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { StringUtils, AuthorizationCodeRequest, CacheSchemaType, AuthenticationResult, AuthorizationCodeClient } from \"@azure/msal-common\";\r\nimport { BrowserStorage } from \"../cache/BrowserStorage\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { TemporaryCacheKeys } from \"../utils/BrowserConstants\";\r\n\r\n/**\r\n * Abstract class which defines operations for a browser interaction handling class.\r\n */\r\nexport abstract class InteractionHandler {\r\n\r\n    protected authModule: AuthorizationCodeClient;\r\n    protected browserStorage: BrowserStorage;\r\n    protected authCodeRequest: AuthorizationCodeRequest;\r\n\r\n    constructor(authCodeModule: AuthorizationCodeClient, storageImpl: BrowserStorage) {\r\n        this.authModule = authCodeModule;\r\n        this.browserStorage = storageImpl;\r\n    }\r\n\r\n    /**\r\n     * Function to enable user interaction.\r\n     * @param requestUrl\r\n     */\r\n    abstract initiateAuthRequest(requestUrl: string, authCodeRequest: AuthorizationCodeRequest): Window | Promise<HTMLIFrameElement>;\r\n\r\n    /**\r\n     * Function to handle response parameters from hash.\r\n     * @param locationHash\r\n     */\r\n    async handleCodeResponse(locationHash: string): Promise<AuthenticationResult> {\r\n        // Check that location hash isn't empty.\r\n        if (StringUtils.isEmpty(locationHash)) {\r\n            throw BrowserAuthError.createEmptyHashError(locationHash);\r\n        }\r\n\r\n        // Handle code response.\r\n        const requestState = this.browserStorage.getItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE), CacheSchemaType.TEMPORARY) as string;\r\n        const authCode = this.authModule.handleFragmentResponse(locationHash, requestState);\r\n        \r\n        // Get cached items\r\n        const cachedNonceKey = this.browserStorage.generateNonceKey(requestState);\r\n        const cachedNonce = this.browserStorage.getItem(this.browserStorage.generateCacheKey(cachedNonceKey), CacheSchemaType.TEMPORARY) as string;\r\n\r\n        // Assign code to request\r\n        this.authCodeRequest.code = authCode;\r\n\r\n        // Acquire token with retrieved code.\r\n        const tokenResponse = await this.authModule.acquireToken(this.authCodeRequest, cachedNonce, requestState);\r\n        this.browserStorage.cleanRequest();\r\n        return tokenResponse;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { StringUtils, AuthorizationCodeRequest, ICrypto, CacheSchemaType, AuthenticationResult } from \"@azure/msal-common\";\r\nimport { InteractionHandler } from \"./InteractionHandler\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { BrowserConstants, TemporaryCacheKeys } from \"../utils/BrowserConstants\";\r\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\r\n\r\nexport class RedirectHandler extends InteractionHandler {\r\n\r\n    /**\r\n     * Redirects window to given URL.\r\n     * @param urlNavigate\r\n     */\r\n    initiateAuthRequest(requestUrl: string, authCodeRequest: AuthorizationCodeRequest, redirectStartPage?: string, browserCrypto?: ICrypto): Window {\r\n        // Navigate if valid URL\r\n        if (!StringUtils.isEmpty(requestUrl)) {\r\n            // Cache start page, returns to this page after redirectUri if navigateToLoginRequestUrl is true\r\n            const loginStartPage = redirectStartPage || window.location.href;\r\n            this.browserStorage.setItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI), loginStartPage, CacheSchemaType.TEMPORARY);\r\n\r\n            // Set interaction status in the library.\r\n            this.browserStorage.setItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY), BrowserConstants.INTERACTION_IN_PROGRESS_VALUE, CacheSchemaType.TEMPORARY);\r\n            this.browserStorage.cacheCodeRequest(authCodeRequest, browserCrypto);\r\n            this.authModule.logger.infoPii(\"Navigate to:\" + requestUrl);\r\n            const isIframedApp = BrowserUtils.isInIframe();\r\n            if (isIframedApp) {\r\n                // If we are not in top frame, we shouldn't redirect. This is also handled by the service.\r\n                throw BrowserAuthError.createRedirectInIframeError(isIframedApp);\r\n            }\r\n            // Navigate window to request URL\r\n            BrowserUtils.navigateWindow(requestUrl);\r\n        } else {\r\n            // Throw error if request URL is empty.\r\n            this.authModule.logger.info(\"Navigate url is empty\");\r\n            throw BrowserAuthError.createEmptyNavigationUriError();\r\n        }\r\n        // Return this window handle. Not used for redirect, but needed for API definition.\r\n        return window;\r\n    }\r\n\r\n    /**\r\n     * Handle authorization code response in the window.\r\n     * @param hash\r\n     */\r\n    async handleCodeResponse(locationHash: string, browserCrypto?: ICrypto): Promise<AuthenticationResult> {\r\n        // Check that location hash isn't empty.\r\n        if (StringUtils.isEmpty(locationHash)) {\r\n            throw BrowserAuthError.createEmptyHashError(locationHash);\r\n        }\r\n\r\n        // Interaction is completed - remove interaction status.\r\n        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY));\r\n\r\n        // Handle code response.\r\n        const requestState = this.browserStorage.getItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE), CacheSchemaType.TEMPORARY) as string;\r\n        const authCode = this.authModule.handleFragmentResponse(locationHash, requestState);\r\n\r\n        // Get cached items\r\n        const cachedNonceKey = this.browserStorage.generateNonceKey(requestState);\r\n        const cachedNonce = this.browserStorage.getItem(this.browserStorage.generateCacheKey(cachedNonceKey), CacheSchemaType.TEMPORARY) as string;\r\n        this.authCodeRequest = this.browserStorage.getCachedRequest(requestState, browserCrypto);\r\n        this.authCodeRequest.code = authCode;\r\n\r\n        // Hash was processed successfully - remove from cache\r\n        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.URL_HASH));\r\n\r\n        // Acquire token with retrieved code.\r\n        const tokenResponse = await this.authModule.acquireToken(this.authCodeRequest, cachedNonce, requestState);\r\n        this.browserStorage.cleanRequest();\r\n        return tokenResponse;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { UrlString, StringUtils, Constants, AuthorizationCodeRequest, CacheSchemaType, AuthorizationCodeClient } from \"@azure/msal-common\";\r\nimport { InteractionHandler } from \"./InteractionHandler\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { BrowserConstants } from \"../utils/BrowserConstants\";\r\nimport { BrowserStorage } from \"../cache/BrowserStorage\";\r\n\r\n/**\r\n * This class implements the interaction handler base class for browsers. It is written specifically for handling\r\n * popup window scenarios. It includes functions for monitoring the popup window for a hash.\r\n */\r\nexport class PopupHandler extends InteractionHandler {\r\n\r\n    private currentWindow: Window;\r\n\r\n    constructor(authCodeModule: AuthorizationCodeClient, storageImpl: BrowserStorage) {\r\n        super(authCodeModule, storageImpl);\r\n\r\n        // Properly sets this reference for the unload event.\r\n        this.unloadWindow = this.unloadWindow.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Opens a popup window with given request Url.\r\n     * @param requestUrl\r\n     */\r\n    initiateAuthRequest(requestUrl: string, authCodeRequest: AuthorizationCodeRequest): Window {\r\n        // Check that request url is not empty.\r\n        if (!StringUtils.isEmpty(requestUrl)) {\r\n            // Save auth code request\r\n            this.authCodeRequest = authCodeRequest;\r\n            // Set interaction status in the library.\r\n            this.browserStorage.setItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY), BrowserConstants.INTERACTION_IN_PROGRESS_VALUE, CacheSchemaType.TEMPORARY);\r\n            this.authModule.logger.infoPii(\"Navigate to:\" + requestUrl);\r\n            // Open the popup window to requestUrl.\r\n            return this.openPopup(requestUrl, Constants.LIBRARY_NAME, BrowserConstants.POPUP_WIDTH, BrowserConstants.POPUP_HEIGHT);\r\n        } else {\r\n            // Throw error if request URL is empty.\r\n            this.authModule.logger.error(\"Navigate url is empty\");\r\n            throw BrowserAuthError.createEmptyNavigationUriError();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Monitors a window until it loads a url with a known hash, or hits a specified timeout.\r\n     * @param popupWindow - window that is being monitored\r\n     * @param timeout - milliseconds until timeout\r\n     * @param urlNavigate - url that was navigated to\r\n     */\r\n    monitorPopupForHash(popupWindow: Window, timeout: number): Promise<string> {\r\n        return new Promise((resolve, reject) => {\r\n            const maxTicks = timeout / BrowserConstants.POLL_INTERVAL_MS;\r\n            let ticks = 0;\r\n\r\n            const intervalId = setInterval(() => {\r\n                if (popupWindow.closed) {\r\n                    // Window is closed\r\n                    this.cleanPopup();\r\n                    clearInterval(intervalId);\r\n                    reject(BrowserAuthError.createUserCancelledError());\r\n                    return;\r\n                }\r\n\r\n                let href;\r\n                try {\r\n                    /*\r\n                     * Will throw if cross origin,\r\n                     * which should be caught and ignored\r\n                     * since we need the interval to keep running while on STS UI.\r\n                     */\r\n                    href = popupWindow.location.href;\r\n                } catch (e) {}\r\n\r\n                // Don't process blank pages or cross domain\r\n                if (!href || href === \"about:blank\") {\r\n                    return;\r\n                }\r\n\r\n                // Only run clock when we are on same domain\r\n                ticks++;\r\n\r\n                if (UrlString.hashContainsKnownProperties(href)) {\r\n                    // Success case\r\n                    const contentHash = popupWindow.location.hash;\r\n                    this.cleanPopup(popupWindow);\r\n                    clearInterval(intervalId);\r\n                    resolve(contentHash);\r\n                    return;\r\n                } else if (ticks > maxTicks) {\r\n                    // Timeout error\r\n                    this.cleanPopup(popupWindow);\r\n                    clearInterval(intervalId);\r\n                    reject(BrowserAuthError.createMonitorWindowTimeoutError());\r\n                    return;\r\n                }\r\n            }, BrowserConstants.POLL_INTERVAL_MS);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Configures popup window for login.\r\n     *\r\n     * @param urlNavigate\r\n     * @param title\r\n     * @param popUpWidth\r\n     * @param popUpHeight\r\n     * @ignore\r\n     * @hidden\r\n     */\r\n    private openPopup(urlNavigate: string, title: string, popUpWidth: number, popUpHeight: number): Window {\r\n        try {\r\n            /**\r\n             * adding winLeft and winTop to account for dual monitor\r\n             * using screenLeft and screenTop for IE8 and earlier\r\n             */\r\n            const winLeft = window.screenLeft ? window.screenLeft : window.screenX;\r\n            const winTop = window.screenTop ? window.screenTop : window.screenY;\r\n            /**\r\n             * window.innerWidth displays browser window\"s height and width excluding toolbars\r\n             * using document.documentElement.clientWidth for IE8 and earlier\r\n             */\r\n            const width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n            const height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n            const left = ((width / 2) - (popUpWidth / 2)) + winLeft;\r\n            const top = ((height / 2) - (popUpHeight / 2)) + winTop;\r\n\r\n            // open the window\r\n            const popupWindow = window.open(urlNavigate, title, \"width=\" + popUpWidth + \", height=\" + popUpHeight + \", top=\" + top + \", left=\" + left);\r\n            if (!popupWindow) {\r\n                throw BrowserAuthError.createEmptyWindowCreatedError();\r\n            }\r\n            if (popupWindow.focus) {\r\n                popupWindow.focus();\r\n            }\r\n            this.currentWindow = popupWindow;\r\n            window.addEventListener(\"beforeunload\", this.unloadWindow);\r\n\r\n            return popupWindow;\r\n        } catch (e) {\r\n            this.authModule.logger.error(\"error opening popup \" + e.message);\r\n            this.browserStorage.removeItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY));\r\n            throw BrowserAuthError.createPopupWindowError(e.toString());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Event callback to unload main window.\r\n     */\r\n    unloadWindow(e: Event): void {\r\n        this.browserStorage.cleanRequest();\r\n        this.currentWindow.close();\r\n        // Guarantees browser unload will happen, so no other errors will be thrown.\r\n        delete e[\"returnValue\"];\r\n    }\r\n\r\n    /**\r\n     * Closes popup, removes any state vars created during popup calls.\r\n     * @param popupWindow\r\n     */\r\n    private cleanPopup(popupWindow?: Window): void {\r\n        if (popupWindow) {\r\n            // Close window.\r\n            popupWindow.close();\r\n        }\r\n        // Remove window unload function\r\n        window.removeEventListener(\"beforeunload\", this.unloadWindow);\r\n\r\n        // Interaction is completed - remove interaction status.\r\n        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY));\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { UrlString, StringUtils, AuthorizationCodeRequest, AuthorizationCodeClient } from \"@azure/msal-common\";\r\nimport { InteractionHandler } from \"./InteractionHandler\";\r\nimport { BrowserConstants } from \"../utils/BrowserConstants\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { BrowserStorage } from \"../cache/BrowserStorage\";\r\n\r\nexport class SilentHandler extends InteractionHandler {\r\n\r\n    private loadFrameTimeout: number;\r\n    constructor(authCodeModule: AuthorizationCodeClient, storageImpl: BrowserStorage, configuredLoadFrameTimeout: number) {\r\n        super(authCodeModule, storageImpl);\r\n        this.loadFrameTimeout = configuredLoadFrameTimeout;\r\n    }\r\n\r\n    /**\r\n     * Creates a hidden iframe to given URL using user-requested scopes as an id.\r\n     * @param urlNavigate \r\n     * @param userRequestScopes\r\n     */\r\n    async initiateAuthRequest(requestUrl: string, authCodeRequest: AuthorizationCodeRequest, userRequestScopes?: string): Promise<HTMLIFrameElement> {\r\n        if (StringUtils.isEmpty(requestUrl)) {\r\n            // Throw error if request URL is empty.\r\n            this.authModule.logger.info(\"Navigate url is empty\");\r\n            throw BrowserAuthError.createEmptyNavigationUriError();\r\n        }\r\n        // Save auth code request\r\n        this.authCodeRequest = authCodeRequest;\r\n        const frameName = userRequestScopes ? `msalTokenFrame${userRequestScopes}` : \"msalTokenFrame\";\r\n        return this.loadFrameTimeout ? await this.loadFrame(requestUrl, frameName) : this.loadFrameSync(requestUrl, frameName);\r\n    }\r\n\r\n    /**\r\n     * Monitors an iframe content window until it loads a url with a known hash, or hits a specified timeout.\r\n     * @param iframe \r\n     * @param timeout \r\n     */\r\n    monitorIframeForHash(iframe: HTMLIFrameElement, timeout: number): Promise<string> {\r\n        return new Promise((resolve, reject) => {\r\n            /*\r\n             * Polling for iframes can be purely timing based,\r\n             * since we don't need to account for interaction.\r\n             */\r\n            const nowMark = window.performance.now();\r\n            const timeoutMark = nowMark + timeout;\r\n\r\n            const intervalId = setInterval(() => {\r\n                if (window.performance.now() > timeoutMark) {\r\n                    this.removeHiddenIframe(iframe);\r\n                    clearInterval(intervalId);\r\n                    reject(BrowserAuthError.createMonitorWindowTimeoutError());\r\n                    return;\r\n                }\r\n\r\n                let href;\r\n                try {\r\n                    /*\r\n                     * Will throw if cross origin,\r\n                     * which should be caught and ignored\r\n                     * since we need the interval to keep running while on STS UI.\r\n                     */\r\n                    href = iframe.contentWindow.location.href;\r\n                } catch (e) {}\r\n\r\n                if (UrlString.hashContainsKnownProperties(href)) {\r\n                    // Success case\r\n                    const contentHash = iframe.contentWindow.location.hash;\r\n                    this.removeHiddenIframe(iframe);\r\n                    clearInterval(intervalId);\r\n                    resolve(contentHash);\r\n                    return;\r\n                }\r\n            }, BrowserConstants.POLL_INTERVAL_MS);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     * Loads iframe with authorization endpoint URL\r\n     * @ignore\r\n     */\r\n    private loadFrame(urlNavigate: string, frameName: string): Promise<HTMLIFrameElement> {\r\n        /*\r\n         * This trick overcomes iframe navigation in IE\r\n         * IE does not load the page consistently in iframe\r\n         */\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                const frameHandle = this.loadFrameSync(urlNavigate, frameName);\r\n\r\n                if (!frameHandle) {\r\n                    reject(`Unable to load iframe with name: ${frameName}`);\r\n                    return;\r\n                }\r\n\r\n                resolve(frameHandle);\r\n            }, this.loadFrameTimeout);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\r\n     * @param urlNavigate\r\n     * @param frameName\r\n     * @param logger\r\n     */\r\n    private loadFrameSync(urlNavigate: string, frameName: string): HTMLIFrameElement{\r\n        const frameHandle = this.getHiddenIframe(frameName);\r\n\r\n        // returning to handle null in loadFrame, also to avoid null object access errors\r\n        if (!frameHandle) {\r\n            return null;\r\n        }\r\n        else if (frameHandle.src === \"\" || frameHandle.src === \"about:blank\") {\r\n            frameHandle.src = urlNavigate;\r\n        }\r\n\r\n        return frameHandle;\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     * Creates a new hidden iframe or gets an existing one for silent token renewal.\r\n     * @ignore\r\n     */\r\n    private getHiddenIframe(iframeId: string): HTMLIFrameElement {\r\n        if (typeof iframeId === \"undefined\") {\r\n            return null;\r\n        }\r\n\r\n        let authFrame = document.getElementById(iframeId) as HTMLIFrameElement;\r\n        if (!authFrame) {\r\n            if (document.createElement &&\r\n            document.documentElement &&\r\n            (window.navigator.userAgent.indexOf(\"MSIE 5.0\") === -1)) {\r\n                const ifr = document.createElement(\"iframe\");\r\n                ifr.setAttribute(\"id\", iframeId);\r\n                ifr.style.visibility = \"hidden\";\r\n                ifr.style.position = \"absolute\";\r\n                ifr.style.width = ifr.style.height = \"0\";\r\n                ifr.style.border = \"0\";\r\n                ifr.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\r\n                authFrame = (document.getElementsByTagName(\"body\")[0].appendChild(ifr) as HTMLIFrameElement);\r\n            } else if (document.body && document.body.insertAdjacentHTML) {\r\n                document.body.insertAdjacentHTML(\"beforeend\", \"<iframe name='\" + iframeId + \"' id='\" + iframeId + \"' style='display:none'></iframe>\");\r\n            }\r\n\r\n            if (window.frames && window.frames[iframeId]) {\r\n                authFrame = window.frames[iframeId];\r\n            }\r\n        }\r\n\r\n        return authFrame;\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     * Removes a hidden iframe from the page.\r\n     * @ignore\r\n     */\r\n    private removeHiddenIframe(iframe: HTMLIFrameElement): void {\r\n        if (document.body === iframe.parentNode) {\r\n            document.body.removeChild(iframe);\r\n        }\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport {\r\n    AuthorizationCodeClient,\r\n    INetworkModule,\r\n    UrlString,\r\n    StringUtils,\r\n    PromptValue,\r\n    ServerError,\r\n    Authority,\r\n    AuthorityFactory,\r\n    InteractionRequiredAuthError,\r\n    TrustedAuthority,\r\n    AuthorizationUrlRequest,\r\n    PersistentCacheKeys,\r\n    IdToken,\r\n    ProtocolUtils,\r\n    AuthorizationCodeRequest,\r\n    Constants,\r\n    CacheSchemaType,\r\n    AuthenticationResult,\r\n    SilentFlowRequest,\r\n    AccountInfo,\r\n    ResponseMode,\r\n    ClientConfiguration,\r\n    SilentFlowClient,\r\n    EndSessionRequest,\r\n    BaseAuthRequest,\r\n    Logger\r\n} from \"@azure/msal-common\";\r\nimport { buildConfiguration, Configuration } from \"../config/Configuration\";\r\nimport { BrowserStorage } from \"../cache/BrowserStorage\";\r\nimport { CryptoOps } from \"../crypto/CryptoOps\";\r\nimport { RedirectHandler } from \"../interaction_handler/RedirectHandler\";\r\nimport { PopupHandler } from \"../interaction_handler/PopupHandler\";\r\nimport { SilentHandler } from \"../interaction_handler/SilentHandler\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { BrowserConstants, TemporaryCacheKeys } from \"../utils/BrowserConstants\";\r\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\r\nimport { version } from \"../../package.json\";\r\nimport { IPublicClientApplication } from \"./IPublicClientApplication\";\r\nimport { RedirectRequest } from \"../request/RedirectRequest\";\r\nimport { PopupRequest } from \"../request/PopupRequest\";\r\n\r\n/**\r\n * The PublicClientApplication class is the object exposed by the library to perform authentication and authorization functions in Single Page Applications\r\n * to obtain JWT tokens as described in the OAuth 2.0 Authorization Code Flow with PKCE specification.\r\n */\r\nexport class PublicClientApplication implements IPublicClientApplication {\r\n\r\n    // Crypto interface implementation\r\n    private readonly browserCrypto: CryptoOps;\r\n\r\n    // Storage interface implementation\r\n    private readonly browserStorage: BrowserStorage;\r\n\r\n    // Network interface implementation\r\n    private readonly networkClient: INetworkModule;\r\n\r\n    // Response promise\r\n    private readonly tokenExchangePromise: Promise<AuthenticationResult>;\r\n\r\n    // Input configuration by developer/user\r\n    private config: Configuration;\r\n\r\n    // Default authority\r\n    private defaultAuthority: Authority;\r\n\r\n    // Logger\r\n    private logger: Logger;\r\n\r\n    /**\r\n     * @constructor\r\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\r\n     *\r\n     * Important attributes in the Configuration object for auth are:\r\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\r\n     * - authority: the authority URL for your application.\r\n     * - redirect_uri: the uri of your application registered in the portal.\r\n     *\r\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\r\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\r\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\r\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\r\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\r\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\r\n     *\r\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\r\n     * Full B2C functionality will be available in this library in future versions.\r\n     *\r\n     * @param {@link (Configuration:type)} configuration object for the MSAL PublicClientApplication instance\r\n     */\r\n    constructor(configuration: Configuration) {\r\n        // Set the configuration.\r\n        this.config = buildConfiguration(configuration);\r\n\r\n        // Initialize the crypto class.\r\n        this.browserCrypto = new CryptoOps();\r\n\r\n        // Initialize the network module class.\r\n        this.networkClient = this.config.system.networkClient;\r\n\r\n        // Initialize the browser storage class.\r\n        this.browserStorage = new BrowserStorage(this.config.auth.clientId, this.config.cache);\r\n\r\n        // Initialize logger\r\n        this.logger = new Logger(this.config.system.loggerOptions);\r\n\r\n        // Initialize default authority instance\r\n        TrustedAuthority.setTrustedAuthoritiesFromConfig(this.config.auth.knownAuthorities, this.config.auth.cloudDiscoveryMetadata);\r\n\r\n        this.defaultAuthority = null;\r\n    }\r\n\r\n    // #region Redirect Flow\r\n    \r\n    /**\r\n     * Event handler function which allows users to fire events after the PublicClientApplication object\r\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\r\n     * auth flows.\r\n     * @returns token response or null. If the return value is null, then no auth redirect was detected.\r\n     */\r\n    async handleRedirectPromise(): Promise<AuthenticationResult | null> {\r\n        return this.handleRedirectResponse();\r\n    }\r\n\r\n    /**\r\n     * Checks if navigateToLoginRequestUrl is set, and:\r\n     * - if true, performs logic to cache and navigate\r\n     * - if false, handles hash string and parses response\r\n     */\r\n    private async handleRedirectResponse(): Promise<AuthenticationResult> {\r\n        // Get current location hash from window or cache.\r\n        const { location: { hash } } = window;\r\n        const cachedHash = this.browserStorage.getItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.URL_HASH), CacheSchemaType.TEMPORARY) as string;\r\n        const isResponseHash = UrlString.hashContainsKnownProperties(hash);\r\n        const loginRequestUrl = this.browserStorage.getItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI), CacheSchemaType.TEMPORARY) as string;\r\n\r\n        const currentUrlNormalized = UrlString.removeHashFromUrl(window.location.href);\r\n        const loginRequestUrlNormalized = UrlString.removeHashFromUrl(loginRequestUrl || \"\");\r\n        if (loginRequestUrlNormalized === currentUrlNormalized) {\r\n            if (this.config.auth.navigateToLoginRequestUrl) {\r\n                // Replace current hash with non-msal hash, if present\r\n                BrowserUtils.replaceHash(loginRequestUrl);\r\n            } else {\r\n                BrowserUtils.clearHash();\r\n            }\r\n\r\n            return this.handleHash(isResponseHash ? hash : cachedHash);\r\n        }\r\n\r\n        if (this.config.auth.navigateToLoginRequestUrl && isResponseHash && !BrowserUtils.isInIframe()) {\r\n            // Returned from authority using redirect - need to perform navigation before processing response\r\n            const hashKey = this.browserStorage.generateCacheKey(TemporaryCacheKeys.URL_HASH);\r\n            this.browserStorage.setItem(hashKey, hash, CacheSchemaType.TEMPORARY);\r\n            if (StringUtils.isEmpty(loginRequestUrl) || loginRequestUrl === \"null\") {\r\n                // Redirect to home page if login request url is null (real null or the string null)\r\n                this.logger.warning(\"Unable to get valid login request url from cache, redirecting to home page\");\r\n                BrowserUtils.navigateWindow(\"/\", true);\r\n            } else {\r\n                // Navigate to target url\r\n                BrowserUtils.navigateWindow(loginRequestUrl, true);\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n\t * Checks if hash exists and handles in window.\r\n\t * @param responseHash\r\n\t * @param interactionHandler\r\n\t */\r\n    private async handleHash(responseHash: string): Promise<AuthenticationResult> {\r\n        // There is no hash - clean cache and return null.\r\n        if (StringUtils.isEmpty(responseHash)) {\r\n            this.browserStorage.cleanRequest();\r\n            return null;\r\n        }\r\n\r\n        // Hash contains known properties - handle and return in callback\r\n        const currentAuthority = this.browserStorage.getCachedAuthority();\r\n        const authClient = await this.createAuthCodeClient(currentAuthority);\r\n        const interactionHandler = new RedirectHandler(authClient, this.browserStorage);\r\n        return interactionHandler.handleCodeResponse(responseHash, this.browserCrypto);\r\n    }\r\n\r\n    /**\r\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\r\n     * any code that follows this function will not execute.\r\n\t *\r\n\t * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n\t * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n\t *\r\n     * @param {@link (AuthenticationParameters:type)}\r\n     */\r\n    async loginRedirect(request: RedirectRequest): Promise<void> {\r\n        return this.acquireTokenRedirect(request);\r\n    }\r\n\r\n    /**\r\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\r\n     * the page, so any code that follows this function will not execute.\r\n\t *\r\n\t * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n\t * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n     * @param {@link (AuthenticationParameters:type)}\r\n     *\r\n     * To acquire only idToken, please pass clientId as the only scope in the Authentication Parameters\r\n     */\r\n    async acquireTokenRedirect(request: RedirectRequest): Promise<void> {\r\n        try {\r\n            // Preflight request\r\n            const validRequest: AuthorizationUrlRequest = this.preflightInteractiveRequest(request);\r\n\r\n            // Create auth code request and generate PKCE params\r\n            const authCodeRequest: AuthorizationCodeRequest = await this.initializeAuthorizationCodeRequest(validRequest);\r\n\r\n            // Initialize the client\r\n            const authClient: AuthorizationCodeClient = await this.createAuthCodeClient(validRequest.authority);\r\n\r\n            // Create redirect interaction handler.\r\n            const interactionHandler = new RedirectHandler(authClient, this.browserStorage);\r\n\r\n            // Create acquire token url.\r\n            const navigateUrl = await authClient.getAuthCodeUrl(validRequest);\r\n\r\n            // Show the UI once the url has been created. Response will come back in the hash, which will be handled in the handleRedirectCallback function.\r\n            interactionHandler.initiateAuthRequest(navigateUrl, authCodeRequest, request.redirectStartPage, this.browserCrypto);\r\n        } catch (e) {\r\n            this.browserStorage.cleanRequest();\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Popup Flow\r\n\r\n    /**\r\n     * Use when initiating the login process via opening a popup window in the user's browser\r\n     *\r\n     * @param {@link (AuthenticationParameters:type)}\r\n     *\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     */\r\n    async loginPopup(request: PopupRequest): Promise<AuthenticationResult> {\r\n        return this.acquireTokenPopup(request);\r\n    }\r\n\r\n    /**\r\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\r\n     * @param {@link AuthenticationParameters}\r\n     *\r\n     * To acquire only idToken, please pass clientId as the only scope in the Authentication Parameters\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     */\r\n    async acquireTokenPopup(request: PopupRequest): Promise<AuthenticationResult> {\r\n        try {\r\n            // Preflight request\r\n            const validRequest: AuthorizationUrlRequest = this.preflightInteractiveRequest(request);\r\n\r\n            // Create auth code request and generate PKCE params\r\n            const authCodeRequest: AuthorizationCodeRequest = await this.initializeAuthorizationCodeRequest(validRequest);\r\n\r\n            // Initialize the client\r\n            const authClient: AuthorizationCodeClient = await this.createAuthCodeClient(validRequest.authority);\r\n\r\n            // Create acquire token url.\r\n            const navigateUrl = await authClient.getAuthCodeUrl(validRequest);\r\n\r\n            // Acquire token with popup\r\n            return await this.popupTokenHelper(navigateUrl, authCodeRequest, authClient);\r\n        } catch (e) {\r\n            this.browserStorage.cleanRequest();\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Helper which acquires an authorization code with a popup from given url, and exchanges the code for a set of OAuth tokens.\r\n     * @param navigateUrl\r\n     */\r\n    private async popupTokenHelper(navigateUrl: string, authCodeRequest: AuthorizationCodeRequest, authClient: AuthorizationCodeClient): Promise<AuthenticationResult> {\r\n        // Create popup interaction handler.\r\n        const interactionHandler = new PopupHandler(authClient, this.browserStorage);\r\n        // Show the UI once the url has been created. Get the window handle for the popup.\r\n        const popupWindow: Window = interactionHandler.initiateAuthRequest(navigateUrl, authCodeRequest);\r\n        // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\r\n        const hash = await interactionHandler.monitorPopupForHash(popupWindow, this.config.system.windowHashTimeout);\r\n        // Handle response from hash string.\r\n        return await interactionHandler.handleCodeResponse(hash);\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Silent Flow\r\n\r\n    /**\r\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\r\n     * - Any browser using a form of Intelligent Tracking Prevention\r\n     * - If there is not an established session with the service\r\n     *\r\n     * In these cases, the request must be done inside a popup or full frame redirect.\r\n     *\r\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\r\n     *\r\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\r\n     * you session on the server still exists.\r\n     * @param {@link AuthorizationUrlRequest}\r\n     *\r\n     * To renew idToken, please pass clientId as the only scope in the Authentication Parameters.\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     */\r\n    async ssoSilent(request: AuthorizationUrlRequest): Promise<AuthenticationResult> {\r\n        // block the reload if it occurred inside a hidden iframe\r\n        BrowserUtils.blockReloadInHiddenIframes();\r\n\r\n        // Check that we have some SSO data\r\n        if (StringUtils.isEmpty(request.loginHint)) {\r\n            throw BrowserAuthError.createSilentSSOInsufficientInfoError();\r\n        }\r\n\r\n        // Check that prompt is set to none, throw error if it is set to anything else.\r\n        if (request.prompt && request.prompt !== PromptValue.NONE) {\r\n            throw BrowserAuthError.createSilentPromptValueError(request.prompt);\r\n        }\r\n\r\n        // Create silent request\r\n        const silentRequest: AuthorizationUrlRequest = this.initializeAuthorizationRequest({\r\n            ...request,\r\n            prompt: PromptValue.NONE\r\n        });\r\n\r\n        // Create auth code request and generate PKCE params\r\n        const authCodeRequest: AuthorizationCodeRequest = await this.initializeAuthorizationCodeRequest(silentRequest);\r\n\r\n        // Get scopeString for iframe ID\r\n        const scopeString = silentRequest.scopes ? silentRequest.scopes.join(\" \") : \"\";\r\n\r\n        // Initialize the client\r\n        const authClient: AuthorizationCodeClient = await this.createAuthCodeClient(silentRequest.authority);\r\n\r\n        // Create authorize request url\r\n        const navigateUrl = await authClient.getAuthCodeUrl(silentRequest);\r\n\r\n        return this.silentTokenHelper(navigateUrl, authCodeRequest, authClient, scopeString);\r\n    }\r\n\r\n    /**\r\n     * Use this function to obtain a token before every call to the API / resource provider\r\n     *\r\n     * MSAL return's a cached token when available\r\n     * Or it send's a request to the STS to obtain a new token using a refresh token.\r\n     *\r\n     * @param {@link AuthenticationParameters}\r\n     *\r\n     * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     *\r\n     */\r\n    async acquireTokenSilent(request: SilentFlowRequest): Promise<AuthenticationResult> {\r\n        // block the reload if it occurred inside a hidden iframe\r\n        BrowserUtils.blockReloadInHiddenIframes();\r\n        const silentRequest: SilentFlowRequest = {\r\n            ...request,\r\n            ...this.initializeBaseRequest(request)\r\n        };\r\n        try {\r\n            const silentAuthClient = await this.createSilentFlowClient(silentRequest.authority);\r\n            // Send request to renew token. Auth module will throw errors if token cannot be renewed.\r\n            return await silentAuthClient.acquireToken(silentRequest);\r\n        } catch (e) {\r\n            const isServerError = e instanceof ServerError;\r\n            const isInteractionRequiredError = e instanceof InteractionRequiredAuthError;\r\n            const isInvalidGrantError = (e.errorCode === BrowserConstants.INVALID_GRANT_ERROR);\r\n            if (isServerError && isInvalidGrantError && !isInteractionRequiredError) {\r\n                const silentAuthUrlRequest: AuthorizationUrlRequest = this.initializeAuthorizationRequest({\r\n                    ...silentRequest,\r\n                    prompt: PromptValue.NONE\r\n                });\r\n\r\n                // Create auth code request and generate PKCE params\r\n                const authCodeRequest: AuthorizationCodeRequest = await this.initializeAuthorizationCodeRequest(silentAuthUrlRequest);\r\n\r\n                // Initialize the client\r\n                const authClient: AuthorizationCodeClient = await this.createAuthCodeClient(silentAuthUrlRequest.authority);\r\n\r\n                // Create authorize request url\r\n                const navigateUrl = await authClient.getAuthCodeUrl(silentAuthUrlRequest);\r\n\r\n                // Get scopeString for iframe ID\r\n                const scopeString = silentAuthUrlRequest.scopes ? silentAuthUrlRequest.scopes.join(\" \") : \"\";\r\n\r\n                return this.silentTokenHelper(navigateUrl, authCodeRequest, authClient, scopeString);\r\n            }\r\n\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Helper which acquires an authorization code silently using a hidden iframe from given url\r\n     * using the scopes requested as part of the id, and exchanges the code for a set of OAuth tokens.\r\n     * @param navigateUrl\r\n     * @param userRequestScopes\r\n     */\r\n    private async silentTokenHelper(navigateUrl: string, authCodeRequest: AuthorizationCodeRequest, authClient: AuthorizationCodeClient, userRequestScopes: string): Promise<AuthenticationResult> {\r\n        try {\r\n            // Create silent handler\r\n            const silentHandler = new SilentHandler(authClient, this.browserStorage, this.config.system.loadFrameTimeout);\r\n            // Get the frame handle for the silent request\r\n            const msalFrame = await silentHandler.initiateAuthRequest(navigateUrl, authCodeRequest, userRequestScopes);\r\n            // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\r\n            const hash = await silentHandler.monitorIframeForHash(msalFrame, this.config.system.iframeHashTimeout);\r\n            // Handle response from hash string.\r\n            return await silentHandler.handleCodeResponse(hash);\r\n        } catch (e) {\r\n            this.browserStorage.cleanRequest();\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Logout\r\n\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param logoutRequest \r\n     */\r\n    async logout(logoutRequest?: EndSessionRequest): Promise<void> {\r\n        const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\r\n        const authClient = await this.createAuthCodeClient(validLogoutRequest && validLogoutRequest.authority);\r\n        // create logout string and navigate user window to logout. Auth module will clear cache.\r\n        const logoutUri: string = authClient.getLogoutUri(validLogoutRequest);\r\n        BrowserUtils.navigateWindow(logoutUri);\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Account APIs\r\n\r\n    /**\r\n     * Returns all accounts that MSAL currently has data for.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no state is found\r\n     * @returns {@link IAccount[]} - Array of account objects in cache\r\n     */\r\n    getAllAccounts(): AccountInfo[] {\r\n        return this.browserStorage.getAllAccounts();\r\n    }\r\n\r\n    /**\r\n     * Returns the signed in account matching username.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no state is found\r\n     * @returns {@link IAccount} - the account object stored in MSAL\r\n     */\r\n    getAccountByUsername(userName: string): AccountInfo {\r\n        const allAccounts = this.getAllAccounts();\r\n        return allAccounts.filter(accountObj => accountObj.username === userName)[0];\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Helpers\r\n\r\n    /**\r\n     *\r\n     * Use to get the redirect uri configured in MSAL or null.\r\n     * Evaluates redirectUri if its a function, otherwise simply returns its value.\r\n     * @returns {string} redirect URL\r\n     *\r\n     */\r\n    private getRedirectUri(requestRedirectUri?: string): string {\r\n        return requestRedirectUri || this.config.auth.redirectUri || BrowserUtils.getCurrentUri();\r\n    }\r\n\r\n    /**\r\n     * Use to get the post logout redirect uri configured in MSAL or null.\r\n     * Evaluates postLogoutredirectUri if its a function, otherwise simply returns its value.\r\n     *\r\n     * @returns {string} post logout redirect URL\r\n     */\r\n    private getPostLogoutRedirectUri(requestPostLogoutRedirectUri?: string): string {\r\n        return requestPostLogoutRedirectUri || this.config.auth.postLogoutRedirectUri || BrowserUtils.getCurrentUri();\r\n    }\r\n\r\n    /**\r\n     * Used to get a discovered version of the default authority.\r\n     */\r\n    private async getDiscoveredDefaultAuthority(): Promise<Authority> {\r\n        if (!this.defaultAuthority) {\r\n            this.defaultAuthority = await AuthorityFactory.createDiscoveredInstance(this.config.auth.authority, this.config.system.networkClient);\r\n        }\r\n        return this.defaultAuthority;\r\n    }\r\n\r\n    /**\r\n     * Helper to check whether interaction is in progress.\r\n     */\r\n    private interactionInProgress(): boolean {\r\n        // Check whether value in cache is present and equal to expected value\r\n        return (this.browserStorage.getItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY), CacheSchemaType.TEMPORARY) as string) === BrowserConstants.INTERACTION_IN_PROGRESS_VALUE;\r\n    }\r\n\r\n    /**\r\n     * Creates an Authorization Code Client with the given authority, or the default authority.\r\n     * @param authorityUrl \r\n     */\r\n    private async createAuthCodeClient(authorityUrl?: string): Promise<AuthorizationCodeClient> {\r\n        // Create auth module.\r\n        const clientConfig = await this.getClientConfiguration(authorityUrl);\r\n        return new AuthorizationCodeClient(clientConfig);\r\n    }\r\n\r\n    /**\r\n     * Creates an Silent Flow Client with the given authority, or the default authority.\r\n     * @param authorityUrl \r\n     */\r\n    private async createSilentFlowClient(authorityUrl?: string): Promise<SilentFlowClient> {\r\n        // Create auth module.\r\n        const clientConfig = await this.getClientConfiguration(authorityUrl);\r\n        return new SilentFlowClient(clientConfig);\r\n    }\r\n\r\n    /**\r\n     * Creates a Client Configuration object with the given request authority, or the default authority.\r\n     * @param requestAuthority \r\n     */\r\n    private async getClientConfiguration(requestAuthority?: string): Promise<ClientConfiguration> {\r\n        // If the requestAuthority is passed and is not equivalent to the default configured authority, create new authority and discover endpoints. Return default authority otherwise.\r\n        const discoveredAuthority = (!StringUtils.isEmpty(requestAuthority) && requestAuthority !== this.config.auth.authority) ? await AuthorityFactory.createDiscoveredInstance(requestAuthority, this.config.system.networkClient) \r\n            : await this.getDiscoveredDefaultAuthority();\r\n        return {\r\n            authOptions: {\r\n                clientId: this.config.auth.clientId,\r\n                authority: discoveredAuthority,\r\n                knownAuthorities: this.config.auth.knownAuthorities,\r\n                cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata\r\n            },\r\n            systemOptions: {\r\n                tokenRenewalOffsetSeconds: this.config.system.tokenRenewalOffsetSeconds,\r\n                telemetry: this.config.system.telemetry\r\n            },\r\n            loggerOptions: {\r\n                loggerCallback: this.config.system.loggerOptions.loggerCallback,\r\n                piiLoggingEnabled: this.config.system.loggerOptions.piiLoggingEnabled\r\n            },\r\n            cryptoInterface: this.browserCrypto,\r\n            networkInterface: this.networkClient,\r\n            storageInterface: this.browserStorage,\r\n            libraryInfo: {\r\n                sku: BrowserConstants.MSAL_SKU,\r\n                version: version,\r\n                cpu: \"\",\r\n                os: \"\"\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Helper to validate app environment before making a request.\r\n     */\r\n    private preflightInteractiveRequest(request: RedirectRequest|PopupRequest): AuthorizationUrlRequest {\r\n        // block the reload if it occurred inside a hidden iframe\r\n        BrowserUtils.blockReloadInHiddenIframes();\r\n\r\n        // Check if interaction is in progress. Throw error if true.\r\n        if (this.interactionInProgress()) {\r\n            throw BrowserAuthError.createInteractionInProgressError();\r\n        }\r\n        \r\n        return this.initializeAuthorizationRequest(request);\r\n    }\r\n\r\n    /**\r\n     * Initializer function for all request APIs\r\n     * @param request \r\n     */\r\n    private initializeBaseRequest(request: BaseAuthRequest): BaseAuthRequest {\r\n        const validatedRequest: BaseAuthRequest = {\r\n            ...request\r\n        };\r\n\r\n        if (StringUtils.isEmpty(validatedRequest.authority)) {\r\n            validatedRequest.authority = this.config.auth.authority;\r\n        }\r\n\r\n        validatedRequest.correlationId = (request && request.correlationId) || this.browserCrypto.createNewGuid();\r\n\r\n        return {\r\n            ...validatedRequest,\r\n            ...this.setDefaultScopes(validatedRequest)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Generates a request that will contain the openid and profile scopes.\r\n     * @param request \r\n     */\r\n    private setDefaultScopes(request: BaseAuthRequest): BaseAuthRequest {\r\n        return {\r\n            ...request,\r\n            scopes: [...((request && request.scopes) || []), Constants.OPENID_SCOPE, Constants.PROFILE_SCOPE]\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Helper to initialize required request parameters for interactive APIs and ssoSilent()\r\n     * @param request\r\n     */\r\n    private initializeAuthorizationRequest(request: AuthorizationUrlRequest|RedirectRequest|PopupRequest): AuthorizationUrlRequest {\r\n        let validatedRequest: AuthorizationUrlRequest = {\r\n            ...request\r\n        };\r\n\r\n        validatedRequest.redirectUri = this.getRedirectUri(validatedRequest.redirectUri);\r\n\r\n        // Check for ADAL SSO\r\n        if (StringUtils.isEmpty(validatedRequest.loginHint)) {\r\n            // Only check for adal token if no SSO params are being used\r\n            const adalIdTokenString = this.browserStorage.getItem(PersistentCacheKeys.ADAL_ID_TOKEN, CacheSchemaType.TEMPORARY) as string;\r\n            if (!StringUtils.isEmpty(adalIdTokenString)) {\r\n                const adalIdToken = new IdToken(adalIdTokenString, this.browserCrypto);\r\n                this.browserStorage.removeItem(PersistentCacheKeys.ADAL_ID_TOKEN);\r\n                if (adalIdToken.claims && adalIdToken.claims.upn) {\r\n                    validatedRequest.loginHint = adalIdToken.claims.upn;\r\n                }\r\n            }\r\n        }\r\n\r\n        validatedRequest.state = ProtocolUtils.setRequestState(\r\n            (request && request.state) || \"\",\r\n            this.browserCrypto\r\n        );\r\n\r\n        if (StringUtils.isEmpty(validatedRequest.nonce)) {\r\n            validatedRequest.nonce = this.browserCrypto.createNewGuid();\r\n        }\r\n        \r\n        validatedRequest.responseMode = ResponseMode.FRAGMENT;\r\n\r\n        validatedRequest = {\r\n            ...validatedRequest,\r\n            ...this.initializeBaseRequest(validatedRequest)\r\n        };\r\n\r\n        this.browserStorage.updateCacheEntries(validatedRequest.state, validatedRequest.nonce, validatedRequest.authority);\r\n\r\n        return validatedRequest;\r\n    }\r\n\r\n    /**\r\n     * Generates an auth code request tied to the url request.\r\n     * @param request \r\n     */\r\n    private async initializeAuthorizationCodeRequest(request: AuthorizationUrlRequest): Promise<AuthorizationCodeRequest> {\r\n        const generatedPkceParams = await this.browserCrypto.generatePkceCodes();\r\n\r\n        const authCodeRequest: AuthorizationCodeRequest = {\r\n            ...request,\r\n            redirectUri: request.redirectUri,\r\n            code: \"\",\r\n            codeVerifier: generatedPkceParams.verifier\r\n        };\r\n\r\n        request.codeChallenge = generatedPkceParams.challenge;\r\n        request.codeChallengeMethod = Constants.S256_CODE_CHALLENGE_METHOD;\r\n\r\n        return authCodeRequest;\r\n    }\r\n\r\n    /**\r\n     * Initializer for the logout request.\r\n     * @param logoutRequest \r\n     */\r\n    private initializeLogoutRequest(logoutRequest?: EndSessionRequest): EndSessionRequest {\r\n        const validLogoutRequest = {\r\n            ...logoutRequest\r\n        };\r\n        if (StringUtils.isEmpty(validLogoutRequest.authority)) {\r\n            validLogoutRequest.authority = this.config.auth.authority;\r\n        }\r\n\r\n        validLogoutRequest.correlationId = (validLogoutRequest && validLogoutRequest.correlationId) || this.browserCrypto.createNewGuid();\r\n\r\n        validLogoutRequest.postLogoutRedirectUri = this.getPostLogoutRedirectUri(logoutRequest ? logoutRequest.postLogoutRedirectUri : \"\");\r\n        \r\n        return validLogoutRequest;\r\n    }\r\n\r\n    // #endregion\r\n}\r\n"],"names":["extendStatics","__extends","__assign","__awaiter","__generator","__spreadArrays","LogLevel","DEFAULT_AUTH_OPTIONS","version"],"mappings":"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"}